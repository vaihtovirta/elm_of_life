{"version":3,"sources":["Main.elm","registerServiceWorker.js","index.js"],"names":["scope","F","arity","fun","wrapper","a","f","F2","b","F3","c","F4","d","F5","e","A2","A3","A4","A5","_List_Nil","$","_List_Cons","hd","tl","_List_cons","_List_fromArray","arr","out","i","length","_Utils_eq","x","y","pair","stack","isEqual","_Utils_eqHelp","pop","depth","push","_Utils_Tuple2","_Debug_crash","key","elm$core$Dict$toList","_Utils_cmp","ord","_Utils_compare","n","elm$core$Basics$LT","elm$core$Basics$GT","elm$core$Basics$EQ","_Utils_Tuple3","_Utils_update","oldRecord","updatedFields","newRecord","_JsArray_initialize","size","offset","func","result","Array","_JsArray_initializeFromList","max","ls","_JsArray_unsafeGet","index","array","_JsArray_unsafeSet","value","_JsArray_push","_JsArray_foldl","acc","_JsArray_foldr","_JsArray_map","_JsArray_indexedMap","_JsArray_slice","from","to","slice","_JsArray_appendN","dest","source","destLen","itemsToCopy","identifier","Error","_Basics_add","_Basics_ceiling","Math","ceil","_Basics_floor","floor","_Basics_log","log","_Json_decodePrim","decoder","_Json_expecting","elm$core$Result$Ok","isFinite","_Json_wrap","_Json_decodeString","String","_Json_decodeField","field","_Json_map1","d1","decoders","g","_Json_mapMany","_Json_run","_Json_runHelp","_Json_unwrap","_Json_isArray","_Json_runArrayDecoder","_Json_toElmArray","elm$core$Result$isOk","elm$core$Result$Err","elm$json$Json$Decode$Field","elm$json$Json$Decode$Index","keyValuePairs","hasOwnProperty","elm$core$List$reverse","answer","h","errors","temp","elm$json$Json$Decode$OneOf","elm$json$Json$Decode$Failure","toElmValue","len","isArray","FileList","elm$core$Array$initialize","type","_Json_equality","_Json_listEquality","aDecoders","bDecoders","_Scheduler_succeed","_Scheduler_binding","callback","_Scheduler_andThen","task","_Scheduler_guid","_Scheduler_rawSpawn","proc","_Scheduler_enqueue","_Scheduler_spawn","_Scheduler_rawSend","msg","_Scheduler_send","_Scheduler_working","_Scheduler_queue","shift","_Scheduler_step","rootTag","newRoot","_Platform_effectManagers","_Platform_createManager","init","onEffects","onSelfMsg","cmdMap","subMap","_Platform_instantiateManager","info","sendToApp","router","undefined","loop","state","j","_Platform_sendToApp","_Platform_sendToSelf","_Platform_leaf","home","k","l","_Platform_batch","list","m","_Platform_dispatchEffects","managers","cmdBag","subBag","effectsDict","_Platform_gatherEffects","isCmd","bag","taggers","effect","q","p","_Platform_toEffect","newEffect","effects","_Platform_insert","o","_VirtualDom_divertHrefToApp","_Time_setInterval","interval","id","setInterval","clearInterval","_VirtualDom_doc","document","_VirtualDom_appendChild","parent","child","appendChild","_VirtualDom_text","string","_VirtualDom_nodeNS","namespace","tag","factList","kidList","kids","descendantsCount","kid","_VirtualDom_organizeFacts","_VirtualDom_node","_VirtualDom_keyedNodeNS","_VirtualDom_passiveSupported","_VirtualDom_on","handler","_VirtualDom_style","_VirtualDom_property","_VirtualDom_attribute","facts","entry","subFacts","_VirtualDom_addClass","object","newClass","classes","_VirtualDom_render","vNode","eventNode","createTextNode","subNode","tagger","subEventRoot","domNode","elm_event_node_ref","_VirtualDom_applyFacts","createElementNS","createElement","addEventListener","_VirtualDom_applyStyles","_VirtualDom_applyEvents","_VirtualDom_applyAttrs","_VirtualDom_applyAttrsNS","styles","domNodeStyle","style","attrs","setAttribute","removeAttribute","nsAttrs","setAttributeNS","removeAttributeNS","events","allCallbacks","elmFs","newHandler","oldCallback","removeEventListener","_VirtualDom_makeCallback","passive","elm$virtual_dom$VirtualDom$toHandlerInt","window","Object","defineProperty","get","initialHandler","event","message","s","stopPropagation","_","currentEventNode","Y","preventDefault","_VirtualDom_equalEvents","_VirtualDom_pushPatch","patches","data","patch","r","t","u","_VirtualDom_diffHelp","xType","yType","keyedNode","keyedKids","_VirtualDom_dekey","xRefs","yRefs","same","subPatches","xTaggers","yTaggers","nesting","xSubNode","ySubNode","as","bs","_VirtualDom_pairwiseRefEqual","_VirtualDom_diffNodes","_VirtualDom_diffKids","_VirtualDom_diffKeyedKids","factsDiff","_VirtualDom_diffFacts","diffKids","category","diff","xKey","xValue","yValue","subDiff","yKey","xParent","yParent","xKids","yKids","xLen","yLen","v","minLen","xKid","rootIndex","localPatches","changes","inserts","xIndex","yIndex","xNode","yNode","newMatch","oldMatch","xNext","yNext","xNextKey","xNextNode","yNextKey","yNextNode","_VirtualDom_insertNode","_VirtualDom_removeNode","endInserts","w","_VirtualDom_POSTFIX","vnode","A","z","_VirtualDom_applyPatches","rootDomNode","oldVirtualNode","_VirtualDom_addDomNodes","_VirtualDom_addDomNodesHelp","low","high","patchType","vKids","childNodes","vKid","nextLow","_VirtualDom_applyPatchesHelp","localDomNode","newNode","_VirtualDom_applyPatch","parentNode","replaceChild","_VirtualDom_applyPatchRedraw","replaceData","removeChild","theEnd","insertBefore","frag","createDocumentFragment","_VirtualDom_applyPatchReorderEndInsertsHelp","insert","node","_VirtualDom_applyPatchReorder","_Browser_element","impl","flagDecoder","debugMetadata","args","update","subscriptions","stepperBuilder","model","stepper","ports","manager","_Platform_setupEffects","viewMetadata","_Platform_initialize","aO","aZ","aX","initialModel","view","a$","currNode","_VirtualDom_virtualize","nodeType","textContent","attrList","attributes","attr","name","tagName","toLowerCase","draw","updateIfNeeded","_Browser_requestAnimationFrame","nextModel","isSync","_Browser_makeAnimator","nextNode","_VirtualDom_diff","cancelAnimationFrame","requestAnimationFrame","setTimeout","assocs","millisToPosix","Kraxorax$elm_matrix_a$Matrix$Matrix","elm$core$Array$Array_elm_builtin","elm$core$Dict$foldr","left","$temp$func","$temp$acc","elm$core$List$cons","dict","elm$core$Elm$JsArray$foldr","elm$core$Array$foldr","baseCase","_n0","tree","tail","helper","elm$core$Array$toList","elm$core$Basics$ceiling","elm$core$Basics$logBase","base","number","elm$core$Array$shiftStep","elm$core$Elm$JsArray$empty","elm$core$Array$empty","elm$core$Array$Leaf","elm$core$Array$SubTree","elm$core$Elm$JsArray$initializeFromList","elm$core$List$foldl","xs","elm$core$Array$compressNodes","nodes","remainingNodes","newAcc","elm$core$Array$treeFromBuilder","nodeList","nodeListSize","newNodeSize","elm$core$Basics$add","elm$core$Basics$floor","elm$core$Basics$max","elm$core$Elm$JsArray$length","elm$core$Array$builderToArray","reverseNodeList","builder","treeLen","correctNodeList","elm$core$Elm$JsArray$initialize","elm$core$Array$initializeHelp","fn","fromIndex","leaf","tailLen","Kraxorax$elm_matrix_a$Matrix$generate","elm$core$Maybe$Just","elm$core$Maybe$Nothing","elm$core$String$fromInt","author$project$MatrixUtils$cellId","author$project$MatrixUtils$blinkers","author$project$MatrixUtils$glider","elm$core$Dict$RBEmpty_elm_builtin","elm$core$Dict$empty","elm$core$Dict$RBNode_elm_builtin","elm$core$Basics$compare","elm$core$Dict$balance","color","right","_n6","lRight","rK","rV","rLeft","rRight","elm$core$Dict$insertHelp","nColor","nKey","nValue","nLeft","nRight","elm$core$Dict$insert","author$project$MatrixUtils$patterns","elm$core$Dict$get","targetKey","elm$core$List$foldrHelper","ctr","r1","r2","r3","r4","elm$core$List$foldr","elm$core$List$filter","isGood","author$project$MatrixUtils$isIncludedInPattern","itemX","itemY","pattern","author$project$Types$Cell","posX","posY","alive","aC","aM","aU","aV","author$project$MatrixUtils$fieldMatrix","patternName","author$project$MatrixUtils$getPattern","elm$core$Elm$JsArray$appendN","elm$core$Elm$JsArray$slice","elm$core$Array$appendHelpBuilder","notAppended","appended","elm$core$Array$bitMask","elm$core$Elm$JsArray$push","elm$core$Elm$JsArray$singleton","elm$core$Elm$JsArray$unsafeGet","elm$core$Elm$JsArray$unsafeSet","elm$core$Array$insertTailInTree","pos","newSub","elm$core$Array$unsafeReplaceTail","newTail","startShift","originalTailLen","newTailLen","newArrayLen","newShift","newTree","elm$core$Array$appendHelpTree","toAppend","itemsToAppend","newArray","elm$core$Elm$JsArray$foldl","elm$core$Array$append","foldHelper","bTree","bTail","elm$core$Array$branchFactor","Kraxorax$elm_matrix_a$Matrix$toArray","elm$core$Array$fromListHelp","jsArray","remainingItems","elm$core$Array$fromList","elm$core$Array$filter","author$project$MatrixUtils$getAliveCells","matrix","elm$core$List$length","elm$core$Platform$Cmd$none","author$project$Msgs$Tick","elm$core$Platform$Sub$none","elm$time$Time$Every","elm$core$Task$succeed","elm$time$Time$State","processes","aq","ay","elm$time$Time$init","elm$core$Dict$foldl","elm$core$Dict$merge","leftStep","bothStep","rightStep","leftDict","rightDict","initialResult","_n3","rKey","rValue","stepState","_n2","lKey","lValue","rest","leftovers","intermediateResult","_n4","elm$core$Task$andThen","elm$time$Time$addMySub","_n1","elm$core$Platform$sendToSelf","elm$core$Process$spawn","elm$time$Time$setInterval","elm$time$Time$spawnHelp","intervals","spawnTimer","elm$time$Time$onEffects","subs","_n7","kills","newTaggers","existing","spawnList","existingDict","newProcesses","elm$core$List$map","elm$core$Platform$sendToApp","elm$core$Task$map2","taskA","taskB","elm$core$Task$sequence","tasks","elm$time$Time$now","Date","now","elm$time$Time$onSelfMsg","time","elm$core$Basics$composeL","elm$time$Time$subscription","elm$time$Time$every","elm$core$Elm$JsArray$map","elm$core$Array$map","Kraxorax$elm_matrix_a$Matrix$map","row","ele","elm$core$Array$getHelp","elm$core$Array$tailIndex","elm$core$Array$get","elm$core$Array$setHelp","elm$core$Array$set","Kraxorax$elm_matrix_a$Matrix$set","Kraxorax$elm_matrix_a$Matrix$getRow","Kraxorax$elm_matrix_a$Neighbours$flatten","elm$core$Array$length","Kraxorax$elm_matrix_a$Matrix$height","elm$core$Result$withDefault","def","Kraxorax$elm_matrix_a$Neighbours$orEmpty","elm$core$Array$repeat","Kraxorax$elm_matrix_a$Neighbours$getBoundSideRows","Kraxorax$elm_matrix_a$Neighbours$modulo","elm$core$List$drop","drop","elm$core$Array$sliceLeft","skipNodes","leafNodes","nodesToInsert","head","initialBuilder","elm$core$Array$fetchNewTail","end","treeEnd","elm$core$Array$hoistTree","oldShift","elm$core$Array$sliceTree","endIdx","lastPos","elm$core$Array$sliceRight","elm$core$Array$translateIndex","posIndex","elm$core$Array$slice","correctTo","correctFrom","Kraxorax$elm_matrix_a$Neighbours$unboundHorizontalCenter","mw","start","Kraxorax$elm_matrix_a$Neighbours$unboundHorizontalSide","Kraxorax$elm_matrix_a$Neighbours$neighboursOnHorizontalStrip","rowSides","sideNbrs","rowCenter","Kraxorax$elm_matrix_a$Neighbours$boundHorizontalCenter","Kraxorax$elm_matrix_a$Neighbours$boundHorizontalSide","Kraxorax$elm_matrix_a$Neighbours$neighboursOnPlane","Kraxorax$elm_matrix_a$Neighbours$getUnboundSideRows","mh","Kraxorax$elm_matrix_a$Neighbours$neighboursOnTorus","Kraxorax$elm_matrix_a$Neighbours$neighboursOnVerticalStrip","Kraxorax$elm_matrix_a$Neighbours$neighbours","mt","author$project$MatrixUtils$cellNeighbours","author$project$MatrixUtils$liveNeighboursCount","cell","author$project$MatrixUtils$isAlive","count","author$project$MatrixUtils$detectFate","elm$core$List$append","ys","elm$core$Set$empty","elm$core$Set$insert","elm$core$Dict$member","elm$core$Set$member","elm_community$list_extra$List$Extra$uniqueHelp","remaining","accumulator","first","computedFirst","elm_community$list_extra$List$Extra$uniqueBy","author$project$Main$buildNewGeneration","generation","live","resultGen","resultAlives","fate","lists","author$project$Main$toggle","elm$core$Elm$JsArray$indexedMap","elm$core$Array$indexedMap","mappedLeaf","Kraxorax$elm_matrix_a$Matrix$indexedMap","author$project$Msgs$RandomField","elm$random$Random$Seed","elm$random$Random$next","incr","elm$random$Random$init","elm$random$Random$initialSeed","elm$random$Random$step","seed","elm$random$Random$onEffects","commands","newSeed","elm$random$Random$onSelfMsg","elm$random$Random$map","genA","seed0","seed1","exports","elm$random$Random$command","elm$random$Random$generate","generator","elm$random$Random$listHelp","revList","gen","elm$random$Random$list","elm$core$Basics$abs","elm$random$Random$peel","word","elm$random$Random$float","range","n1","elm$random$Random$getByWeight","others","countdown","weight","second","otherOthers","elm$random$Random$weighted","normalize","total","author$project$Main$update","aliveCells","isTicking","newGeneration","L","author$project$MatrixUtils$randomFieldMatrix","author$project$CellUtils$rectPosition","elm$json$Json$Decode$map","elm$json$Json$Decode$succeed","elm$svg$Svg$trustedNode","elm$svg$Svg$rect","elm$svg$Svg$Attributes$fill","elm$svg$Svg$Attributes$height","elm$svg$Svg$Attributes$stroke","elm$svg$Svg$Attributes$width","elm$svg$Svg$Attributes$x","elm$svg$Svg$Attributes$y","elm$virtual_dom$VirtualDom$on","elm$html$Html$Events$on","author$project$CellUtils$cellRect","onClickHanlder","author$project$CellUtils$fillColor","author$project$CellUtils$cellList","item","author$project$Msgs$ChangePattern","author$project$Msgs$ToggleTicking","elm$html$Html$button","elm$html$Html$div","elm$html$Html$option","elm$html$Html$select","elm$html$Html$text","elm$json$Json$Encode$string","elm$html$Html$Attributes$stringProperty","elm$html$Html$Attributes$class","elm$html$Html$Attributes$style","elm$html$Html$Attributes$value","elm$html$Html$Events$onClick","elm$html$Html$Events$alwaysStop","elm$html$Html$Events$stopPropagationOn","elm$json$Json$Decode$field","elm$json$Json$Decode$string","elm$html$Html$Events$targetValue","fields","elm$svg$Svg$svg","elm$svg$Svg$Attributes$viewBox","elm$core$Task$init","elm$core$Task$map","elm$core$Task$spawnCmd","Main","glider","selectedPattern","author$project$Main$buttonText","author$project$Main$main","_Platform_mergeExportsProd","obj","this","isLocalhost","registerValidSW","swUrl","navigator","registration","installingWorker","installing","controller","console","error","Elm","URL","process","location","publicUrl","origin","concat","fetch","response","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.31484aad.chunk.js","sourcesContent":["(function(scope){\n'use strict';\n\nfunction F(arity, fun, wrapper) {\n  wrapper.a = arity;\n  wrapper.f = fun;\n  return wrapper;\n}\n\nfunction F2(fun) {\n  return F(2, fun, function(a) { return function(b) { return fun(a,b); }; })\n}\nfunction F3(fun) {\n  return F(3, fun, function(a) {\n    return function(b) { return function(c) { return fun(a, b, c); }; };\n  });\n}\nfunction F4(fun) {\n  return F(4, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return fun(a, b, c, d); }; }; };\n  });\n}\nfunction F5(fun) {\n  return F(5, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };\n  });\n}\nfunction F6(fun) {\n  return F(6, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return fun(a, b, c, d, e, f); }; }; }; }; };\n  });\n}\nfunction F7(fun) {\n  return F(7, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };\n  });\n}\nfunction F8(fun) {\n  return F(8, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) {\n    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };\n  });\n}\nfunction F9(fun) {\n  return F(9, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) { return function(i) {\n    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };\n  });\n}\n\nfunction A2(fun, a, b) {\n  return fun.a === 2 ? fun.f(a, b) : fun(a)(b);\n}\nfunction A3(fun, a, b, c) {\n  return fun.a === 3 ? fun.f(a, b, c) : fun(a)(b)(c);\n}\nfunction A4(fun, a, b, c, d) {\n  return fun.a === 4 ? fun.f(a, b, c, d) : fun(a)(b)(c)(d);\n}\nfunction A5(fun, a, b, c, d, e) {\n  return fun.a === 5 ? fun.f(a, b, c, d, e) : fun(a)(b)(c)(d)(e);\n}\nfunction A6(fun, a, b, c, d, e, f) {\n  return fun.a === 6 ? fun.f(a, b, c, d, e, f) : fun(a)(b)(c)(d)(e)(f);\n}\nfunction A7(fun, a, b, c, d, e, f, g) {\n  return fun.a === 7 ? fun.f(a, b, c, d, e, f, g) : fun(a)(b)(c)(d)(e)(f)(g);\n}\nfunction A8(fun, a, b, c, d, e, f, g, h) {\n  return fun.a === 8 ? fun.f(a, b, c, d, e, f, g, h) : fun(a)(b)(c)(d)(e)(f)(g)(h);\n}\nfunction A9(fun, a, b, c, d, e, f, g, h, i) {\n  return fun.a === 9 ? fun.f(a, b, c, d, e, f, g, h, i) : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);\n}\n\n\n\n\nvar _List_Nil = { $: 0 };\nvar _List_Nil_UNUSED = { $: '[]' };\n\nfunction _List_Cons(hd, tl) { return { $: 1, a: hd, b: tl }; }\nfunction _List_Cons_UNUSED(hd, tl) { return { $: '::', a: hd, b: tl }; }\n\n\nvar _List_cons = F2(_List_Cons);\n\nfunction _List_fromArray(arr)\n{\n\tvar out = _List_Nil;\n\tfor (var i = arr.length; i--; )\n\t{\n\t\tout = _List_Cons(arr[i], out);\n\t}\n\treturn out;\n}\n\nfunction _List_toArray(xs)\n{\n\tfor (var out = []; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tout.push(xs.a);\n\t}\n\treturn out;\n}\n\nvar _List_map2 = F3(function(f, xs, ys)\n{\n\tfor (var arr = []; xs.b && ys.b; xs = xs.b, ys = ys.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A2(f, xs.a, ys.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map3 = F4(function(f, xs, ys, zs)\n{\n\tfor (var arr = []; xs.b && ys.b && zs.b; xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A3(f, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map4 = F5(function(f, ws, xs, ys, zs)\n{\n\tfor (var arr = []; ws.b && xs.b && ys.b && zs.b; ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A4(f, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map5 = F6(function(f, vs, ws, xs, ys, zs)\n{\n\tfor (var arr = []; vs.b && ws.b && xs.b && ys.b && zs.b; vs = vs.b, ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A5(f, vs.a, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_sortBy = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\treturn _Utils_cmp(f(a), f(b));\n\t}));\n});\n\nvar _List_sortWith = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\tvar ord = A2(f, a, b);\n\t\treturn ord === elm$core$Basics$EQ ? 0 : ord === elm$core$Basics$LT ? -1 : 1;\n\t}));\n});\n\n\n\n// EQUALITY\n\nfunction _Utils_eq(x, y)\n{\n\tfor (\n\t\tvar pair, stack = [], isEqual = _Utils_eqHelp(x, y, 0, stack);\n\t\tisEqual && (pair = stack.pop());\n\t\tisEqual = _Utils_eqHelp(pair.a, pair.b, 0, stack)\n\t\t)\n\t{}\n\n\treturn isEqual;\n}\n\nfunction _Utils_eqHelp(x, y, depth, stack)\n{\n\tif (depth > 100)\n\t{\n\t\tstack.push(_Utils_Tuple2(x,y));\n\t\treturn true;\n\t}\n\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (typeof x !== 'object' || x === null || y === null)\n\t{\n\t\ttypeof x === 'function' && _Debug_crash(5);\n\t\treturn false;\n\t}\n\n\t/**_UNUSED/\n\tif (x.$ === 'Set_elm_builtin')\n\t{\n\t\tx = elm$core$Set$toList(x);\n\t\ty = elm$core$Set$toList(y);\n\t}\n\tif (x.$ === 'RBNode_elm_builtin' || x.$ === 'RBEmpty_elm_builtin')\n\t{\n\t\tx = elm$core$Dict$toList(x);\n\t\ty = elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\t/**/\n\tif (x.$ < 0)\n\t{\n\t\tx = elm$core$Dict$toList(x);\n\t\ty = elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\tfor (var key in x)\n\t{\n\t\tif (!_Utils_eqHelp(x[key], y[key], depth + 1, stack))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nvar _Utils_equal = F2(_Utils_eq);\nvar _Utils_notEqual = F2(function(a, b) { return !_Utils_eq(a,b); });\n\n\n\n// COMPARISONS\n\n// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on\n// the particular integer values assigned to LT, EQ, and GT.\n\nfunction _Utils_cmp(x, y, ord)\n{\n\tif (typeof x !== 'object')\n\t{\n\t\treturn x === y ? /*EQ*/ 0 : x < y ? /*LT*/ -1 : /*GT*/ 1;\n\t}\n\n\t/**_UNUSED/\n\tif (x instanceof String)\n\t{\n\t\tvar a = x.valueOf();\n\t\tvar b = y.valueOf();\n\t\treturn a === b ? 0 : a < b ? -1 : 1;\n\t}\n\t//*/\n\n\t/**/\n\tif (typeof x.$ === 'undefined')\n\t//*/\n\t/**_UNUSED/\n\tif (x.$[0] === '#')\n\t//*/\n\t{\n\t\treturn (ord = _Utils_cmp(x.a, y.a))\n\t\t\t? ord\n\t\t\t: (ord = _Utils_cmp(x.b, y.b))\n\t\t\t\t? ord\n\t\t\t\t: _Utils_cmp(x.c, y.c);\n\t}\n\n\t// traverse conses until end of a list or a mismatch\n\tfor (; x.b && y.b && !(ord = _Utils_cmp(x.a, y.a)); x = x.b, y = y.b) {} // WHILE_CONSES\n\treturn ord || (x.b ? /*GT*/ 1 : y.b ? /*LT*/ -1 : /*EQ*/ 0);\n}\n\nvar _Utils_lt = F2(function(a, b) { return _Utils_cmp(a, b) < 0; });\nvar _Utils_le = F2(function(a, b) { return _Utils_cmp(a, b) < 1; });\nvar _Utils_gt = F2(function(a, b) { return _Utils_cmp(a, b) > 0; });\nvar _Utils_ge = F2(function(a, b) { return _Utils_cmp(a, b) >= 0; });\n\nvar _Utils_compare = F2(function(x, y)\n{\n\tvar n = _Utils_cmp(x, y);\n\treturn n < 0 ? elm$core$Basics$LT : n ? elm$core$Basics$GT : elm$core$Basics$EQ;\n});\n\n\n// COMMON VALUES\n\nvar _Utils_Tuple0 = 0;\nvar _Utils_Tuple0_UNUSED = { $: '#0' };\n\nfunction _Utils_Tuple2(a, b) { return { a: a, b: b }; }\nfunction _Utils_Tuple2_UNUSED(a, b) { return { $: '#2', a: a, b: b }; }\n\nfunction _Utils_Tuple3(a, b, c) { return { a: a, b: b, c: c }; }\nfunction _Utils_Tuple3_UNUSED(a, b, c) { return { $: '#3', a: a, b: b, c: c }; }\n\nfunction _Utils_chr(c) { return c; }\nfunction _Utils_chr_UNUSED(c) { return new String(c); }\n\n\n// RECORDS\n\nfunction _Utils_update(oldRecord, updatedFields)\n{\n\tvar newRecord = {};\n\n\tfor (var key in oldRecord)\n\t{\n\t\tnewRecord[key] = oldRecord[key];\n\t}\n\n\tfor (var key in updatedFields)\n\t{\n\t\tnewRecord[key] = updatedFields[key];\n\t}\n\n\treturn newRecord;\n}\n\n\n// APPEND\n\nvar _Utils_append = F2(_Utils_ap);\n\nfunction _Utils_ap(xs, ys)\n{\n\t// append Strings\n\tif (typeof xs === 'string')\n\t{\n\t\treturn xs + ys;\n\t}\n\n\t// append Lists\n\tif (!xs.b)\n\t{\n\t\treturn ys;\n\t}\n\tvar root = _List_Cons(xs.a, ys);\n\txs = xs.b\n\tfor (var curr = root; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tcurr = curr.b = _List_Cons(xs.a, ys);\n\t}\n\treturn root;\n}\n\n\n\nvar _JsArray_empty = [];\n\nfunction _JsArray_singleton(value)\n{\n    return [value];\n}\n\nfunction _JsArray_length(array)\n{\n    return array.length;\n}\n\nvar _JsArray_initialize = F3(function(size, offset, func)\n{\n    var result = new Array(size);\n\n    for (var i = 0; i < size; i++)\n    {\n        result[i] = func(offset + i);\n    }\n\n    return result;\n});\n\nvar _JsArray_initializeFromList = F2(function (max, ls)\n{\n    var result = new Array(max);\n\n    for (var i = 0; i < max && ls.b; i++)\n    {\n        result[i] = ls.a;\n        ls = ls.b;\n    }\n\n    result.length = i;\n    return _Utils_Tuple2(result, ls);\n});\n\nvar _JsArray_unsafeGet = F2(function(index, array)\n{\n    return array[index];\n});\n\nvar _JsArray_unsafeSet = F3(function(index, value, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[index] = value;\n    return result;\n});\n\nvar _JsArray_push = F2(function(value, array)\n{\n    var length = array.length;\n    var result = new Array(length + 1);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[length] = value;\n    return result;\n});\n\nvar _JsArray_foldl = F3(function(func, acc, array)\n{\n    var length = array.length;\n\n    for (var i = 0; i < length; i++)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_foldr = F3(function(func, acc, array)\n{\n    for (var i = array.length - 1; i >= 0; i--)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_map = F2(function(func, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = func(array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_indexedMap = F3(function(func, offset, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = A2(func, offset + i, array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_slice = F3(function(from, to, array)\n{\n    return array.slice(from, to);\n});\n\nvar _JsArray_appendN = F3(function(n, dest, source)\n{\n    var destLen = dest.length;\n    var itemsToCopy = n - destLen;\n\n    if (itemsToCopy > source.length)\n    {\n        itemsToCopy = source.length;\n    }\n\n    var size = destLen + itemsToCopy;\n    var result = new Array(size);\n\n    for (var i = 0; i < destLen; i++)\n    {\n        result[i] = dest[i];\n    }\n\n    for (var i = 0; i < itemsToCopy; i++)\n    {\n        result[i + destLen] = source[i];\n    }\n\n    return result;\n});\n\n\n\n// LOG\n\nvar _Debug_log = F2(function(tag, value)\n{\n\treturn value;\n});\n\nvar _Debug_log_UNUSED = F2(function(tag, value)\n{\n\tconsole.log(tag + ': ' + _Debug_toString(value));\n\treturn value;\n});\n\n\n// TODOS\n\nfunction _Debug_todo(moduleName, region)\n{\n\treturn function(message) {\n\t\t_Debug_crash(8, moduleName, region, message);\n\t};\n}\n\nfunction _Debug_todoCase(moduleName, region, value)\n{\n\treturn function(message) {\n\t\t_Debug_crash(9, moduleName, region, value, message);\n\t};\n}\n\n\n// TO STRING\n\nfunction _Debug_toString(value)\n{\n\treturn '<internals>';\n}\n\nfunction _Debug_toString_UNUSED(value)\n{\n\treturn _Debug_toAnsiString(false, value);\n}\n\nfunction _Debug_toAnsiString(ansi, value)\n{\n\tif (typeof value === 'function')\n\t{\n\t\treturn _Debug_internalColor(ansi, '<function>');\n\t}\n\n\tif (typeof value === 'boolean')\n\t{\n\t\treturn _Debug_ctorColor(ansi, value ? 'True' : 'False');\n\t}\n\n\tif (typeof value === 'number')\n\t{\n\t\treturn _Debug_numberColor(ansi, value + '');\n\t}\n\n\tif (value instanceof String)\n\t{\n\t\treturn _Debug_charColor(ansi, \"'\" + _Debug_addSlashes(value, true) + \"'\");\n\t}\n\n\tif (typeof value === 'string')\n\t{\n\t\treturn _Debug_stringColor(ansi, '\"' + _Debug_addSlashes(value, false) + '\"');\n\t}\n\n\tif (typeof value === 'object' && '$' in value)\n\t{\n\t\tvar tag = value.$;\n\n\t\tif (typeof tag === 'number')\n\t\t{\n\t\t\treturn _Debug_internalColor(ansi, '<internals>');\n\t\t}\n\n\t\tif (tag[0] === '#')\n\t\t{\n\t\t\tvar output = [];\n\t\t\tfor (var k in value)\n\t\t\t{\n\t\t\t\tif (k === '$') continue;\n\t\t\t\toutput.push(_Debug_toAnsiString(ansi, value[k]));\n\t\t\t}\n\t\t\treturn '(' + output.join(',') + ')';\n\t\t}\n\n\t\tif (tag === 'Set_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Set')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Set$toList(value));\n\t\t}\n\n\t\tif (tag === 'RBNode_elm_builtin' || tag === 'RBEmpty_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Dict')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Dict$toList(value));\n\t\t}\n\n\t\tif (tag === 'Array_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Array')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Array$toList(value));\n\t\t}\n\n\t\tif (tag === '::' || tag === '[]')\n\t\t{\n\t\t\tvar output = '[';\n\n\t\t\tvalue.b && (output += _Debug_toAnsiString(ansi, value.a), value = value.b)\n\n\t\t\tfor (; value.b; value = value.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\toutput += ',' + _Debug_toAnsiString(ansi, value.a);\n\t\t\t}\n\t\t\treturn output + ']';\n\t\t}\n\n\t\tvar output = '';\n\t\tfor (var i in value)\n\t\t{\n\t\t\tif (i === '$') continue;\n\t\t\tvar str = _Debug_toAnsiString(ansi, value[i]);\n\t\t\tvar c0 = str[0];\n\t\t\tvar parenless = c0 === '{' || c0 === '(' || c0 === '[' || c0 === '<' || c0 === '\"' || str.indexOf(' ') < 0;\n\t\t\toutput += ' ' + (parenless ? str : '(' + str + ')');\n\t\t}\n\t\treturn _Debug_ctorColor(ansi, tag) + output;\n\t}\n\n\tif (typeof DataView === 'function' && value instanceof DataView)\n\t{\n\t\treturn _Debug_stringColor(ansi, '<' + value.byteLength + ' bytes>');\n\t}\n\n\tif (typeof File === 'function' && value instanceof File)\n\t{\n\t\treturn _Debug_internalColor(ansi, '<' + value.name + '>');\n\t}\n\n\tif (typeof value === 'object')\n\t{\n\t\tvar output = [];\n\t\tfor (var key in value)\n\t\t{\n\t\t\tvar field = key[0] === '_' ? key.slice(1) : key;\n\t\t\toutput.push(_Debug_fadeColor(ansi, field) + ' = ' + _Debug_toAnsiString(ansi, value[key]));\n\t\t}\n\t\tif (output.length === 0)\n\t\t{\n\t\t\treturn '{}';\n\t\t}\n\t\treturn '{ ' + output.join(', ') + ' }';\n\t}\n\n\treturn _Debug_internalColor(ansi, '<internals>');\n}\n\nfunction _Debug_addSlashes(str, isChar)\n{\n\tvar s = str\n\t\t.replace(/\\\\/g, '\\\\\\\\')\n\t\t.replace(/\\n/g, '\\\\n')\n\t\t.replace(/\\t/g, '\\\\t')\n\t\t.replace(/\\r/g, '\\\\r')\n\t\t.replace(/\\v/g, '\\\\v')\n\t\t.replace(/\\0/g, '\\\\0');\n\n\tif (isChar)\n\t{\n\t\treturn s.replace(/\\'/g, '\\\\\\'');\n\t}\n\telse\n\t{\n\t\treturn s.replace(/\\\"/g, '\\\\\"');\n\t}\n}\n\nfunction _Debug_ctorColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[96m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_numberColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[95m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_stringColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[93m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_charColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[92m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_fadeColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[37m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_internalColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[94m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_toHexDigit(n)\n{\n\treturn String.fromCharCode(n < 10 ? 48 + n : 55 + n);\n}\n\n\n// CRASH\n\n\nfunction _Debug_crash(identifier)\n{\n\tthrow new Error('https://github.com/elm/core/blob/1.0.0/hints/' + identifier + '.md');\n}\n\n\nfunction _Debug_crash_UNUSED(identifier, fact1, fact2, fact3, fact4)\n{\n\tswitch(identifier)\n\t{\n\t\tcase 0:\n\t\t\tthrow new Error('What node should I take over? In JavaScript I need something like:\\n\\n    Elm.Main.init({\\n        node: document.getElementById(\"elm-node\")\\n    })\\n\\nYou need to do this with any Browser.sandbox or Browser.element program.');\n\n\t\tcase 1:\n\t\t\tthrow new Error('Browser.application programs cannot handle URLs like this:\\n\\n    ' + document.location.href + '\\n\\nWhat is the root? The root of your file system? Try looking at this program with `elm reactor` or some other server.');\n\n\t\tcase 2:\n\t\t\tvar jsonErrorString = fact1;\n\t\t\tthrow new Error('Problem with the flags given to your Elm program on initialization.\\n\\n' + jsonErrorString);\n\n\t\tcase 3:\n\t\t\tvar portName = fact1;\n\t\t\tthrow new Error('There can only be one port named `' + portName + '`, but your program has multiple.');\n\n\t\tcase 4:\n\t\t\tvar portName = fact1;\n\t\t\tvar problem = fact2;\n\t\t\tthrow new Error('Trying to send an unexpected type of value through port `' + portName + '`:\\n' + problem);\n\n\t\tcase 5:\n\t\t\tthrow new Error('Trying to use `(==)` on functions.\\nThere is no way to know if functions are \"the same\" in the Elm sense.\\nRead more about this at https://package.elm-lang.org/packages/elm/core/latest/Basics#== which describes why it is this way and what the better version will look like.');\n\n\t\tcase 6:\n\t\t\tvar moduleName = fact1;\n\t\t\tthrow new Error('Your page is loading multiple Elm scripts with a module named ' + moduleName + '. Maybe a duplicate script is getting loaded accidentally? If not, rename one of them so I know which is which!');\n\n\t\tcase 8:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar message = fact3;\n\t\t\tthrow new Error('TODO in module `' + moduleName + '` ' + _Debug_regionToString(region) + '\\n\\n' + message);\n\n\t\tcase 9:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar value = fact3;\n\t\t\tvar message = fact4;\n\t\t\tthrow new Error(\n\t\t\t\t'TODO in module `' + moduleName + '` from the `case` expression '\n\t\t\t\t+ _Debug_regionToString(region) + '\\n\\nIt received the following value:\\n\\n    '\n\t\t\t\t+ _Debug_toString(value).replace('\\n', '\\n    ')\n\t\t\t\t+ '\\n\\nBut the branch that handles it says:\\n\\n    ' + message.replace('\\n', '\\n    ')\n\t\t\t);\n\n\t\tcase 10:\n\t\t\tthrow new Error('Bug in https://github.com/elm/virtual-dom/issues');\n\n\t\tcase 11:\n\t\t\tthrow new Error('Cannot perform mod 0. Division by zero error.');\n\t}\n}\n\nfunction _Debug_regionToString(region)\n{\n\tif (region.Z.I === region.ad.I)\n\t{\n\t\treturn 'on line ' + region.Z.I;\n\t}\n\treturn 'on lines ' + region.Z.I + ' through ' + region.ad.I;\n}\n\n\n\n// MATH\n\nvar _Basics_add = F2(function(a, b) { return a + b; });\nvar _Basics_sub = F2(function(a, b) { return a - b; });\nvar _Basics_mul = F2(function(a, b) { return a * b; });\nvar _Basics_fdiv = F2(function(a, b) { return a / b; });\nvar _Basics_idiv = F2(function(a, b) { return (a / b) | 0; });\nvar _Basics_pow = F2(Math.pow);\n\nvar _Basics_remainderBy = F2(function(b, a) { return a % b; });\n\n// https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/divmodnote-letter.pdf\nvar _Basics_modBy = F2(function(modulus, x)\n{\n\tvar answer = x % modulus;\n\treturn modulus === 0\n\t\t? _Debug_crash(11)\n\t\t:\n\t((answer > 0 && modulus < 0) || (answer < 0 && modulus > 0))\n\t\t? answer + modulus\n\t\t: answer;\n});\n\n\n// TRIGONOMETRY\n\nvar _Basics_pi = Math.PI;\nvar _Basics_e = Math.E;\nvar _Basics_cos = Math.cos;\nvar _Basics_sin = Math.sin;\nvar _Basics_tan = Math.tan;\nvar _Basics_acos = Math.acos;\nvar _Basics_asin = Math.asin;\nvar _Basics_atan = Math.atan;\nvar _Basics_atan2 = F2(Math.atan2);\n\n\n// MORE MATH\n\nfunction _Basics_toFloat(x) { return x; }\nfunction _Basics_truncate(n) { return n | 0; }\nfunction _Basics_isInfinite(n) { return n === Infinity || n === -Infinity; }\n\nvar _Basics_ceiling = Math.ceil;\nvar _Basics_floor = Math.floor;\nvar _Basics_round = Math.round;\nvar _Basics_sqrt = Math.sqrt;\nvar _Basics_log = Math.log;\nvar _Basics_isNaN = isNaN;\n\n\n// BOOLEANS\n\nfunction _Basics_not(bool) { return !bool; }\nvar _Basics_and = F2(function(a, b) { return a && b; });\nvar _Basics_or  = F2(function(a, b) { return a || b; });\nvar _Basics_xor = F2(function(a, b) { return a !== b; });\n\n\n\nvar _String_cons = F2(function(chr, str)\n{\n\treturn chr + str;\n});\n\nfunction _String_uncons(string)\n{\n\tvar word = string.charCodeAt(0);\n\treturn word\n\t\t? elm$core$Maybe$Just(\n\t\t\t0xD800 <= word && word <= 0xDBFF\n\t\t\t\t? _Utils_Tuple2(_Utils_chr(string[0] + string[1]), string.slice(2))\n\t\t\t\t: _Utils_Tuple2(_Utils_chr(string[0]), string.slice(1))\n\t\t)\n\t\t: elm$core$Maybe$Nothing;\n}\n\nvar _String_append = F2(function(a, b)\n{\n\treturn a + b;\n});\n\nfunction _String_length(str)\n{\n\treturn str.length;\n}\n\nvar _String_map = F2(function(func, string)\n{\n\tvar len = string.length;\n\tvar array = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarray[i] = func(_Utils_chr(string[i] + string[i+1]));\n\t\t\ti += 2;\n\t\t\tcontinue;\n\t\t}\n\t\tarray[i] = func(_Utils_chr(string[i]));\n\t\ti++;\n\t}\n\treturn array.join('');\n});\n\nvar _String_filter = F2(function(isGood, str)\n{\n\tvar arr = [];\n\tvar len = str.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = str[i];\n\t\tvar word = str.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += str[i];\n\t\t\ti++;\n\t\t}\n\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\tarr.push(char);\n\t\t}\n\t}\n\treturn arr.join('');\n});\n\nfunction _String_reverse(str)\n{\n\tvar len = str.length;\n\tvar arr = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = str.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarr[len - i] = str[i + 1];\n\t\t\ti++;\n\t\t\tarr[len - i] = str[i - 1];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tarr[len - i] = str[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn arr.join('');\n}\n\nvar _String_foldl = F3(function(func, state, string)\n{\n\tvar len = string.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += string[i];\n\t\t\ti++;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_foldr = F3(function(func, state, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_split = F2(function(sep, str)\n{\n\treturn str.split(sep);\n});\n\nvar _String_join = F2(function(sep, strs)\n{\n\treturn strs.join(sep);\n});\n\nvar _String_slice = F3(function(start, end, str) {\n\treturn str.slice(start, end);\n});\n\nfunction _String_trim(str)\n{\n\treturn str.trim();\n}\n\nfunction _String_trimLeft(str)\n{\n\treturn str.replace(/^\\s+/, '');\n}\n\nfunction _String_trimRight(str)\n{\n\treturn str.replace(/\\s+$/, '');\n}\n\nfunction _String_words(str)\n{\n\treturn _List_fromArray(str.trim().split(/\\s+/g));\n}\n\nfunction _String_lines(str)\n{\n\treturn _List_fromArray(str.split(/\\r\\n|\\r|\\n/g));\n}\n\nfunction _String_toUpper(str)\n{\n\treturn str.toUpperCase();\n}\n\nfunction _String_toLower(str)\n{\n\treturn str.toLowerCase();\n}\n\nvar _String_any = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n});\n\nvar _String_all = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (!isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n});\n\nvar _String_contains = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) > -1;\n});\n\nvar _String_startsWith = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) === 0;\n});\n\nvar _String_endsWith = F2(function(sub, str)\n{\n\treturn str.length >= sub.length &&\n\t\tstr.lastIndexOf(sub) === str.length - sub.length;\n});\n\nvar _String_indexes = F2(function(sub, str)\n{\n\tvar subLen = sub.length;\n\n\tif (subLen < 1)\n\t{\n\t\treturn _List_Nil;\n\t}\n\n\tvar i = 0;\n\tvar is = [];\n\n\twhile ((i = str.indexOf(sub, i)) > -1)\n\t{\n\t\tis.push(i);\n\t\ti = i + subLen;\n\t}\n\n\treturn _List_fromArray(is);\n});\n\n\n// TO STRING\n\nfunction _String_fromNumber(number)\n{\n\treturn number + '';\n}\n\n\n// INT CONVERSIONS\n\nfunction _String_toInt(str)\n{\n\tvar total = 0;\n\tvar code0 = str.charCodeAt(0);\n\tvar start = code0 == 0x2B /* + */ || code0 == 0x2D /* - */ ? 1 : 0;\n\n\tfor (var i = start; i < str.length; ++i)\n\t{\n\t\tvar code = str.charCodeAt(i);\n\t\tif (code < 0x30 || 0x39 < code)\n\t\t{\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t}\n\t\ttotal = 10 * total + code - 0x30;\n\t}\n\n\treturn i == start\n\t\t? elm$core$Maybe$Nothing\n\t\t: elm$core$Maybe$Just(code0 == 0x2D ? -total : total);\n}\n\n\n// FLOAT CONVERSIONS\n\nfunction _String_toFloat(s)\n{\n\t// check if it is a hex, octal, or binary number\n\tif (s.length === 0 || /[\\sxbo]/.test(s))\n\t{\n\t\treturn elm$core$Maybe$Nothing;\n\t}\n\tvar n = +s;\n\t// faster isNaN check\n\treturn n === n ? elm$core$Maybe$Just(n) : elm$core$Maybe$Nothing;\n}\n\nfunction _String_fromList(chars)\n{\n\treturn _List_toArray(chars).join('');\n}\n\n\n\n\nvar _Bitwise_and = F2(function(a, b)\n{\n\treturn a & b;\n});\n\nvar _Bitwise_or = F2(function(a, b)\n{\n\treturn a | b;\n});\n\nvar _Bitwise_xor = F2(function(a, b)\n{\n\treturn a ^ b;\n});\n\nfunction _Bitwise_complement(a)\n{\n\treturn ~a;\n};\n\nvar _Bitwise_shiftLeftBy = F2(function(offset, a)\n{\n\treturn a << offset;\n});\n\nvar _Bitwise_shiftRightBy = F2(function(offset, a)\n{\n\treturn a >> offset;\n});\n\nvar _Bitwise_shiftRightZfBy = F2(function(offset, a)\n{\n\treturn a >>> offset;\n});\n\n\n\nfunction _Char_toCode(char)\n{\n\tvar code = char.charCodeAt(0);\n\tif (0xD800 <= code && code <= 0xDBFF)\n\t{\n\t\treturn (code - 0xD800) * 0x400 + char.charCodeAt(1) - 0xDC00 + 0x10000\n\t}\n\treturn code;\n}\n\nfunction _Char_fromCode(code)\n{\n\treturn _Utils_chr(\n\t\t(code < 0 || 0x10FFFF < code)\n\t\t\t? '\\uFFFD'\n\t\t\t:\n\t\t(code <= 0xFFFF)\n\t\t\t? String.fromCharCode(code)\n\t\t\t:\n\t\t(code -= 0x10000,\n\t\t\tString.fromCharCode(Math.floor(code / 0x400) + 0xD800, code % 0x400 + 0xDC00)\n\t\t)\n\t);\n}\n\nfunction _Char_toUpper(char)\n{\n\treturn _Utils_chr(char.toUpperCase());\n}\n\nfunction _Char_toLower(char)\n{\n\treturn _Utils_chr(char.toLowerCase());\n}\n\nfunction _Char_toLocaleUpper(char)\n{\n\treturn _Utils_chr(char.toLocaleUpperCase());\n}\n\nfunction _Char_toLocaleLower(char)\n{\n\treturn _Utils_chr(char.toLocaleLowerCase());\n}\n\n\n\n/**_UNUSED/\nfunction _Json_errorToString(error)\n{\n\treturn elm$json$Json$Decode$errorToString(error);\n}\n//*/\n\n\n// CORE DECODERS\n\nfunction _Json_succeed(msg)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_fail(msg)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_decodePrim(decoder)\n{\n\treturn { $: 2, b: decoder };\n}\n\nvar _Json_decodeInt = _Json_decodePrim(function(value) {\n\treturn (typeof value !== 'number')\n\t\t? _Json_expecting('an INT', value)\n\t\t:\n\t(-2147483647 < value && value < 2147483647 && (value | 0) === value)\n\t\t? elm$core$Result$Ok(value)\n\t\t:\n\t(isFinite(value) && !(value % 1))\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('an INT', value);\n});\n\nvar _Json_decodeBool = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'boolean')\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a BOOL', value);\n});\n\nvar _Json_decodeFloat = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'number')\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a FLOAT', value);\n});\n\nvar _Json_decodeValue = _Json_decodePrim(function(value) {\n\treturn elm$core$Result$Ok(_Json_wrap(value));\n});\n\nvar _Json_decodeString = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'string')\n\t\t? elm$core$Result$Ok(value)\n\t\t: (value instanceof String)\n\t\t\t? elm$core$Result$Ok(value + '')\n\t\t\t: _Json_expecting('a STRING', value);\n});\n\nfunction _Json_decodeList(decoder) { return { $: 3, b: decoder }; }\nfunction _Json_decodeArray(decoder) { return { $: 4, b: decoder }; }\n\nfunction _Json_decodeNull(value) { return { $: 5, c: value }; }\n\nvar _Json_decodeField = F2(function(field, decoder)\n{\n\treturn {\n\t\t$: 6,\n\t\td: field,\n\t\tb: decoder\n\t};\n});\n\nvar _Json_decodeIndex = F2(function(index, decoder)\n{\n\treturn {\n\t\t$: 7,\n\t\te: index,\n\t\tb: decoder\n\t};\n});\n\nfunction _Json_decodeKeyValuePairs(decoder)\n{\n\treturn {\n\t\t$: 8,\n\t\tb: decoder\n\t};\n}\n\nfunction _Json_mapMany(f, decoders)\n{\n\treturn {\n\t\t$: 9,\n\t\tf: f,\n\t\tg: decoders\n\t};\n}\n\nvar _Json_andThen = F2(function(callback, decoder)\n{\n\treturn {\n\t\t$: 10,\n\t\tb: decoder,\n\t\th: callback\n\t};\n});\n\nfunction _Json_oneOf(decoders)\n{\n\treturn {\n\t\t$: 11,\n\t\tg: decoders\n\t};\n}\n\n\n// DECODING OBJECTS\n\nvar _Json_map1 = F2(function(f, d1)\n{\n\treturn _Json_mapMany(f, [d1]);\n});\n\nvar _Json_map2 = F3(function(f, d1, d2)\n{\n\treturn _Json_mapMany(f, [d1, d2]);\n});\n\nvar _Json_map3 = F4(function(f, d1, d2, d3)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3]);\n});\n\nvar _Json_map4 = F5(function(f, d1, d2, d3, d4)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4]);\n});\n\nvar _Json_map5 = F6(function(f, d1, d2, d3, d4, d5)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5]);\n});\n\nvar _Json_map6 = F7(function(f, d1, d2, d3, d4, d5, d6)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6]);\n});\n\nvar _Json_map7 = F8(function(f, d1, d2, d3, d4, d5, d6, d7)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);\n});\n\nvar _Json_map8 = F9(function(f, d1, d2, d3, d4, d5, d6, d7, d8)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);\n});\n\n\n// DECODE\n\nvar _Json_runOnString = F2(function(decoder, string)\n{\n\ttry\n\t{\n\t\tvar value = JSON.parse(string);\n\t\treturn _Json_runHelp(decoder, value);\n\t}\n\tcatch (e)\n\t{\n\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, 'This is not valid JSON! ' + e.message, _Json_wrap(string)));\n\t}\n});\n\nvar _Json_run = F2(function(decoder, value)\n{\n\treturn _Json_runHelp(decoder, _Json_unwrap(value));\n});\n\nfunction _Json_runHelp(decoder, value)\n{\n\tswitch (decoder.$)\n\t{\n\t\tcase 2:\n\t\t\treturn decoder.b(value);\n\n\t\tcase 5:\n\t\t\treturn (value === null)\n\t\t\t\t? elm$core$Result$Ok(decoder.c)\n\t\t\t\t: _Json_expecting('null', value);\n\n\t\tcase 3:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LIST', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _List_fromArray);\n\n\t\tcase 4:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _Json_toElmArray);\n\n\t\tcase 6:\n\t\t\tvar field = decoder.d;\n\t\t\tif (typeof value !== 'object' || value === null || !(field in value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT with a field named `' + field + '`', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[field]);\n\t\t\treturn (elm$core$Result$isOk(result)) ? result : elm$core$Result$Err(A2(elm$json$Json$Decode$Field, field, result.a));\n\n\t\tcase 7:\n\t\t\tvar index = decoder.e;\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\tif (index >= value.length)\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LONGER array. Need index ' + index + ' but only see ' + value.length + ' entries', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[index]);\n\t\t\treturn (elm$core$Result$isOk(result)) ? result : elm$core$Result$Err(A2(elm$json$Json$Decode$Index, index, result.a));\n\n\t\tcase 8:\n\t\t\tif (typeof value !== 'object' || value === null || _Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT', value);\n\t\t\t}\n\n\t\t\tvar keyValuePairs = _List_Nil;\n\t\t\t// TODO test perf of Object.keys and switch when support is good enough\n\t\t\tfor (var key in value)\n\t\t\t{\n\t\t\t\tif (value.hasOwnProperty(key))\n\t\t\t\t{\n\t\t\t\t\tvar result = _Json_runHelp(decoder.b, value[key]);\n\t\t\t\t\tif (!elm$core$Result$isOk(result))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Field, key, result.a));\n\t\t\t\t\t}\n\t\t\t\t\tkeyValuePairs = _List_Cons(_Utils_Tuple2(key, result.a), keyValuePairs);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn elm$core$Result$Ok(elm$core$List$reverse(keyValuePairs));\n\n\t\tcase 9:\n\t\t\tvar answer = decoder.f;\n\t\t\tvar decoders = decoder.g;\n\t\t\tfor (var i = 0; i < decoders.length; i++)\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(decoders[i], value);\n\t\t\t\tif (!elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\tanswer = answer(result.a);\n\t\t\t}\n\t\t\treturn elm$core$Result$Ok(answer);\n\n\t\tcase 10:\n\t\t\tvar result = _Json_runHelp(decoder.b, value);\n\t\t\treturn (!elm$core$Result$isOk(result))\n\t\t\t\t? result\n\t\t\t\t: _Json_runHelp(decoder.h(result.a), value);\n\n\t\tcase 11:\n\t\t\tvar errors = _List_Nil;\n\t\t\tfor (var temp = decoder.g; temp.b; temp = temp.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(temp.a, value);\n\t\t\t\tif (elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\terrors = _List_Cons(result.a, errors);\n\t\t\t}\n\t\t\treturn elm$core$Result$Err(elm$json$Json$Decode$OneOf(elm$core$List$reverse(errors)));\n\n\t\tcase 1:\n\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, decoder.a, _Json_wrap(value)));\n\n\t\tcase 0:\n\t\t\treturn elm$core$Result$Ok(decoder.a);\n\t}\n}\n\nfunction _Json_runArrayDecoder(decoder, value, toElmValue)\n{\n\tvar len = value.length;\n\tvar array = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tvar result = _Json_runHelp(decoder, value[i]);\n\t\tif (!elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Index, i, result.a));\n\t\t}\n\t\tarray[i] = result.a;\n\t}\n\treturn elm$core$Result$Ok(toElmValue(array));\n}\n\nfunction _Json_isArray(value)\n{\n\treturn Array.isArray(value) || (typeof FileList === 'function' && value instanceof FileList);\n}\n\nfunction _Json_toElmArray(array)\n{\n\treturn A2(elm$core$Array$initialize, array.length, function(i) { return array[i]; });\n}\n\nfunction _Json_expecting(type, value)\n{\n\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, 'Expecting ' + type, _Json_wrap(value)));\n}\n\n\n// EQUALITY\n\nfunction _Json_equality(x, y)\n{\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (x.$ !== y.$)\n\t{\n\t\treturn false;\n\t}\n\n\tswitch (x.$)\n\t{\n\t\tcase 0:\n\t\tcase 1:\n\t\t\treturn x.a === y.a;\n\n\t\tcase 2:\n\t\t\treturn x.b === y.b;\n\n\t\tcase 5:\n\t\t\treturn x.c === y.c;\n\n\t\tcase 3:\n\t\tcase 4:\n\t\tcase 8:\n\t\t\treturn _Json_equality(x.b, y.b);\n\n\t\tcase 6:\n\t\t\treturn x.d === y.d && _Json_equality(x.b, y.b);\n\n\t\tcase 7:\n\t\t\treturn x.e === y.e && _Json_equality(x.b, y.b);\n\n\t\tcase 9:\n\t\t\treturn x.f === y.f && _Json_listEquality(x.g, y.g);\n\n\t\tcase 10:\n\t\t\treturn x.h === y.h && _Json_equality(x.b, y.b);\n\n\t\tcase 11:\n\t\t\treturn _Json_listEquality(x.g, y.g);\n\t}\n}\n\nfunction _Json_listEquality(aDecoders, bDecoders)\n{\n\tvar len = aDecoders.length;\n\tif (len !== bDecoders.length)\n\t{\n\t\treturn false;\n\t}\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tif (!_Json_equality(aDecoders[i], bDecoders[i]))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// ENCODE\n\nvar _Json_encode = F2(function(indentLevel, value)\n{\n\treturn JSON.stringify(_Json_unwrap(value), null, indentLevel) + '';\n});\n\nfunction _Json_wrap_UNUSED(value) { return { $: 0, a: value }; }\nfunction _Json_unwrap_UNUSED(value) { return value.a; }\n\nfunction _Json_wrap(value) { return value; }\nfunction _Json_unwrap(value) { return value; }\n\nfunction _Json_emptyArray() { return []; }\nfunction _Json_emptyObject() { return {}; }\n\nvar _Json_addField = F3(function(key, value, object)\n{\n\tobject[key] = _Json_unwrap(value);\n\treturn object;\n});\n\nfunction _Json_addEntry(func)\n{\n\treturn F2(function(entry, array)\n\t{\n\t\tarray.push(_Json_unwrap(func(entry)));\n\t\treturn array;\n\t});\n}\n\nvar _Json_encodeNull = _Json_wrap(null);\n\n\n\n// TASKS\n\nfunction _Scheduler_succeed(value)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: value\n\t};\n}\n\nfunction _Scheduler_fail(error)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: error\n\t};\n}\n\nfunction _Scheduler_binding(callback)\n{\n\treturn {\n\t\t$: 2,\n\t\tb: callback,\n\t\tc: null\n\t};\n}\n\nvar _Scheduler_andThen = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 3,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nvar _Scheduler_onError = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 4,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nfunction _Scheduler_receive(callback)\n{\n\treturn {\n\t\t$: 5,\n\t\tb: callback\n\t};\n}\n\n\n// PROCESSES\n\nvar _Scheduler_guid = 0;\n\nfunction _Scheduler_rawSpawn(task)\n{\n\tvar proc = {\n\t\t$: 0,\n\t\te: _Scheduler_guid++,\n\t\tf: task,\n\t\tg: null,\n\t\th: []\n\t};\n\n\t_Scheduler_enqueue(proc);\n\n\treturn proc;\n}\n\nfunction _Scheduler_spawn(task)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tcallback(_Scheduler_succeed(_Scheduler_rawSpawn(task)));\n\t});\n}\n\nfunction _Scheduler_rawSend(proc, msg)\n{\n\tproc.h.push(msg);\n\t_Scheduler_enqueue(proc);\n}\n\nvar _Scheduler_send = F2(function(proc, msg)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\t_Scheduler_rawSend(proc, msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\nfunction _Scheduler_kill(proc)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar task = proc.f;\n\t\tif (task.$ === 2 && task.c)\n\t\t{\n\t\t\ttask.c();\n\t\t}\n\n\t\tproc.f = null;\n\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n}\n\n\n/* STEP PROCESSES\n\ntype alias Process =\n  { $ : tag\n  , id : unique_id\n  , root : Task\n  , stack : null | { $: SUCCEED | FAIL, a: callback, b: stack }\n  , mailbox : [msg]\n  }\n\n*/\n\n\nvar _Scheduler_working = false;\nvar _Scheduler_queue = [];\n\n\nfunction _Scheduler_enqueue(proc)\n{\n\t_Scheduler_queue.push(proc);\n\tif (_Scheduler_working)\n\t{\n\t\treturn;\n\t}\n\t_Scheduler_working = true;\n\twhile (proc = _Scheduler_queue.shift())\n\t{\n\t\t_Scheduler_step(proc);\n\t}\n\t_Scheduler_working = false;\n}\n\n\nfunction _Scheduler_step(proc)\n{\n\twhile (proc.f)\n\t{\n\t\tvar rootTag = proc.f.$;\n\t\tif (rootTag === 0 || rootTag === 1)\n\t\t{\n\t\t\twhile (proc.g && proc.g.$ !== rootTag)\n\t\t\t{\n\t\t\t\tproc.g = proc.g.i;\n\t\t\t}\n\t\t\tif (!proc.g)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.g.b(proc.f.a);\n\t\t\tproc.g = proc.g.i;\n\t\t}\n\t\telse if (rootTag === 2)\n\t\t{\n\t\t\tproc.f.c = proc.f.b(function(newRoot) {\n\t\t\t\tproc.f = newRoot;\n\t\t\t\t_Scheduler_enqueue(proc);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\telse if (rootTag === 5)\n\t\t{\n\t\t\tif (proc.h.length === 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.f.b(proc.h.shift());\n\t\t}\n\t\telse // if (rootTag === 3 || rootTag === 4)\n\t\t{\n\t\t\tproc.g = {\n\t\t\t\t$: rootTag === 3 ? 0 : 1,\n\t\t\t\tb: proc.f.b,\n\t\t\t\ti: proc.g\n\t\t\t};\n\t\t\tproc.f = proc.f.d;\n\t\t}\n\t}\n}\n\n\n\nfunction _Process_sleep(time)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar id = setTimeout(function() {\n\t\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t\t}, time);\n\n\t\treturn function() { clearTimeout(id); };\n\t});\n}\n\n\n\n\n// PROGRAMS\n\n\nvar _Platform_worker = F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.aO,\n\t\timpl.aZ,\n\t\timpl.aX,\n\t\tfunction() { return function() {} }\n\t);\n});\n\n\n\n// INITIALIZE A PROGRAM\n\n\nfunction _Platform_initialize(flagDecoder, args, init, update, subscriptions, stepperBuilder)\n{\n\tvar result = A2(_Json_run, flagDecoder, _Json_wrap(args ? args['flags'] : undefined));\n\telm$core$Result$isOk(result) || _Debug_crash(2 /**_UNUSED/, _Json_errorToString(result.a) /**/);\n\tvar managers = {};\n\tresult = init(result.a);\n\tvar model = result.a;\n\tvar stepper = stepperBuilder(sendToApp, model);\n\tvar ports = _Platform_setupEffects(managers, sendToApp);\n\n\tfunction sendToApp(msg, viewMetadata)\n\t{\n\t\tresult = A2(update, msg, model);\n\t\tstepper(model = result.a, viewMetadata);\n\t\t_Platform_dispatchEffects(managers, result.b, subscriptions(model));\n\t}\n\n\t_Platform_dispatchEffects(managers, result.b, subscriptions(model));\n\n\treturn ports ? { ports: ports } : {};\n}\n\n\n\n// TRACK PRELOADS\n//\n// This is used by code in elm/browser and elm/http\n// to register any HTTP requests that are triggered by init.\n//\n\n\nvar _Platform_preload;\n\n\nfunction _Platform_registerPreload(url)\n{\n\t_Platform_preload.add(url);\n}\n\n\n\n// EFFECT MANAGERS\n\n\nvar _Platform_effectManagers = {};\n\n\nfunction _Platform_setupEffects(managers, sendToApp)\n{\n\tvar ports;\n\n\t// setup all necessary effect managers\n\tfor (var key in _Platform_effectManagers)\n\t{\n\t\tvar manager = _Platform_effectManagers[key];\n\n\t\tif (manager.a)\n\t\t{\n\t\t\tports = ports || {};\n\t\t\tports[key] = manager.a(key, sendToApp);\n\t\t}\n\n\t\tmanagers[key] = _Platform_instantiateManager(manager, sendToApp);\n\t}\n\n\treturn ports;\n}\n\n\nfunction _Platform_createManager(init, onEffects, onSelfMsg, cmdMap, subMap)\n{\n\treturn {\n\t\tb: init,\n\t\tc: onEffects,\n\t\td: onSelfMsg,\n\t\te: cmdMap,\n\t\tf: subMap\n\t};\n}\n\n\nfunction _Platform_instantiateManager(info, sendToApp)\n{\n\tvar router = {\n\t\tg: sendToApp,\n\t\th: undefined\n\t};\n\n\tvar onEffects = info.c;\n\tvar onSelfMsg = info.d;\n\tvar cmdMap = info.e;\n\tvar subMap = info.f;\n\n\tfunction loop(state)\n\t{\n\t\treturn A2(_Scheduler_andThen, loop, _Scheduler_receive(function(msg)\n\t\t{\n\t\t\tvar value = msg.a;\n\n\t\t\tif (msg.$ === 0)\n\t\t\t{\n\t\t\t\treturn A3(onSelfMsg, router, value, state);\n\t\t\t}\n\n\t\t\treturn cmdMap && subMap\n\t\t\t\t? A4(onEffects, router, value.i, value.j, state)\n\t\t\t\t: A3(onEffects, router, cmdMap ? value.i : value.j, state);\n\t\t}));\n\t}\n\n\treturn router.h = _Scheduler_rawSpawn(A2(_Scheduler_andThen, loop, info.b));\n}\n\n\n\n// ROUTING\n\n\nvar _Platform_sendToApp = F2(function(router, msg)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\trouter.g(msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\n\nvar _Platform_sendToSelf = F2(function(router, msg)\n{\n\treturn A2(_Scheduler_send, router.h, {\n\t\t$: 0,\n\t\ta: msg\n\t});\n});\n\n\n\n// BAGS\n\n\nfunction _Platform_leaf(home)\n{\n\treturn function(value)\n\t{\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tk: home,\n\t\t\tl: value\n\t\t};\n\t};\n}\n\n\nfunction _Platform_batch(list)\n{\n\treturn {\n\t\t$: 2,\n\t\tm: list\n\t};\n}\n\n\nvar _Platform_map = F2(function(tagger, bag)\n{\n\treturn {\n\t\t$: 3,\n\t\tn: tagger,\n\t\to: bag\n\t}\n});\n\n\n\n// PIPE BAGS INTO EFFECT MANAGERS\n\n\nfunction _Platform_dispatchEffects(managers, cmdBag, subBag)\n{\n\tvar effectsDict = {};\n\t_Platform_gatherEffects(true, cmdBag, effectsDict, null);\n\t_Platform_gatherEffects(false, subBag, effectsDict, null);\n\n\tfor (var home in managers)\n\t{\n\t\t_Scheduler_rawSend(managers[home], {\n\t\t\t$: 'fx',\n\t\t\ta: effectsDict[home] || { i: _List_Nil, j: _List_Nil }\n\t\t});\n\t}\n}\n\n\nfunction _Platform_gatherEffects(isCmd, bag, effectsDict, taggers)\n{\n\tswitch (bag.$)\n\t{\n\t\tcase 1:\n\t\t\tvar home = bag.k;\n\t\t\tvar effect = _Platform_toEffect(isCmd, home, taggers, bag.l);\n\t\t\teffectsDict[home] = _Platform_insert(isCmd, effect, effectsDict[home]);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\tfor (var list = bag.m; list.b; list = list.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\t_Platform_gatherEffects(isCmd, list.a, effectsDict, taggers);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\t_Platform_gatherEffects(isCmd, bag.o, effectsDict, {\n\t\t\t\tp: bag.n,\n\t\t\t\tq: taggers\n\t\t\t});\n\t\t\treturn;\n\t}\n}\n\n\nfunction _Platform_toEffect(isCmd, home, taggers, value)\n{\n\tfunction applyTaggers(x)\n\t{\n\t\tfor (var temp = taggers; temp; temp = temp.q)\n\t\t{\n\t\t\tx = temp.p(x);\n\t\t}\n\t\treturn x;\n\t}\n\n\tvar map = isCmd\n\t\t? _Platform_effectManagers[home].e\n\t\t: _Platform_effectManagers[home].f;\n\n\treturn A2(map, applyTaggers, value)\n}\n\n\nfunction _Platform_insert(isCmd, newEffect, effects)\n{\n\teffects = effects || { i: _List_Nil, j: _List_Nil };\n\n\tisCmd\n\t\t? (effects.i = _List_Cons(newEffect, effects.i))\n\t\t: (effects.j = _List_Cons(newEffect, effects.j));\n\n\treturn effects;\n}\n\n\n\n// PORTS\n\n\nfunction _Platform_checkPortName(name)\n{\n\tif (_Platform_effectManagers[name])\n\t{\n\t\t_Debug_crash(3, name)\n\t}\n}\n\n\n\n// OUTGOING PORTS\n\n\nfunction _Platform_outgoingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\te: _Platform_outgoingPortMap,\n\t\tr: converter,\n\t\ta: _Platform_setupOutgoingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_outgoingPortMap = F2(function(tagger, value) { return value; });\n\n\nfunction _Platform_setupOutgoingPort(name)\n{\n\tvar subs = [];\n\tvar converter = _Platform_effectManagers[name].r;\n\n\t// CREATE MANAGER\n\n\tvar init = _Process_sleep(0);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, cmdList, state)\n\t{\n\t\tfor ( ; cmdList.b; cmdList = cmdList.b) // WHILE_CONS\n\t\t{\n\t\t\t// grab a separate reference to subs in case unsubscribe is called\n\t\t\tvar currentSubs = subs;\n\t\t\tvar value = _Json_unwrap(converter(cmdList.a));\n\t\t\tfor (var i = 0; i < currentSubs.length; i++)\n\t\t\t{\n\t\t\t\tcurrentSubs[i](value);\n\t\t\t}\n\t\t}\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction subscribe(callback)\n\t{\n\t\tsubs.push(callback);\n\t}\n\n\tfunction unsubscribe(callback)\n\t{\n\t\t// copy subs into a new array in case unsubscribe is called within a\n\t\t// subscribed callback\n\t\tsubs = subs.slice();\n\t\tvar index = subs.indexOf(callback);\n\t\tif (index >= 0)\n\t\t{\n\t\t\tsubs.splice(index, 1);\n\t\t}\n\t}\n\n\treturn {\n\t\tsubscribe: subscribe,\n\t\tunsubscribe: unsubscribe\n\t};\n}\n\n\n\n// INCOMING PORTS\n\n\nfunction _Platform_incomingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\tf: _Platform_incomingPortMap,\n\t\tr: converter,\n\t\ta: _Platform_setupIncomingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_incomingPortMap = F2(function(tagger, finalTagger)\n{\n\treturn function(value)\n\t{\n\t\treturn tagger(finalTagger(value));\n\t};\n});\n\n\nfunction _Platform_setupIncomingPort(name, sendToApp)\n{\n\tvar subs = _List_Nil;\n\tvar converter = _Platform_effectManagers[name].r;\n\n\t// CREATE MANAGER\n\n\tvar init = _Scheduler_succeed(null);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, subList, state)\n\t{\n\t\tsubs = subList;\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction send(incomingValue)\n\t{\n\t\tvar result = A2(_Json_run, converter, _Json_wrap(incomingValue));\n\n\t\telm$core$Result$isOk(result) || _Debug_crash(4, name, result.a);\n\n\t\tvar value = result.a;\n\t\tfor (var temp = subs; temp.b; temp = temp.b) // WHILE_CONS\n\t\t{\n\t\t\tsendToApp(temp.a(value));\n\t\t}\n\t}\n\n\treturn { send: send };\n}\n\n\n\n// EXPORT ELM MODULES\n//\n// Have DEBUG and PROD versions so that we can (1) give nicer errors in\n// debug mode and (2) not pay for the bits needed for that in prod mode.\n//\n\n\nfunction _Platform_export(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsProd(scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsProd(obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6)\n\t\t\t\t: _Platform_mergeExportsProd(obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\nfunction _Platform_export_UNUSED(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsDebug('Elm', scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsDebug(moduleName, obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6, moduleName)\n\t\t\t\t: _Platform_mergeExportsDebug(moduleName + '.' + name, obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\n\nfunction _Time_now(millisToPosix)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(millisToPosix(Date.now())));\n\t});\n}\n\nvar _Time_setInterval = F2(function(interval, task)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tvar id = setInterval(function() { _Scheduler_rawSpawn(task); }, interval);\n\t\treturn function() { clearInterval(id); };\n\t});\n});\n\nfunction _Time_here()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(\n\t\t\tA2(elm$time$Time$customZone, -(new Date().getTimezoneOffset()), _List_Nil)\n\t\t));\n\t});\n}\n\n\nfunction _Time_getZoneName()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\ttry\n\t\t{\n\t\t\tvar name = elm$time$Time$Name(Intl.DateTimeFormat().resolvedOptions().timeZone);\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\tvar name = elm$time$Time$Offset(new Date().getTimezoneOffset());\n\t\t}\n\t\tcallback(_Scheduler_succeed(name));\n\t});\n}\n\n\n\n\n// HELPERS\n\n\nvar _VirtualDom_divertHrefToApp;\n\nvar _VirtualDom_doc = typeof document !== 'undefined' ? document : {};\n\n\nfunction _VirtualDom_appendChild(parent, child)\n{\n\tparent.appendChild(child);\n}\n\nvar _VirtualDom_init = F4(function(virtualNode, flagDecoder, debugMetadata, args)\n{\n\t// NOTE: this function needs _Platform_export available to work\n\n\t/**/\n\tvar node = args['node'];\n\t//*/\n\t/**_UNUSED/\n\tvar node = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t//*/\n\n\tnode.parentNode.replaceChild(\n\t\t_VirtualDom_render(virtualNode, function() {}),\n\t\tnode\n\t);\n\n\treturn {};\n});\n\n\n\n// TEXT\n\n\nfunction _VirtualDom_text(string)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: string\n\t};\n}\n\n\n\n// NODE\n\n\nvar _VirtualDom_nodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_node = _VirtualDom_nodeNS(undefined);\n\n\n\n// KEYED NODE\n\n\nvar _VirtualDom_keyedNodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 2,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_keyedNode = _VirtualDom_keyedNodeNS(undefined);\n\n\n\n// CUSTOM\n\n\nfunction _VirtualDom_custom(factList, model, render, diff)\n{\n\treturn {\n\t\t$: 3,\n\t\td: _VirtualDom_organizeFacts(factList),\n\t\tg: model,\n\t\th: render,\n\t\ti: diff\n\t};\n}\n\n\n\n// MAP\n\n\nvar _VirtualDom_map = F2(function(tagger, node)\n{\n\treturn {\n\t\t$: 4,\n\t\tj: tagger,\n\t\tk: node,\n\t\tb: 1 + (node.b || 0)\n\t};\n});\n\n\n\n// LAZY\n\n\nfunction _VirtualDom_thunk(refs, thunk)\n{\n\treturn {\n\t\t$: 5,\n\t\tl: refs,\n\t\tm: thunk,\n\t\tk: undefined\n\t};\n}\n\nvar _VirtualDom_lazy = F2(function(func, a)\n{\n\treturn _VirtualDom_thunk([func, a], function() {\n\t\treturn func(a);\n\t});\n});\n\nvar _VirtualDom_lazy2 = F3(function(func, a, b)\n{\n\treturn _VirtualDom_thunk([func, a, b], function() {\n\t\treturn A2(func, a, b);\n\t});\n});\n\nvar _VirtualDom_lazy3 = F4(function(func, a, b, c)\n{\n\treturn _VirtualDom_thunk([func, a, b, c], function() {\n\t\treturn A3(func, a, b, c);\n\t});\n});\n\nvar _VirtualDom_lazy4 = F5(function(func, a, b, c, d)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d], function() {\n\t\treturn A4(func, a, b, c, d);\n\t});\n});\n\nvar _VirtualDom_lazy5 = F6(function(func, a, b, c, d, e)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e], function() {\n\t\treturn A5(func, a, b, c, d, e);\n\t});\n});\n\nvar _VirtualDom_lazy6 = F7(function(func, a, b, c, d, e, f)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f], function() {\n\t\treturn A6(func, a, b, c, d, e, f);\n\t});\n});\n\nvar _VirtualDom_lazy7 = F8(function(func, a, b, c, d, e, f, g)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g], function() {\n\t\treturn A7(func, a, b, c, d, e, f, g);\n\t});\n});\n\nvar _VirtualDom_lazy8 = F9(function(func, a, b, c, d, e, f, g, h)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g, h], function() {\n\t\treturn A8(func, a, b, c, d, e, f, g, h);\n\t});\n});\n\n\n\n// FACTS\n\n\nvar _VirtualDom_on = F2(function(key, handler)\n{\n\treturn {\n\t\t$: 'a0',\n\t\tn: key,\n\t\to: handler\n\t};\n});\nvar _VirtualDom_style = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a1',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_property = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a2',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attribute = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a3',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attributeNS = F3(function(namespace, key, value)\n{\n\treturn {\n\t\t$: 'a4',\n\t\tn: key,\n\t\to: { f: namespace, o: value }\n\t};\n});\n\n\n\n// XSS ATTACK VECTOR CHECKS\n\n\nfunction _VirtualDom_noScript(tag)\n{\n\treturn tag == 'script' ? 'p' : tag;\n}\n\nfunction _VirtualDom_noOnOrFormAction(key)\n{\n\treturn /^(on|formAction$)/i.test(key) ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noInnerHtmlOrFormAction(key)\n{\n\treturn key == 'innerHTML' || key == 'formAction' ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noJavaScriptUri(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,'')) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptUri_UNUSED(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,''))\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri_UNUSED(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value)\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\n\n\n// MAP FACTS\n\n\nvar _VirtualDom_mapAttribute = F2(function(func, attr)\n{\n\treturn (attr.$ === 'a0')\n\t\t? A2(_VirtualDom_on, attr.n, _VirtualDom_mapHandler(func, attr.o))\n\t\t: attr;\n});\n\nfunction _VirtualDom_mapHandler(func, handler)\n{\n\tvar tag = elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t// 0 = Normal\n\t// 1 = MayStopPropagation\n\t// 2 = MayPreventDefault\n\t// 3 = Custom\n\n\treturn {\n\t\t$: handler.$,\n\t\ta:\n\t\t\t!tag\n\t\t\t\t? A2(elm$json$Json$Decode$map, func, handler.a)\n\t\t\t\t:\n\t\t\tA3(elm$json$Json$Decode$map2,\n\t\t\t\ttag < 3\n\t\t\t\t\t? _VirtualDom_mapEventTuple\n\t\t\t\t\t: _VirtualDom_mapEventRecord,\n\t\t\t\telm$json$Json$Decode$succeed(func),\n\t\t\t\thandler.a\n\t\t\t)\n\t};\n}\n\nvar _VirtualDom_mapEventTuple = F2(function(func, tuple)\n{\n\treturn _Utils_Tuple2(func(tuple.a), tuple.b);\n});\n\nvar _VirtualDom_mapEventRecord = F2(function(func, record)\n{\n\treturn {\n\t\ts: func(record.s),\n\t\t_: record._,\n\t\tY: record.Y\n\t}\n});\n\n\n\n// ORGANIZE FACTS\n\n\nfunction _VirtualDom_organizeFacts(factList)\n{\n\tfor (var facts = {}; factList.b; factList = factList.b) // WHILE_CONS\n\t{\n\t\tvar entry = factList.a;\n\n\t\tvar tag = entry.$;\n\t\tvar key = entry.n;\n\t\tvar value = entry.o;\n\n\t\tif (tag === 'a2')\n\t\t{\n\t\t\t(key === 'className')\n\t\t\t\t? _VirtualDom_addClass(facts, key, _Json_unwrap(value))\n\t\t\t\t: facts[key] = _Json_unwrap(value);\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar subFacts = facts[tag] || (facts[tag] = {});\n\t\t(tag === 'a3' && key === 'class')\n\t\t\t? _VirtualDom_addClass(subFacts, key, value)\n\t\t\t: subFacts[key] = value;\n\t}\n\n\treturn facts;\n}\n\nfunction _VirtualDom_addClass(object, key, newClass)\n{\n\tvar classes = object[key];\n\tobject[key] = classes ? classes + ' ' + newClass : newClass;\n}\n\n\n\n// RENDER\n\n\nfunction _VirtualDom_render(vNode, eventNode)\n{\n\tvar tag = vNode.$;\n\n\tif (tag === 5)\n\t{\n\t\treturn _VirtualDom_render(vNode.k || (vNode.k = vNode.m()), eventNode);\n\t}\n\n\tif (tag === 0)\n\t{\n\t\treturn _VirtualDom_doc.createTextNode(vNode.a);\n\t}\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\t\tvar tagger = vNode.j;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\ttypeof tagger !== 'object'\n\t\t\t\t? tagger = [tagger, subNode.j]\n\t\t\t\t: tagger.push(subNode.j);\n\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\tvar subEventRoot = { j: tagger, p: eventNode };\n\t\tvar domNode = _VirtualDom_render(subNode, subEventRoot);\n\t\tdomNode.elm_event_node_ref = subEventRoot;\n\t\treturn domNode;\n\t}\n\n\tif (tag === 3)\n\t{\n\t\tvar domNode = vNode.h(vNode.g);\n\t\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\t\treturn domNode;\n\t}\n\n\t// at this point `tag` must be 1 or 2\n\n\tvar domNode = vNode.f\n\t\t? _VirtualDom_doc.createElementNS(vNode.f, vNode.c)\n\t\t: _VirtualDom_doc.createElement(vNode.c);\n\n\tif (_VirtualDom_divertHrefToApp && vNode.c == 'a')\n\t{\n\t\tdomNode.addEventListener('click', _VirtualDom_divertHrefToApp(domNode));\n\t}\n\n\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\n\tfor (var kids = vNode.e, i = 0; i < kids.length; i++)\n\t{\n\t\t_VirtualDom_appendChild(domNode, _VirtualDom_render(tag === 1 ? kids[i] : kids[i].b, eventNode));\n\t}\n\n\treturn domNode;\n}\n\n\n\n// APPLY FACTS\n\n\nfunction _VirtualDom_applyFacts(domNode, eventNode, facts)\n{\n\tfor (var key in facts)\n\t{\n\t\tvar value = facts[key];\n\n\t\tkey === 'a1'\n\t\t\t? _VirtualDom_applyStyles(domNode, value)\n\t\t\t:\n\t\tkey === 'a0'\n\t\t\t? _VirtualDom_applyEvents(domNode, eventNode, value)\n\t\t\t:\n\t\tkey === 'a3'\n\t\t\t? _VirtualDom_applyAttrs(domNode, value)\n\t\t\t:\n\t\tkey === 'a4'\n\t\t\t? _VirtualDom_applyAttrsNS(domNode, value)\n\t\t\t:\n\t\t((key !== 'value' && key !== 'checked') || domNode[key] !== value) && (domNode[key] = value);\n\t}\n}\n\n\n\n// APPLY STYLES\n\n\nfunction _VirtualDom_applyStyles(domNode, styles)\n{\n\tvar domNodeStyle = domNode.style;\n\n\tfor (var key in styles)\n\t{\n\t\tdomNodeStyle[key] = styles[key];\n\t}\n}\n\n\n\n// APPLY ATTRS\n\n\nfunction _VirtualDom_applyAttrs(domNode, attrs)\n{\n\tfor (var key in attrs)\n\t{\n\t\tvar value = attrs[key];\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttribute(key, value)\n\t\t\t: domNode.removeAttribute(key);\n\t}\n}\n\n\n\n// APPLY NAMESPACED ATTRS\n\n\nfunction _VirtualDom_applyAttrsNS(domNode, nsAttrs)\n{\n\tfor (var key in nsAttrs)\n\t{\n\t\tvar pair = nsAttrs[key];\n\t\tvar namespace = pair.f;\n\t\tvar value = pair.o;\n\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttributeNS(namespace, key, value)\n\t\t\t: domNode.removeAttributeNS(namespace, key);\n\t}\n}\n\n\n\n// APPLY EVENTS\n\n\nfunction _VirtualDom_applyEvents(domNode, eventNode, events)\n{\n\tvar allCallbacks = domNode.elmFs || (domNode.elmFs = {});\n\n\tfor (var key in events)\n\t{\n\t\tvar newHandler = events[key];\n\t\tvar oldCallback = allCallbacks[key];\n\n\t\tif (!newHandler)\n\t\t{\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t\tallCallbacks[key] = undefined;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (oldCallback)\n\t\t{\n\t\t\tvar oldHandler = oldCallback.q;\n\t\t\tif (oldHandler.$ === newHandler.$)\n\t\t\t{\n\t\t\t\toldCallback.q = newHandler;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t}\n\n\t\toldCallback = _VirtualDom_makeCallback(eventNode, newHandler);\n\t\tdomNode.addEventListener(key, oldCallback,\n\t\t\t_VirtualDom_passiveSupported\n\t\t\t&& { passive: elm$virtual_dom$VirtualDom$toHandlerInt(newHandler) < 2 }\n\t\t);\n\t\tallCallbacks[key] = oldCallback;\n\t}\n}\n\n\n\n// PASSIVE EVENTS\n\n\nvar _VirtualDom_passiveSupported;\n\ntry\n{\n\twindow.addEventListener('t', null, Object.defineProperty({}, 'passive', {\n\t\tget: function() { _VirtualDom_passiveSupported = true; }\n\t}));\n}\ncatch(e) {}\n\n\n\n// EVENT HANDLERS\n\n\nfunction _VirtualDom_makeCallback(eventNode, initialHandler)\n{\n\tfunction callback(event)\n\t{\n\t\tvar handler = callback.q;\n\t\tvar result = _Json_runHelp(handler.a, event);\n\n\t\tif (!elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar tag = elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t\t// 0 = Normal\n\t\t// 1 = MayStopPropagation\n\t\t// 2 = MayPreventDefault\n\t\t// 3 = Custom\n\n\t\tvar value = result.a;\n\t\tvar message = !tag ? value : tag < 3 ? value.a : value.s;\n\t\tvar stopPropagation = tag == 1 ? value.b : tag == 3 && value._;\n\t\tvar currentEventNode = (\n\t\t\tstopPropagation && event.stopPropagation(),\n\t\t\t(tag == 2 ? value.b : tag == 3 && value.Y) && event.preventDefault(),\n\t\t\teventNode\n\t\t);\n\t\tvar tagger;\n\t\tvar i;\n\t\twhile (tagger = currentEventNode.j)\n\t\t{\n\t\t\tif (typeof tagger == 'function')\n\t\t\t{\n\t\t\t\tmessage = tagger(message);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (var i = tagger.length; i--; )\n\t\t\t\t{\n\t\t\t\t\tmessage = tagger[i](message);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrentEventNode = currentEventNode.p;\n\t\t}\n\t\tcurrentEventNode(message, stopPropagation); // stopPropagation implies isSync\n\t}\n\n\tcallback.q = initialHandler;\n\n\treturn callback;\n}\n\nfunction _VirtualDom_equalEvents(x, y)\n{\n\treturn x.$ == y.$ && _Json_equality(x.a, y.a);\n}\n\n\n\n// DIFF\n\n\n// TODO: Should we do patches like in iOS?\n//\n// type Patch\n//   = At Int Patch\n//   | Batch (List Patch)\n//   | Change ...\n//\n// How could it not be better?\n//\nfunction _VirtualDom_diff(x, y)\n{\n\tvar patches = [];\n\t_VirtualDom_diffHelp(x, y, patches, 0);\n\treturn patches;\n}\n\n\nfunction _VirtualDom_pushPatch(patches, type, index, data)\n{\n\tvar patch = {\n\t\t$: type,\n\t\tr: index,\n\t\ts: data,\n\t\tt: undefined,\n\t\tu: undefined\n\t};\n\tpatches.push(patch);\n\treturn patch;\n}\n\n\nfunction _VirtualDom_diffHelp(x, y, patches, index)\n{\n\tif (x === y)\n\t{\n\t\treturn;\n\t}\n\n\tvar xType = x.$;\n\tvar yType = y.$;\n\n\t// Bail if you run into different types of nodes. Implies that the\n\t// structure has changed significantly and it's not worth a diff.\n\tif (xType !== yType)\n\t{\n\t\tif (xType === 1 && yType === 2)\n\t\t{\n\t\t\ty = _VirtualDom_dekey(y);\n\t\t\tyType = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// Now we know that both nodes are the same $.\n\tswitch (yType)\n\t{\n\t\tcase 5:\n\t\t\tvar xRefs = x.l;\n\t\t\tvar yRefs = y.l;\n\t\t\tvar i = xRefs.length;\n\t\t\tvar same = i === yRefs.length;\n\t\t\twhile (same && i--)\n\t\t\t{\n\t\t\t\tsame = xRefs[i] === yRefs[i];\n\t\t\t}\n\t\t\tif (same)\n\t\t\t{\n\t\t\t\ty.k = x.k;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ty.k = y.m();\n\t\t\tvar subPatches = [];\n\t\t\t_VirtualDom_diffHelp(x.k, y.k, subPatches, 0);\n\t\t\tsubPatches.length > 0 && _VirtualDom_pushPatch(patches, 1, index, subPatches);\n\t\t\treturn;\n\n\t\tcase 4:\n\t\t\t// gather nested taggers\n\t\t\tvar xTaggers = x.j;\n\t\t\tvar yTaggers = y.j;\n\t\t\tvar nesting = false;\n\n\t\t\tvar xSubNode = x.k;\n\t\t\twhile (xSubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof xTaggers !== 'object'\n\t\t\t\t\t? xTaggers = [xTaggers, xSubNode.j]\n\t\t\t\t\t: xTaggers.push(xSubNode.j);\n\n\t\t\t\txSubNode = xSubNode.k;\n\t\t\t}\n\n\t\t\tvar ySubNode = y.k;\n\t\t\twhile (ySubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof yTaggers !== 'object'\n\t\t\t\t\t? yTaggers = [yTaggers, ySubNode.j]\n\t\t\t\t\t: yTaggers.push(ySubNode.j);\n\n\t\t\t\tySubNode = ySubNode.k;\n\t\t\t}\n\n\t\t\t// Just bail if different numbers of taggers. This implies the\n\t\t\t// structure of the virtual DOM has changed.\n\t\t\tif (nesting && xTaggers.length !== yTaggers.length)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// check if taggers are \"the same\"\n\t\t\tif (nesting ? !_VirtualDom_pairwiseRefEqual(xTaggers, yTaggers) : xTaggers !== yTaggers)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 2, index, yTaggers);\n\t\t\t}\n\n\t\t\t// diff everything below the taggers\n\t\t\t_VirtualDom_diffHelp(xSubNode, ySubNode, patches, index + 1);\n\t\t\treturn;\n\n\t\tcase 0:\n\t\t\tif (x.a !== y.a)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 3, index, y.a);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 1:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKids);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKeyedKids);\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\tif (x.h !== y.h)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\t\t\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\t\t\tvar patch = y.i(x.g, y.g);\n\t\t\tpatch && _VirtualDom_pushPatch(patches, 5, index, patch);\n\n\t\t\treturn;\n\t}\n}\n\n// assumes the incoming arrays are the same length\nfunction _VirtualDom_pairwiseRefEqual(as, bs)\n{\n\tfor (var i = 0; i < as.length; i++)\n\t{\n\t\tif (as[i] !== bs[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction _VirtualDom_diffNodes(x, y, patches, index, diffKids)\n{\n\t// Bail if obvious indicators have changed. Implies more serious\n\t// structural changes such that it's not worth it to diff.\n\tif (x.c !== y.c || x.f !== y.f)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\treturn;\n\t}\n\n\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\tdiffKids(x, y, patches, index);\n}\n\n\n\n// DIFF FACTS\n\n\n// TODO Instead of creating a new diff object, it's possible to just test if\n// there *is* a diff. During the actual patch, do the diff again and make the\n// modifications directly. This way, there's no new allocations. Worth it?\nfunction _VirtualDom_diffFacts(x, y, category)\n{\n\tvar diff;\n\n\t// look for changes and removals\n\tfor (var xKey in x)\n\t{\n\t\tif (xKey === 'a1' || xKey === 'a0' || xKey === 'a3' || xKey === 'a4')\n\t\t{\n\t\t\tvar subDiff = _VirtualDom_diffFacts(x[xKey], y[xKey] || {}, xKey);\n\t\t\tif (subDiff)\n\t\t\t{\n\t\t\t\tdiff = diff || {};\n\t\t\t\tdiff[xKey] = subDiff;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove if not in the new facts\n\t\tif (!(xKey in y))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[xKey] =\n\t\t\t\t!category\n\t\t\t\t\t? (typeof x[xKey] === 'string' ? '' : null)\n\t\t\t\t\t:\n\t\t\t\t(category === 'a1')\n\t\t\t\t\t? ''\n\t\t\t\t\t:\n\t\t\t\t(category === 'a0' || category === 'a3')\n\t\t\t\t\t? undefined\n\t\t\t\t\t:\n\t\t\t\t{ f: x[xKey].f, o: undefined };\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar xValue = x[xKey];\n\t\tvar yValue = y[xKey];\n\n\t\t// reference equal, so don't worry about it\n\t\tif (xValue === yValue && xKey !== 'value' && xKey !== 'checked'\n\t\t\t|| category === 'a0' && _VirtualDom_equalEvents(xValue, yValue))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\tdiff = diff || {};\n\t\tdiff[xKey] = yValue;\n\t}\n\n\t// add new stuff\n\tfor (var yKey in y)\n\t{\n\t\tif (!(yKey in x))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[yKey] = y[yKey];\n\t\t}\n\t}\n\n\treturn diff;\n}\n\n\n\n// DIFF KIDS\n\n\nfunction _VirtualDom_diffKids(xParent, yParent, patches, index)\n{\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\n\t// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS\n\n\tif (xLen > yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 6, index, {\n\t\t\tv: yLen,\n\t\t\ti: xLen - yLen\n\t\t});\n\t}\n\telse if (xLen < yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 7, index, {\n\t\t\tv: xLen,\n\t\t\te: yKids\n\t\t});\n\t}\n\n\t// PAIRWISE DIFF EVERYTHING ELSE\n\n\tfor (var minLen = xLen < yLen ? xLen : yLen, i = 0; i < minLen; i++)\n\t{\n\t\tvar xKid = xKids[i];\n\t\t_VirtualDom_diffHelp(xKid, yKids[i], patches, ++index);\n\t\tindex += xKid.b || 0;\n\t}\n}\n\n\n\n// KEYED DIFF\n\n\nfunction _VirtualDom_diffKeyedKids(xParent, yParent, patches, rootIndex)\n{\n\tvar localPatches = [];\n\n\tvar changes = {}; // Dict String Entry\n\tvar inserts = []; // Array { index : Int, entry : Entry }\n\t// type Entry = { tag : String, vnode : VNode, index : Int, data : _ }\n\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\tvar xIndex = 0;\n\tvar yIndex = 0;\n\n\tvar index = rootIndex;\n\n\twhile (xIndex < xLen && yIndex < yLen)\n\t{\n\t\tvar x = xKids[xIndex];\n\t\tvar y = yKids[yIndex];\n\n\t\tvar xKey = x.a;\n\t\tvar yKey = y.a;\n\t\tvar xNode = x.b;\n\t\tvar yNode = y.b;\n\n\t\tvar newMatch = undefined;\n\t\tvar oldMatch = undefined;\n\n\t\t// check if keys match\n\n\t\tif (xKey === yKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex++;\n\t\t\tyIndex++;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// look ahead 1 to detect insertions and removals.\n\n\t\tvar xNext = xKids[xIndex + 1];\n\t\tvar yNext = yKids[yIndex + 1];\n\n\t\tif (xNext)\n\t\t{\n\t\t\tvar xNextKey = xNext.a;\n\t\t\tvar xNextNode = xNext.b;\n\t\t\toldMatch = yKey === xNextKey;\n\t\t}\n\n\t\tif (yNext)\n\t\t{\n\t\t\tvar yNextKey = yNext.a;\n\t\t\tvar yNextNode = yNext.b;\n\t\t\tnewMatch = xKey === yNextKey;\n\t\t}\n\n\n\t\t// swap x and y\n\t\tif (newMatch && oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, xKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNextNode, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// insert y\n\t\tif (newMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex += 1;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x\n\t\tif (oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 1;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x, insert y\n\t\tif (xNext && xNextKey === yNextKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNextNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n\n\t// eat up any remaining nodes with removeNode and insertNode\n\n\twhile (xIndex < xLen)\n\t{\n\t\tindex++;\n\t\tvar x = xKids[xIndex];\n\t\tvar xNode = x.b;\n\t\t_VirtualDom_removeNode(changes, localPatches, x.a, xNode, index);\n\t\tindex += xNode.b || 0;\n\t\txIndex++;\n\t}\n\n\twhile (yIndex < yLen)\n\t{\n\t\tvar endInserts = endInserts || [];\n\t\tvar y = yKids[yIndex];\n\t\t_VirtualDom_insertNode(changes, localPatches, y.a, y.b, undefined, endInserts);\n\t\tyIndex++;\n\t}\n\n\tif (localPatches.length > 0 || inserts.length > 0 || endInserts)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 8, rootIndex, {\n\t\t\tw: localPatches,\n\t\t\tx: inserts,\n\t\t\ty: endInserts\n\t\t});\n\t}\n}\n\n\n\n// CHANGES FROM KEYED DIFF\n\n\nvar _VirtualDom_POSTFIX = '_elmW6BL';\n\n\nfunction _VirtualDom_insertNode(changes, localPatches, key, vnode, yIndex, inserts)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tentry = {\n\t\t\tc: 0,\n\t\t\tz: vnode,\n\t\t\tr: yIndex,\n\t\t\ts: undefined\n\t\t};\n\n\t\tinserts.push({ r: yIndex, A: entry });\n\t\tchanges[key] = entry;\n\n\t\treturn;\n\t}\n\n\t// this key was removed earlier, a match!\n\tif (entry.c === 1)\n\t{\n\t\tinserts.push({ r: yIndex, A: entry });\n\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(entry.z, vnode, subPatches, entry.r);\n\t\tentry.r = yIndex;\n\t\tentry.s.s = {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key has already been inserted or moved, a duplicate!\n\t_VirtualDom_insertNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, yIndex, inserts);\n}\n\n\nfunction _VirtualDom_removeNode(changes, localPatches, key, vnode, index)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tvar patch = _VirtualDom_pushPatch(localPatches, 9, index, undefined);\n\n\t\tchanges[key] = {\n\t\t\tc: 1,\n\t\t\tz: vnode,\n\t\t\tr: index,\n\t\t\ts: patch\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key was inserted earlier, a match!\n\tif (entry.c === 0)\n\t{\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(vnode, entry.z, subPatches, index);\n\n\t\t_VirtualDom_pushPatch(localPatches, 9, index, {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t});\n\n\t\treturn;\n\t}\n\n\t// this key has already been removed or moved, a duplicate!\n\t_VirtualDom_removeNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, index);\n}\n\n\n\n// ADD DOM NODES\n//\n// Each DOM node has an \"index\" assigned in order of traversal. It is important\n// to minimize our crawl over the actual DOM, so these indexes (along with the\n// descendantsCount of virtual nodes) let us skip touching entire subtrees of\n// the DOM if we know there are no patches there.\n\n\nfunction _VirtualDom_addDomNodes(domNode, vNode, patches, eventNode)\n{\n\t_VirtualDom_addDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.b, eventNode);\n}\n\n\n// assumes `patches` is non-empty and indexes increase monotonically.\nfunction _VirtualDom_addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)\n{\n\tvar patch = patches[i];\n\tvar index = patch.r;\n\n\twhile (index === low)\n\t{\n\t\tvar patchType = patch.$;\n\n\t\tif (patchType === 1)\n\t\t{\n\t\t\t_VirtualDom_addDomNodes(domNode, vNode.k, patch.s, eventNode);\n\t\t}\n\t\telse if (patchType === 8)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar subPatches = patch.s.w;\n\t\t\tif (subPatches.length > 0)\n\t\t\t{\n\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t}\n\t\t}\n\t\telse if (patchType === 9)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar data = patch.s;\n\t\t\tif (data)\n\t\t\t{\n\t\t\t\tdata.A.s = domNode;\n\t\t\t\tvar subPatches = data.w;\n\t\t\t\tif (subPatches.length > 0)\n\t\t\t\t{\n\t\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\t\t}\n\n\t\ti++;\n\n\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n\n\tvar tag = vNode.$;\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\treturn _VirtualDom_addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);\n\t}\n\n\t// tag must be 1 or 2 at this point\n\n\tvar vKids = vNode.e;\n\tvar childNodes = domNode.childNodes;\n\tfor (var j = 0; j < vKids.length; j++)\n\t{\n\t\tlow++;\n\t\tvar vKid = tag === 1 ? vKids[j] : vKids[j].b;\n\t\tvar nextLow = low + (vKid.b || 0);\n\t\tif (low <= index && index <= nextLow)\n\t\t{\n\t\t\ti = _VirtualDom_addDomNodesHelp(childNodes[j], vKid, patches, i, low, nextLow, eventNode);\n\t\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\tlow = nextLow;\n\t}\n\treturn i;\n}\n\n\n\n// APPLY PATCHES\n\n\nfunction _VirtualDom_applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)\n{\n\tif (patches.length === 0)\n\t{\n\t\treturn rootDomNode;\n\t}\n\n\t_VirtualDom_addDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);\n\treturn _VirtualDom_applyPatchesHelp(rootDomNode, patches);\n}\n\nfunction _VirtualDom_applyPatchesHelp(rootDomNode, patches)\n{\n\tfor (var i = 0; i < patches.length; i++)\n\t{\n\t\tvar patch = patches[i];\n\t\tvar localDomNode = patch.t\n\t\tvar newNode = _VirtualDom_applyPatch(localDomNode, patch);\n\t\tif (localDomNode === rootDomNode)\n\t\t{\n\t\t\trootDomNode = newNode;\n\t\t}\n\t}\n\treturn rootDomNode;\n}\n\nfunction _VirtualDom_applyPatch(domNode, patch)\n{\n\tswitch (patch.$)\n\t{\n\t\tcase 0:\n\t\t\treturn _VirtualDom_applyPatchRedraw(domNode, patch.s, patch.u);\n\n\t\tcase 4:\n\t\t\t_VirtualDom_applyFacts(domNode, patch.u, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 3:\n\t\t\tdomNode.replaceData(0, domNode.length, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 1:\n\t\t\treturn _VirtualDom_applyPatchesHelp(domNode, patch.s);\n\n\t\tcase 2:\n\t\t\tif (domNode.elm_event_node_ref)\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref.j = patch.s;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref = { j: patch.s, p: patch.u };\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 6:\n\t\t\tvar data = patch.s;\n\t\t\tfor (var i = 0; i < data.i; i++)\n\t\t\t{\n\t\t\t\tdomNode.removeChild(domNode.childNodes[data.v]);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 7:\n\t\t\tvar data = patch.s;\n\t\t\tvar kids = data.e;\n\t\t\tvar i = data.v;\n\t\t\tvar theEnd = domNode.childNodes[i];\n\t\t\tfor (; i < kids.length; i++)\n\t\t\t{\n\t\t\t\tdomNode.insertBefore(_VirtualDom_render(kids[i], patch.u), theEnd);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 9:\n\t\t\tvar data = patch.s;\n\t\t\tif (!data)\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t\treturn domNode;\n\t\t\t}\n\t\t\tvar entry = data.A;\n\t\t\tif (typeof entry.r !== 'undefined')\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t}\n\t\t\tentry.s = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\t\t\treturn domNode;\n\n\t\tcase 8:\n\t\t\treturn _VirtualDom_applyPatchReorder(domNode, patch);\n\n\t\tcase 5:\n\t\t\treturn patch.s(domNode);\n\n\t\tdefault:\n\t\t\t_Debug_crash(10); // 'Ran into an unknown patch!'\n\t}\n}\n\n\nfunction _VirtualDom_applyPatchRedraw(domNode, vNode, eventNode)\n{\n\tvar parentNode = domNode.parentNode;\n\tvar newNode = _VirtualDom_render(vNode, eventNode);\n\n\tif (!newNode.elm_event_node_ref)\n\t{\n\t\tnewNode.elm_event_node_ref = domNode.elm_event_node_ref;\n\t}\n\n\tif (parentNode && newNode !== domNode)\n\t{\n\t\tparentNode.replaceChild(newNode, domNode);\n\t}\n\treturn newNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorder(domNode, patch)\n{\n\tvar data = patch.s;\n\n\t// remove end inserts\n\tvar frag = _VirtualDom_applyPatchReorderEndInsertsHelp(data.y, patch);\n\n\t// removals\n\tdomNode = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\n\t// inserts\n\tvar inserts = data.x;\n\tfor (var i = 0; i < inserts.length; i++)\n\t{\n\t\tvar insert = inserts[i];\n\t\tvar entry = insert.A;\n\t\tvar node = entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u);\n\t\tdomNode.insertBefore(node, domNode.childNodes[insert.r]);\n\t}\n\n\t// add end inserts\n\tif (frag)\n\t{\n\t\t_VirtualDom_appendChild(domNode, frag);\n\t}\n\n\treturn domNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorderEndInsertsHelp(endInserts, patch)\n{\n\tif (!endInserts)\n\t{\n\t\treturn;\n\t}\n\n\tvar frag = _VirtualDom_doc.createDocumentFragment();\n\tfor (var i = 0; i < endInserts.length; i++)\n\t{\n\t\tvar insert = endInserts[i];\n\t\tvar entry = insert.A;\n\t\t_VirtualDom_appendChild(frag, entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u)\n\t\t);\n\t}\n\treturn frag;\n}\n\n\nfunction _VirtualDom_virtualize(node)\n{\n\t// TEXT NODES\n\n\tif (node.nodeType === 3)\n\t{\n\t\treturn _VirtualDom_text(node.textContent);\n\t}\n\n\n\t// WEIRD NODES\n\n\tif (node.nodeType !== 1)\n\t{\n\t\treturn _VirtualDom_text('');\n\t}\n\n\n\t// ELEMENT NODES\n\n\tvar attrList = _List_Nil;\n\tvar attrs = node.attributes;\n\tfor (var i = attrs.length; i--; )\n\t{\n\t\tvar attr = attrs[i];\n\t\tvar name = attr.name;\n\t\tvar value = attr.value;\n\t\tattrList = _List_Cons( A2(_VirtualDom_attribute, name, value), attrList );\n\t}\n\n\tvar tag = node.tagName.toLowerCase();\n\tvar kidList = _List_Nil;\n\tvar kids = node.childNodes;\n\n\tfor (var i = kids.length; i--; )\n\t{\n\t\tkidList = _List_Cons(_VirtualDom_virtualize(kids[i]), kidList);\n\t}\n\treturn A3(_VirtualDom_node, tag, attrList, kidList);\n}\n\nfunction _VirtualDom_dekey(keyedNode)\n{\n\tvar keyedKids = keyedNode.e;\n\tvar len = keyedKids.length;\n\tvar kids = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tkids[i] = keyedKids[i].b;\n\t}\n\n\treturn {\n\t\t$: 1,\n\t\tc: keyedNode.c,\n\t\td: keyedNode.d,\n\t\te: kids,\n\t\tf: keyedNode.f,\n\t\tb: keyedNode.b\n\t};\n}\n\n\n\n\n// ELEMENT\n\n\nvar _Debugger_element;\n\nvar _Browser_element = _Debugger_element || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.aO,\n\t\timpl.aZ,\n\t\timpl.aX,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar view = impl.a$;\n\t\t\t/**/\n\t\t\tvar domNode = args['node'];\n\t\t\t//*/\n\t\t\t/**_UNUSED/\n\t\t\tvar domNode = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t\t\t//*/\n\t\t\tvar currNode = _VirtualDom_virtualize(domNode);\n\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\tvar nextNode = view(model);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tdomNode = _VirtualDom_applyPatches(domNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// DOCUMENT\n\n\nvar _Debugger_document;\n\nvar _Browser_document = _Debugger_document || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.aO,\n\t\timpl.aZ,\n\t\timpl.aX,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar divertHrefToApp = impl.M && impl.M(sendToApp)\n\t\t\tvar view = impl.a$;\n\t\t\tvar title = _VirtualDom_doc.title;\n\t\t\tvar bodyNode = _VirtualDom_doc.body;\n\t\t\tvar currNode = _VirtualDom_virtualize(bodyNode);\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\t_VirtualDom_divertHrefToApp = divertHrefToApp;\n\t\t\t\tvar doc = view(model);\n\t\t\t\tvar nextNode = _VirtualDom_node('body')(_List_Nil)(doc.aE);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tbodyNode = _VirtualDom_applyPatches(bodyNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t\t_VirtualDom_divertHrefToApp = 0;\n\t\t\t\t(title !== doc.aY) && (_VirtualDom_doc.title = title = doc.aY);\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// ANIMATION\n\n\nvar _Browser_cancelAnimationFrame =\n\ttypeof cancelAnimationFrame !== 'undefined'\n\t\t? cancelAnimationFrame\n\t\t: function(id) { clearTimeout(id); };\n\nvar _Browser_requestAnimationFrame =\n\ttypeof requestAnimationFrame !== 'undefined'\n\t\t? requestAnimationFrame\n\t\t: function(callback) { return setTimeout(callback, 1000 / 60); };\n\n\nfunction _Browser_makeAnimator(model, draw)\n{\n\tdraw(model);\n\n\tvar state = 0;\n\n\tfunction updateIfNeeded()\n\t{\n\t\tstate = state === 1\n\t\t\t? 0\n\t\t\t: ( _Browser_requestAnimationFrame(updateIfNeeded), draw(model), 1 );\n\t}\n\n\treturn function(nextModel, isSync)\n\t{\n\t\tmodel = nextModel;\n\n\t\tisSync\n\t\t\t? ( draw(model),\n\t\t\t\tstate === 2 && (state = 1)\n\t\t\t\t)\n\t\t\t: ( state === 0 && _Browser_requestAnimationFrame(updateIfNeeded),\n\t\t\t\tstate = 2\n\t\t\t\t);\n\t};\n}\n\n\n\n// APPLICATION\n\n\nfunction _Browser_application(impl)\n{\n\tvar onUrlChange = impl.aR;\n\tvar onUrlRequest = impl.aS;\n\tvar key = function() { key.a(onUrlChange(_Browser_getUrl())); };\n\n\treturn _Browser_document({\n\t\tM: function(sendToApp)\n\t\t{\n\t\t\tkey.a = sendToApp;\n\t\t\t_Browser_window.addEventListener('popstate', key);\n\t\t\t_Browser_window.navigator.userAgent.indexOf('Trident') < 0 || _Browser_window.addEventListener('hashchange', key);\n\n\t\t\treturn F2(function(domNode, event)\n\t\t\t{\n\t\t\t\tif (!event.ctrlKey && !event.metaKey && !event.shiftKey && event.button < 1 && !domNode.target && !domNode.hasAttribute('download'))\n\t\t\t\t{\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tvar href = domNode.href;\n\t\t\t\t\tvar curr = _Browser_getUrl();\n\t\t\t\t\tvar next = elm$url$Url$fromString(href).a;\n\t\t\t\t\tsendToApp(onUrlRequest(\n\t\t\t\t\t\t(next\n\t\t\t\t\t\t\t&& curr.ar === next.ar\n\t\t\t\t\t\t\t&& curr.ah === next.ah\n\t\t\t\t\t\t\t&& curr.ao.a === next.ao.a\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t? elm$browser$Browser$Internal(next)\n\t\t\t\t\t\t\t: elm$browser$Browser$External(href)\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\taO: function(flags)\n\t\t{\n\t\t\treturn A3(impl.aO, flags, _Browser_getUrl(), key);\n\t\t},\n\t\ta$: impl.a$,\n\t\taZ: impl.aZ,\n\t\taX: impl.aX\n\t});\n}\n\nfunction _Browser_getUrl()\n{\n\treturn elm$url$Url$fromString(_VirtualDom_doc.location.href).a || _Debug_crash(1);\n}\n\nvar _Browser_go = F2(function(key, n)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\tn && history.go(n);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_pushUrl = F2(function(key, url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.pushState({}, '', url);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_replaceUrl = F2(function(key, url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.replaceState({}, '', url);\n\t\tkey();\n\t}));\n});\n\n\n\n// GLOBAL EVENTS\n\n\nvar _Browser_fakeNode = { addEventListener: function() {}, removeEventListener: function() {} };\nvar _Browser_doc = typeof document !== 'undefined' ? document : _Browser_fakeNode;\nvar _Browser_window = typeof window !== 'undefined' ? window : _Browser_fakeNode;\n\nvar _Browser_on = F3(function(node, eventName, sendToSelf)\n{\n\treturn _Scheduler_spawn(_Scheduler_binding(function(callback)\n\t{\n\t\tfunction handler(event)\t{ _Scheduler_rawSpawn(sendToSelf(event)); }\n\t\tnode.addEventListener(eventName, handler, _VirtualDom_passiveSupported && { passive: true });\n\t\treturn function() { node.removeEventListener(eventName, handler); };\n\t}));\n});\n\nvar _Browser_decodeEvent = F2(function(decoder, event)\n{\n\tvar result = _Json_runHelp(decoder, event);\n\treturn elm$core$Result$isOk(result) ? elm$core$Maybe$Just(result.a) : elm$core$Maybe$Nothing;\n});\n\n\n\n// PAGE VISIBILITY\n\n\nfunction _Browser_visibilityInfo()\n{\n\treturn (typeof _VirtualDom_doc.hidden !== 'undefined')\n\t\t? { aL: 'hidden', aF: 'visibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.mozHidden !== 'undefined')\n\t\t? { aL: 'mozHidden', aF: 'mozvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.msHidden !== 'undefined')\n\t\t? { aL: 'msHidden', aF: 'msvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.webkitHidden !== 'undefined')\n\t\t? { aL: 'webkitHidden', aF: 'webkitvisibilitychange' }\n\t\t: { aL: 'hidden', aF: 'visibilitychange' };\n}\n\n\n\n// ANIMATION FRAMES\n\n\nfunction _Browser_rAF()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tvar id = _Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(Date.now()));\n\t\t});\n\n\t\treturn function() {\n\t\t\t_Browser_cancelAnimationFrame(id);\n\t\t};\n\t});\n}\n\n\nfunction _Browser_now()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(Date.now()));\n\t});\n}\n\n\n\n// DOM STUFF\n\n\nfunction _Browser_withNode(id, doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tvar node = document.getElementById(id);\n\t\t\tcallback(node\n\t\t\t\t? _Scheduler_succeed(doStuff(node))\n\t\t\t\t: _Scheduler_fail(elm$browser$Browser$Dom$NotFound(id))\n\t\t\t);\n\t\t});\n\t});\n}\n\n\nfunction _Browser_withWindow(doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(doStuff()));\n\t\t});\n\t});\n}\n\n\n// FOCUS and BLUR\n\n\nvar _Browser_call = F2(function(functionName, id)\n{\n\treturn _Browser_withNode(id, function(node) {\n\t\tnode[functionName]();\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// WINDOW VIEWPORT\n\n\nfunction _Browser_getViewport()\n{\n\treturn {\n\t\taw: _Browser_getScene(),\n\t\taz: {\n\t\t\tU: _Browser_window.pageXOffset,\n\t\t\tV: _Browser_window.pageYOffset,\n\t\t\tG: _Browser_doc.documentElement.clientWidth,\n\t\t\tB: _Browser_doc.documentElement.clientHeight\n\t\t}\n\t};\n}\n\nfunction _Browser_getScene()\n{\n\tvar body = _Browser_doc.body;\n\tvar elem = _Browser_doc.documentElement;\n\treturn {\n\t\tG: Math.max(body.scrollWidth, body.offsetWidth, elem.scrollWidth, elem.offsetWidth, elem.clientWidth),\n\t\tB: Math.max(body.scrollHeight, body.offsetHeight, elem.scrollHeight, elem.offsetHeight, elem.clientHeight)\n\t};\n}\n\nvar _Browser_setViewport = F2(function(x, y)\n{\n\treturn _Browser_withWindow(function()\n\t{\n\t\t_Browser_window.scroll(x, y);\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT VIEWPORT\n\n\nfunction _Browser_getViewportOf(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\treturn {\n\t\t\taw: {\n\t\t\t\tG: node.scrollWidth,\n\t\t\t\tB: node.scrollHeight\n\t\t\t},\n\t\t\taz: {\n\t\t\t\tU: node.scrollLeft,\n\t\t\t\tV: node.scrollTop,\n\t\t\t\tG: node.clientWidth,\n\t\t\t\tB: node.clientHeight\n\t\t\t}\n\t\t};\n\t});\n}\n\n\nvar _Browser_setViewportOf = F3(function(id, x, y)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tnode.scrollLeft = x;\n\t\tnode.scrollTop = y;\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT\n\n\nfunction _Browser_getElement(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tvar rect = node.getBoundingClientRect();\n\t\tvar x = _Browser_window.pageXOffset;\n\t\tvar y = _Browser_window.pageYOffset;\n\t\treturn {\n\t\t\taw: _Browser_getScene(),\n\t\t\taz: {\n\t\t\t\tU: x,\n\t\t\t\tV: y,\n\t\t\t\tG: _Browser_doc.documentElement.clientWidth,\n\t\t\t\tB: _Browser_doc.documentElement.clientHeight\n\t\t\t},\n\t\t\taG: {\n\t\t\t\tU: x + rect.left,\n\t\t\t\tV: y + rect.top,\n\t\t\t\tG: rect.width,\n\t\t\t\tB: rect.height\n\t\t\t}\n\t\t};\n\t});\n}\n\n\n\n// LOAD and RELOAD\n\n\nfunction _Browser_reload(skipCache)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\t_VirtualDom_doc.location.reload(skipCache);\n\t}));\n}\n\nfunction _Browser_load(url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\ttry\n\t\t{\n\t\t\t_Browser_window.location = url;\n\t\t}\n\t\tcatch(err)\n\t\t{\n\t\t\t// Only Firefox can throw a NS_ERROR_MALFORMED_URI exception here.\n\t\t\t// Other browsers reload the page, so let's be consistent about that.\n\t\t\t_VirtualDom_doc.location.reload(false);\n\t\t}\n\t}));\n}\nvar Kraxorax$elm_matrix_a$Matrix$Matrix = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$core$Array$branchFactor = 32;\nvar elm$core$Array$Array_elm_builtin = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 0, a: a, b: b, c: c, d: d};\n\t});\nvar elm$core$Basics$EQ = 1;\nvar elm$core$Basics$GT = 2;\nvar elm$core$Basics$LT = 0;\nvar elm$core$Dict$foldr = F3(\n\tfunction (func, acc, t) {\n\t\tfoldr:\n\t\twhile (true) {\n\t\t\tif (t.$ === -2) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = t.b;\n\t\t\t\tvar value = t.c;\n\t\t\t\tvar left = t.d;\n\t\t\t\tvar right = t.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3(elm$core$Dict$foldr, func, acc, right)),\n\t\t\t\t\t$temp$t = left;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tt = $temp$t;\n\t\t\t\tcontinue foldr;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$cons = _List_cons;\nvar elm$core$Dict$toList = function (dict) {\n\treturn A3(\n\t\telm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, list) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t_Utils_Tuple2(key, value),\n\t\t\t\t\tlist);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar elm$core$Dict$keys = function (dict) {\n\treturn A3(\n\t\telm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, keyList) {\n\t\t\t\treturn A2(elm$core$List$cons, key, keyList);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar elm$core$Set$toList = function (_n0) {\n\tvar dict = _n0;\n\treturn elm$core$Dict$keys(dict);\n};\nvar elm$core$Elm$JsArray$foldr = _JsArray_foldr;\nvar elm$core$Array$foldr = F3(\n\tfunction (func, baseCase, _n0) {\n\t\tvar tree = _n0.c;\n\t\tvar tail = _n0.d;\n\t\tvar helper = F2(\n\t\t\tfunction (node, acc) {\n\t\t\t\tif (!node.$) {\n\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldr, helper, acc, subTree);\n\t\t\t\t} else {\n\t\t\t\t\tvar values = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldr, func, acc, values);\n\t\t\t\t}\n\t\t\t});\n\t\treturn A3(\n\t\t\telm$core$Elm$JsArray$foldr,\n\t\t\thelper,\n\t\t\tA3(elm$core$Elm$JsArray$foldr, func, baseCase, tail),\n\t\t\ttree);\n\t});\nvar elm$core$Array$toList = function (array) {\n\treturn A3(elm$core$Array$foldr, elm$core$List$cons, _List_Nil, array);\n};\nvar elm$core$Basics$ceiling = _Basics_ceiling;\nvar elm$core$Basics$fdiv = _Basics_fdiv;\nvar elm$core$Basics$logBase = F2(\n\tfunction (base, number) {\n\t\treturn _Basics_log(number) / _Basics_log(base);\n\t});\nvar elm$core$Basics$toFloat = _Basics_toFloat;\nvar elm$core$Array$shiftStep = elm$core$Basics$ceiling(\n\tA2(elm$core$Basics$logBase, 2, elm$core$Array$branchFactor));\nvar elm$core$Elm$JsArray$empty = _JsArray_empty;\nvar elm$core$Array$empty = A4(elm$core$Array$Array_elm_builtin, 0, elm$core$Array$shiftStep, elm$core$Elm$JsArray$empty, elm$core$Elm$JsArray$empty);\nvar elm$core$Array$Leaf = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$core$Array$SubTree = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$core$Elm$JsArray$initializeFromList = _JsArray_initializeFromList;\nvar elm$core$List$foldl = F3(\n\tfunction (func, acc, list) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A2(func, x, acc),\n\t\t\t\t\t$temp$list = xs;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$reverse = function (list) {\n\treturn A3(elm$core$List$foldl, elm$core$List$cons, _List_Nil, list);\n};\nvar elm$core$Array$compressNodes = F2(\n\tfunction (nodes, acc) {\n\t\tcompressNodes:\n\t\twhile (true) {\n\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, nodes);\n\t\t\tvar node = _n0.a;\n\t\t\tvar remainingNodes = _n0.b;\n\t\t\tvar newAcc = A2(\n\t\t\t\telm$core$List$cons,\n\t\t\t\telm$core$Array$SubTree(node),\n\t\t\t\tacc);\n\t\t\tif (!remainingNodes.b) {\n\t\t\t\treturn elm$core$List$reverse(newAcc);\n\t\t\t} else {\n\t\t\t\tvar $temp$nodes = remainingNodes,\n\t\t\t\t\t$temp$acc = newAcc;\n\t\t\t\tnodes = $temp$nodes;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tcontinue compressNodes;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$apR = F2(\n\tfunction (x, f) {\n\t\treturn f(x);\n\t});\nvar elm$core$Basics$eq = _Utils_equal;\nvar elm$core$Tuple$first = function (_n0) {\n\tvar x = _n0.a;\n\treturn x;\n};\nvar elm$core$Array$treeFromBuilder = F2(\n\tfunction (nodeList, nodeListSize) {\n\t\ttreeFromBuilder:\n\t\twhile (true) {\n\t\t\tvar newNodeSize = elm$core$Basics$ceiling(nodeListSize / elm$core$Array$branchFactor);\n\t\t\tif (newNodeSize === 1) {\n\t\t\t\treturn A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, nodeList).a;\n\t\t\t} else {\n\t\t\t\tvar $temp$nodeList = A2(elm$core$Array$compressNodes, nodeList, _List_Nil),\n\t\t\t\t\t$temp$nodeListSize = newNodeSize;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\tnodeListSize = $temp$nodeListSize;\n\t\t\t\tcontinue treeFromBuilder;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$add = _Basics_add;\nvar elm$core$Basics$apL = F2(\n\tfunction (f, x) {\n\t\treturn f(x);\n\t});\nvar elm$core$Basics$floor = _Basics_floor;\nvar elm$core$Basics$gt = _Utils_gt;\nvar elm$core$Basics$max = F2(\n\tfunction (x, y) {\n\t\treturn (_Utils_cmp(x, y) > 0) ? x : y;\n\t});\nvar elm$core$Basics$mul = _Basics_mul;\nvar elm$core$Basics$sub = _Basics_sub;\nvar elm$core$Elm$JsArray$length = _JsArray_length;\nvar elm$core$Array$builderToArray = F2(\n\tfunction (reverseNodeList, builder) {\n\t\tif (!builder.a) {\n\t\t\treturn A4(\n\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\telm$core$Elm$JsArray$length(builder.c),\n\t\t\t\telm$core$Array$shiftStep,\n\t\t\t\telm$core$Elm$JsArray$empty,\n\t\t\t\tbuilder.c);\n\t\t} else {\n\t\t\tvar treeLen = builder.a * elm$core$Array$branchFactor;\n\t\t\tvar depth = elm$core$Basics$floor(\n\t\t\t\tA2(elm$core$Basics$logBase, elm$core$Array$branchFactor, treeLen - 1));\n\t\t\tvar correctNodeList = reverseNodeList ? elm$core$List$reverse(builder.d) : builder.d;\n\t\t\tvar tree = A2(elm$core$Array$treeFromBuilder, correctNodeList, builder.a);\n\t\t\treturn A4(\n\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\telm$core$Elm$JsArray$length(builder.c) + treeLen,\n\t\t\t\tA2(elm$core$Basics$max, 5, depth * elm$core$Array$shiftStep),\n\t\t\t\ttree,\n\t\t\t\tbuilder.c);\n\t\t}\n\t});\nvar elm$core$Basics$False = 1;\nvar elm$core$Basics$idiv = _Basics_idiv;\nvar elm$core$Basics$lt = _Utils_lt;\nvar elm$core$Elm$JsArray$initialize = _JsArray_initialize;\nvar elm$core$Array$initializeHelp = F5(\n\tfunction (fn, fromIndex, len, nodeList, tail) {\n\t\tinitializeHelp:\n\t\twhile (true) {\n\t\t\tif (fromIndex < 0) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Array$builderToArray,\n\t\t\t\t\tfalse,\n\t\t\t\t\t{d: nodeList, a: (len / elm$core$Array$branchFactor) | 0, c: tail});\n\t\t\t} else {\n\t\t\t\tvar leaf = elm$core$Array$Leaf(\n\t\t\t\t\tA3(elm$core$Elm$JsArray$initialize, elm$core$Array$branchFactor, fromIndex, fn));\n\t\t\t\tvar $temp$fn = fn,\n\t\t\t\t\t$temp$fromIndex = fromIndex - elm$core$Array$branchFactor,\n\t\t\t\t\t$temp$len = len,\n\t\t\t\t\t$temp$nodeList = A2(elm$core$List$cons, leaf, nodeList),\n\t\t\t\t\t$temp$tail = tail;\n\t\t\t\tfn = $temp$fn;\n\t\t\t\tfromIndex = $temp$fromIndex;\n\t\t\t\tlen = $temp$len;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\ttail = $temp$tail;\n\t\t\t\tcontinue initializeHelp;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$le = _Utils_le;\nvar elm$core$Basics$remainderBy = _Basics_remainderBy;\nvar elm$core$Array$initialize = F2(\n\tfunction (len, fn) {\n\t\tif (len <= 0) {\n\t\t\treturn elm$core$Array$empty;\n\t\t} else {\n\t\t\tvar tailLen = len % elm$core$Array$branchFactor;\n\t\t\tvar tail = A3(elm$core$Elm$JsArray$initialize, tailLen, len - tailLen, fn);\n\t\t\tvar initialFromIndex = (len - tailLen) - elm$core$Array$branchFactor;\n\t\t\treturn A5(elm$core$Array$initializeHelp, fn, initialFromIndex, len, _List_Nil, tail);\n\t\t}\n\t});\nvar Kraxorax$elm_matrix_a$Matrix$generate = F3(\n\tfunction (w, h, f) {\n\t\treturn A2(\n\t\t\tKraxorax$elm_matrix_a$Matrix$Matrix,\n\t\t\tw,\n\t\t\tA2(\n\t\t\t\telm$core$Array$initialize,\n\t\t\t\th,\n\t\t\t\tfunction (y) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\telm$core$Array$initialize,\n\t\t\t\t\t\tw,\n\t\t\t\t\t\tfunction (x) {\n\t\t\t\t\t\t\treturn A2(f, x, y);\n\t\t\t\t\t\t});\n\t\t\t\t}));\n\t});\nvar elm$core$Basics$append = _Utils_append;\nvar elm$core$Maybe$Just = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$core$Maybe$Nothing = {$: 1};\nvar elm$core$String$fromInt = _String_fromNumber;\nvar author$project$MatrixUtils$cellId = F2(\n\tfunction (x, y) {\n\t\treturn elm$core$String$fromInt(x) + ('-' + elm$core$String$fromInt(y));\n\t});\nvar author$project$MatrixUtils$blinkers = _List_fromArray(\n\t[\n\t\t_List_fromArray(\n\t\t[19, 20]),\n\t\t_List_fromArray(\n\t\t[18, 21]),\n\t\t_List_fromArray(\n\t\t[19, 21]),\n\t\t_List_fromArray(\n\t\t[20, 21]),\n\t\t_List_fromArray(\n\t\t[19, 22])\n\t]);\nvar author$project$MatrixUtils$glider = _List_fromArray(\n\t[\n\t\t_List_fromArray(\n\t\t[18, 22]),\n\t\t_List_fromArray(\n\t\t[19, 22]),\n\t\t_List_fromArray(\n\t\t[20, 22]),\n\t\t_List_fromArray(\n\t\t[20, 21]),\n\t\t_List_fromArray(\n\t\t[19, 20])\n\t]);\nvar elm$core$Dict$RBEmpty_elm_builtin = {$: -2};\nvar elm$core$Dict$empty = elm$core$Dict$RBEmpty_elm_builtin;\nvar elm$core$Dict$Black = 1;\nvar elm$core$Dict$RBNode_elm_builtin = F5(\n\tfunction (a, b, c, d, e) {\n\t\treturn {$: -1, a: a, b: b, c: c, d: d, e: e};\n\t});\nvar elm$core$Basics$compare = _Utils_compare;\nvar elm$core$Dict$Red = 0;\nvar elm$core$Dict$balance = F5(\n\tfunction (color, key, value, left, right) {\n\t\tif ((right.$ === -1) && (!right.a)) {\n\t\t\tvar _n1 = right.a;\n\t\t\tvar rK = right.b;\n\t\t\tvar rV = right.c;\n\t\t\tvar rLeft = right.d;\n\t\t\tvar rRight = right.e;\n\t\t\tif ((left.$ === -1) && (!left.a)) {\n\t\t\t\tvar _n3 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar lLeft = left.d;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t0,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, rK, rV, rLeft, rRight));\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\tcolor,\n\t\t\t\t\trK,\n\t\t\t\t\trV,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, key, value, left, rLeft),\n\t\t\t\t\trRight);\n\t\t\t}\n\t\t} else {\n\t\t\tif ((((left.$ === -1) && (!left.a)) && (left.d.$ === -1)) && (!left.d.a)) {\n\t\t\t\tvar _n5 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar _n6 = left.d;\n\t\t\t\tvar _n7 = _n6.a;\n\t\t\t\tvar llK = _n6.b;\n\t\t\t\tvar llV = _n6.c;\n\t\t\t\tvar llLeft = _n6.d;\n\t\t\t\tvar llRight = _n6.e;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t0,\n\t\t\t\t\tlK,\n\t\t\t\t\tlV,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, llK, llV, llLeft, llRight),\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, key, value, lRight, right));\n\t\t\t} else {\n\t\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, color, key, value, left, right);\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$insertHelp = F3(\n\tfunction (key, value, dict) {\n\t\tif (dict.$ === -2) {\n\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, 0, key, value, elm$core$Dict$RBEmpty_elm_builtin, elm$core$Dict$RBEmpty_elm_builtin);\n\t\t} else {\n\t\t\tvar nColor = dict.a;\n\t\t\tvar nKey = dict.b;\n\t\t\tvar nValue = dict.c;\n\t\t\tvar nLeft = dict.d;\n\t\t\tvar nRight = dict.e;\n\t\t\tvar _n1 = A2(elm$core$Basics$compare, key, nKey);\n\t\t\tswitch (_n1) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\telm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tA3(elm$core$Dict$insertHelp, key, value, nLeft),\n\t\t\t\t\t\tnRight);\n\t\t\t\tcase 1:\n\t\t\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, nColor, nKey, value, nLeft, nRight);\n\t\t\t\tdefault:\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\telm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tnLeft,\n\t\t\t\t\t\tA3(elm$core$Dict$insertHelp, key, value, nRight));\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$insert = F3(\n\tfunction (key, value, dict) {\n\t\tvar _n0 = A3(elm$core$Dict$insertHelp, key, value, dict);\n\t\tif ((_n0.$ === -1) && (!_n0.a)) {\n\t\t\tvar _n1 = _n0.a;\n\t\t\tvar k = _n0.b;\n\t\t\tvar v = _n0.c;\n\t\t\tvar l = _n0.d;\n\t\t\tvar r = _n0.e;\n\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, 1, k, v, l, r);\n\t\t} else {\n\t\t\tvar x = _n0;\n\t\t\treturn x;\n\t\t}\n\t});\nvar elm$core$Dict$fromList = function (assocs) {\n\treturn A3(\n\t\telm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_n0, dict) {\n\t\t\t\tvar key = _n0.a;\n\t\t\t\tvar value = _n0.b;\n\t\t\t\treturn A3(elm$core$Dict$insert, key, value, dict);\n\t\t\t}),\n\t\telm$core$Dict$empty,\n\t\tassocs);\n};\nvar author$project$MatrixUtils$patterns = elm$core$Dict$fromList(\n\t_List_fromArray(\n\t\t[\n\t\t\t_Utils_Tuple2('glider', author$project$MatrixUtils$glider),\n\t\t\t_Utils_Tuple2('blinkers', author$project$MatrixUtils$blinkers)\n\t\t]));\nvar elm$core$Dict$get = F2(\n\tfunction (targetKey, dict) {\n\t\tget:\n\t\twhile (true) {\n\t\t\tif (dict.$ === -2) {\n\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t} else {\n\t\t\t\tvar key = dict.b;\n\t\t\t\tvar value = dict.c;\n\t\t\t\tvar left = dict.d;\n\t\t\t\tvar right = dict.e;\n\t\t\t\tvar _n1 = A2(elm$core$Basics$compare, targetKey, key);\n\t\t\t\tswitch (_n1) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tvar $temp$targetKey = targetKey,\n\t\t\t\t\t\t\t$temp$dict = left;\n\t\t\t\t\t\ttargetKey = $temp$targetKey;\n\t\t\t\t\t\tdict = $temp$dict;\n\t\t\t\t\t\tcontinue get;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturn elm$core$Maybe$Just(value);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar $temp$targetKey = targetKey,\n\t\t\t\t\t\t\t$temp$dict = right;\n\t\t\t\t\t\ttargetKey = $temp$targetKey;\n\t\t\t\t\t\tdict = $temp$dict;\n\t\t\t\t\t\tcontinue get;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar author$project$MatrixUtils$getPattern = function (patternName) {\n\tvar _n0 = A2(elm$core$Dict$get, patternName, author$project$MatrixUtils$patterns);\n\tif (!_n0.$) {\n\t\tvar list = _n0.a;\n\t\treturn list;\n\t} else {\n\t\treturn _List_Nil;\n\t}\n};\nvar elm$core$Basics$and = _Basics_and;\nvar elm$core$Basics$not = _Basics_not;\nvar elm$core$List$foldrHelper = F4(\n\tfunction (fn, acc, ctr, ls) {\n\t\tif (!ls.b) {\n\t\t\treturn acc;\n\t\t} else {\n\t\t\tvar a = ls.a;\n\t\t\tvar r1 = ls.b;\n\t\t\tif (!r1.b) {\n\t\t\t\treturn A2(fn, a, acc);\n\t\t\t} else {\n\t\t\t\tvar b = r1.a;\n\t\t\t\tvar r2 = r1.b;\n\t\t\t\tif (!r2.b) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\tfn,\n\t\t\t\t\t\ta,\n\t\t\t\t\t\tA2(fn, b, acc));\n\t\t\t\t} else {\n\t\t\t\t\tvar c = r2.a;\n\t\t\t\t\tvar r3 = r2.b;\n\t\t\t\t\tif (!r3.b) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(fn, c, acc)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar d = r3.a;\n\t\t\t\t\t\tvar r4 = r3.b;\n\t\t\t\t\t\tvar res = (ctr > 500) ? A3(\n\t\t\t\t\t\t\telm$core$List$foldl,\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\tacc,\n\t\t\t\t\t\t\telm$core$List$reverse(r4)) : A4(elm$core$List$foldrHelper, fn, acc, ctr + 1, r4);\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\t\tc,\n\t\t\t\t\t\t\t\t\tA2(fn, d, res))));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$foldr = F3(\n\tfunction (fn, acc, ls) {\n\t\treturn A4(elm$core$List$foldrHelper, fn, acc, 0, ls);\n\t});\nvar elm$core$List$filter = F2(\n\tfunction (isGood, list) {\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, xs) {\n\t\t\t\t\treturn isGood(x) ? A2(elm$core$List$cons, x, xs) : xs;\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\tlist);\n\t});\nvar elm$core$Basics$True = 0;\nvar elm$core$List$isEmpty = function (xs) {\n\tif (!xs.b) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar author$project$MatrixUtils$isIncludedInPattern = F3(\n\tfunction (itemX, itemY, pattern) {\n\t\treturn !elm$core$List$isEmpty(\n\t\t\tA2(\n\t\t\t\telm$core$List$filter,\n\t\t\t\tfunction (list) {\n\t\t\t\t\tif ((list.b && list.b.b) && (!list.b.b.b)) {\n\t\t\t\t\t\tvar x = list.a;\n\t\t\t\t\t\tvar _n1 = list.b;\n\t\t\t\t\t\tvar y = _n1.a;\n\t\t\t\t\t\treturn _Utils_eq(itemX, x) && _Utils_eq(itemY, y);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tpattern));\n\t});\nvar author$project$MatrixUtils$sideSize = 50;\nvar author$project$Types$Cell = F4(\n\tfunction (posX, posY, id, alive) {\n\t\treturn {aC: alive, aM: id, aU: posX, aV: posY};\n\t});\nvar author$project$MatrixUtils$fieldMatrix = function (patternName) {\n\treturn A3(\n\t\tKraxorax$elm_matrix_a$Matrix$generate,\n\t\tauthor$project$MatrixUtils$sideSize,\n\t\tauthor$project$MatrixUtils$sideSize,\n\t\tF2(\n\t\t\tfunction (x, y) {\n\t\t\t\tvar alive = A3(\n\t\t\t\t\tauthor$project$MatrixUtils$isIncludedInPattern,\n\t\t\t\t\tx,\n\t\t\t\t\ty,\n\t\t\t\t\tauthor$project$MatrixUtils$getPattern(patternName));\n\t\t\t\treturn A4(\n\t\t\t\t\tauthor$project$Types$Cell,\n\t\t\t\t\tx,\n\t\t\t\t\ty,\n\t\t\t\t\tA2(author$project$MatrixUtils$cellId, x, y),\n\t\t\t\t\talive);\n\t\t\t}));\n};\nvar elm$core$Elm$JsArray$appendN = _JsArray_appendN;\nvar elm$core$Elm$JsArray$slice = _JsArray_slice;\nvar elm$core$Array$appendHelpBuilder = F2(\n\tfunction (tail, builder) {\n\t\tvar tailLen = elm$core$Elm$JsArray$length(tail);\n\t\tvar notAppended = (elm$core$Array$branchFactor - elm$core$Elm$JsArray$length(builder.c)) - tailLen;\n\t\tvar appended = A3(elm$core$Elm$JsArray$appendN, elm$core$Array$branchFactor, builder.c, tail);\n\t\treturn (notAppended < 0) ? {\n\t\t\td: A2(\n\t\t\t\telm$core$List$cons,\n\t\t\t\telm$core$Array$Leaf(appended),\n\t\t\t\tbuilder.d),\n\t\t\ta: builder.a + 1,\n\t\t\tc: A3(elm$core$Elm$JsArray$slice, notAppended, tailLen, tail)\n\t\t} : ((!notAppended) ? {\n\t\t\td: A2(\n\t\t\t\telm$core$List$cons,\n\t\t\t\telm$core$Array$Leaf(appended),\n\t\t\t\tbuilder.d),\n\t\t\ta: builder.a + 1,\n\t\t\tc: elm$core$Elm$JsArray$empty\n\t\t} : {d: builder.d, a: builder.a, c: appended});\n\t});\nvar elm$core$Bitwise$shiftRightZfBy = _Bitwise_shiftRightZfBy;\nvar elm$core$Array$bitMask = 4294967295 >>> (32 - elm$core$Array$shiftStep);\nvar elm$core$Basics$ge = _Utils_ge;\nvar elm$core$Bitwise$and = _Bitwise_and;\nvar elm$core$Elm$JsArray$push = _JsArray_push;\nvar elm$core$Elm$JsArray$singleton = _JsArray_singleton;\nvar elm$core$Elm$JsArray$unsafeGet = _JsArray_unsafeGet;\nvar elm$core$Elm$JsArray$unsafeSet = _JsArray_unsafeSet;\nvar elm$core$Array$insertTailInTree = F4(\n\tfunction (shift, index, tail, tree) {\n\t\tvar pos = elm$core$Array$bitMask & (index >>> shift);\n\t\tif (_Utils_cmp(\n\t\t\tpos,\n\t\t\telm$core$Elm$JsArray$length(tree)) > -1) {\n\t\t\tif (shift === 5) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Elm$JsArray$push,\n\t\t\t\t\telm$core$Array$Leaf(tail),\n\t\t\t\t\ttree);\n\t\t\t} else {\n\t\t\t\tvar newSub = elm$core$Array$SubTree(\n\t\t\t\t\tA4(elm$core$Array$insertTailInTree, shift - elm$core$Array$shiftStep, index, tail, elm$core$Elm$JsArray$empty));\n\t\t\t\treturn A2(elm$core$Elm$JsArray$push, newSub, tree);\n\t\t\t}\n\t\t} else {\n\t\t\tvar value = A2(elm$core$Elm$JsArray$unsafeGet, pos, tree);\n\t\t\tif (!value.$) {\n\t\t\t\tvar subTree = value.a;\n\t\t\t\tvar newSub = elm$core$Array$SubTree(\n\t\t\t\t\tA4(elm$core$Array$insertTailInTree, shift - elm$core$Array$shiftStep, index, tail, subTree));\n\t\t\t\treturn A3(elm$core$Elm$JsArray$unsafeSet, pos, newSub, tree);\n\t\t\t} else {\n\t\t\t\tvar newSub = elm$core$Array$SubTree(\n\t\t\t\t\tA4(\n\t\t\t\t\t\telm$core$Array$insertTailInTree,\n\t\t\t\t\t\tshift - elm$core$Array$shiftStep,\n\t\t\t\t\t\tindex,\n\t\t\t\t\t\ttail,\n\t\t\t\t\t\telm$core$Elm$JsArray$singleton(value)));\n\t\t\t\treturn A3(elm$core$Elm$JsArray$unsafeSet, pos, newSub, tree);\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Bitwise$shiftLeftBy = _Bitwise_shiftLeftBy;\nvar elm$core$Array$unsafeReplaceTail = F2(\n\tfunction (newTail, _n0) {\n\t\tvar len = _n0.a;\n\t\tvar startShift = _n0.b;\n\t\tvar tree = _n0.c;\n\t\tvar tail = _n0.d;\n\t\tvar originalTailLen = elm$core$Elm$JsArray$length(tail);\n\t\tvar newTailLen = elm$core$Elm$JsArray$length(newTail);\n\t\tvar newArrayLen = len + (newTailLen - originalTailLen);\n\t\tif (_Utils_eq(newTailLen, elm$core$Array$branchFactor)) {\n\t\t\tvar overflow = _Utils_cmp(newArrayLen >>> elm$core$Array$shiftStep, 1 << startShift) > 0;\n\t\t\tif (overflow) {\n\t\t\t\tvar newShift = startShift + elm$core$Array$shiftStep;\n\t\t\t\tvar newTree = A4(\n\t\t\t\t\telm$core$Array$insertTailInTree,\n\t\t\t\t\tnewShift,\n\t\t\t\t\tlen,\n\t\t\t\t\tnewTail,\n\t\t\t\t\telm$core$Elm$JsArray$singleton(\n\t\t\t\t\t\telm$core$Array$SubTree(tree)));\n\t\t\t\treturn A4(elm$core$Array$Array_elm_builtin, newArrayLen, newShift, newTree, elm$core$Elm$JsArray$empty);\n\t\t\t} else {\n\t\t\t\treturn A4(\n\t\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\t\tnewArrayLen,\n\t\t\t\t\tstartShift,\n\t\t\t\t\tA4(elm$core$Array$insertTailInTree, startShift, len, newTail, tree),\n\t\t\t\t\telm$core$Elm$JsArray$empty);\n\t\t\t}\n\t\t} else {\n\t\t\treturn A4(elm$core$Array$Array_elm_builtin, newArrayLen, startShift, tree, newTail);\n\t\t}\n\t});\nvar elm$core$Array$appendHelpTree = F2(\n\tfunction (toAppend, array) {\n\t\tvar len = array.a;\n\t\tvar tree = array.c;\n\t\tvar tail = array.d;\n\t\tvar itemsToAppend = elm$core$Elm$JsArray$length(toAppend);\n\t\tvar notAppended = (elm$core$Array$branchFactor - elm$core$Elm$JsArray$length(tail)) - itemsToAppend;\n\t\tvar appended = A3(elm$core$Elm$JsArray$appendN, elm$core$Array$branchFactor, tail, toAppend);\n\t\tvar newArray = A2(elm$core$Array$unsafeReplaceTail, appended, array);\n\t\tif (notAppended < 0) {\n\t\t\tvar nextTail = A3(elm$core$Elm$JsArray$slice, notAppended, itemsToAppend, toAppend);\n\t\t\treturn A2(elm$core$Array$unsafeReplaceTail, nextTail, newArray);\n\t\t} else {\n\t\t\treturn newArray;\n\t\t}\n\t});\nvar elm$core$Elm$JsArray$foldl = _JsArray_foldl;\nvar elm$core$Array$builderFromArray = function (_n0) {\n\tvar len = _n0.a;\n\tvar tree = _n0.c;\n\tvar tail = _n0.d;\n\tvar helper = F2(\n\t\tfunction (node, acc) {\n\t\t\tif (!node.$) {\n\t\t\t\tvar subTree = node.a;\n\t\t\t\treturn A3(elm$core$Elm$JsArray$foldl, helper, acc, subTree);\n\t\t\t} else {\n\t\t\t\treturn A2(elm$core$List$cons, node, acc);\n\t\t\t}\n\t\t});\n\treturn {\n\t\td: A3(elm$core$Elm$JsArray$foldl, helper, _List_Nil, tree),\n\t\ta: (len / elm$core$Array$branchFactor) | 0,\n\t\tc: tail\n\t};\n};\nvar elm$core$Array$append = F2(\n\tfunction (a, _n0) {\n\t\tvar aTail = a.d;\n\t\tvar bLen = _n0.a;\n\t\tvar bTree = _n0.c;\n\t\tvar bTail = _n0.d;\n\t\tif (_Utils_cmp(bLen, elm$core$Array$branchFactor * 4) < 1) {\n\t\t\tvar foldHelper = F2(\n\t\t\t\tfunction (node, array) {\n\t\t\t\t\tif (!node.$) {\n\t\t\t\t\t\tvar tree = node.a;\n\t\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldl, foldHelper, array, tree);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar leaf = node.a;\n\t\t\t\t\t\treturn A2(elm$core$Array$appendHelpTree, leaf, array);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\treturn A2(\n\t\t\t\telm$core$Array$appendHelpTree,\n\t\t\t\tbTail,\n\t\t\t\tA3(elm$core$Elm$JsArray$foldl, foldHelper, a, bTree));\n\t\t} else {\n\t\t\tvar foldHelper = F2(\n\t\t\t\tfunction (node, builder) {\n\t\t\t\t\tif (!node.$) {\n\t\t\t\t\t\tvar tree = node.a;\n\t\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldl, foldHelper, builder, tree);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar leaf = node.a;\n\t\t\t\t\t\treturn A2(elm$core$Array$appendHelpBuilder, leaf, builder);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\treturn A2(\n\t\t\t\telm$core$Array$builderToArray,\n\t\t\t\ttrue,\n\t\t\t\tA2(\n\t\t\t\t\telm$core$Array$appendHelpBuilder,\n\t\t\t\t\tbTail,\n\t\t\t\t\tA3(\n\t\t\t\t\t\telm$core$Elm$JsArray$foldl,\n\t\t\t\t\t\tfoldHelper,\n\t\t\t\t\t\telm$core$Array$builderFromArray(a),\n\t\t\t\t\t\tbTree)));\n\t\t}\n\t});\nvar Kraxorax$elm_matrix_a$Matrix$toArray = function (_n0) {\n\tvar m = _n0.b;\n\treturn A3(elm$core$Array$foldr, elm$core$Array$append, elm$core$Array$empty, m);\n};\nvar elm$core$Array$fromListHelp = F3(\n\tfunction (list, nodeList, nodeListSize) {\n\t\tfromListHelp:\n\t\twhile (true) {\n\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, list);\n\t\t\tvar jsArray = _n0.a;\n\t\t\tvar remainingItems = _n0.b;\n\t\t\tif (_Utils_cmp(\n\t\t\t\telm$core$Elm$JsArray$length(jsArray),\n\t\t\t\telm$core$Array$branchFactor) < 0) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Array$builderToArray,\n\t\t\t\t\ttrue,\n\t\t\t\t\t{d: nodeList, a: nodeListSize, c: jsArray});\n\t\t\t} else {\n\t\t\t\tvar $temp$list = remainingItems,\n\t\t\t\t\t$temp$nodeList = A2(\n\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\telm$core$Array$Leaf(jsArray),\n\t\t\t\t\tnodeList),\n\t\t\t\t\t$temp$nodeListSize = nodeListSize + 1;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\tnodeListSize = $temp$nodeListSize;\n\t\t\t\tcontinue fromListHelp;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$fromList = function (list) {\n\tif (!list.b) {\n\t\treturn elm$core$Array$empty;\n\t} else {\n\t\treturn A3(elm$core$Array$fromListHelp, list, _List_Nil, 0);\n\t}\n};\nvar elm$core$Array$filter = F2(\n\tfunction (isGood, array) {\n\t\treturn elm$core$Array$fromList(\n\t\t\tA3(\n\t\t\t\telm$core$Array$foldr,\n\t\t\t\tF2(\n\t\t\t\t\tfunction (x, xs) {\n\t\t\t\t\t\treturn isGood(x) ? A2(elm$core$List$cons, x, xs) : xs;\n\t\t\t\t\t}),\n\t\t\t\t_List_Nil,\n\t\t\t\tarray));\n\t});\nvar author$project$MatrixUtils$getAliveCells = function (matrix) {\n\treturn elm$core$Array$toList(\n\t\tA2(\n\t\t\telm$core$Array$filter,\n\t\t\tfunction ($) {\n\t\t\t\treturn $.aC;\n\t\t\t},\n\t\t\tKraxorax$elm_matrix_a$Matrix$toArray(matrix)));\n};\nvar elm$core$Result$isOk = function (result) {\n\tif (!result.$) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar elm$core$Result$Err = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$core$Result$Ok = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$json$Json$Decode$Failure = F2(\n\tfunction (a, b) {\n\t\treturn {$: 3, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$Field = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$Index = F2(\n\tfunction (a, b) {\n\t\treturn {$: 1, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$OneOf = function (a) {\n\treturn {$: 2, a: a};\n};\nvar elm$core$Basics$or = _Basics_or;\nvar elm$core$Char$toCode = _Char_toCode;\nvar elm$core$Char$isLower = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (97 <= code) && (code <= 122);\n};\nvar elm$core$Char$isUpper = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (code <= 90) && (65 <= code);\n};\nvar elm$core$Char$isAlpha = function (_char) {\n\treturn elm$core$Char$isLower(_char) || elm$core$Char$isUpper(_char);\n};\nvar elm$core$Char$isDigit = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (code <= 57) && (48 <= code);\n};\nvar elm$core$Char$isAlphaNum = function (_char) {\n\treturn elm$core$Char$isLower(_char) || (elm$core$Char$isUpper(_char) || elm$core$Char$isDigit(_char));\n};\nvar elm$core$List$length = function (xs) {\n\treturn A3(\n\t\telm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_n0, i) {\n\t\t\t\treturn i + 1;\n\t\t\t}),\n\t\t0,\n\t\txs);\n};\nvar elm$core$List$map2 = _List_map2;\nvar elm$core$List$rangeHelp = F3(\n\tfunction (lo, hi, list) {\n\t\trangeHelp:\n\t\twhile (true) {\n\t\t\tif (_Utils_cmp(lo, hi) < 1) {\n\t\t\t\tvar $temp$lo = lo,\n\t\t\t\t\t$temp$hi = hi - 1,\n\t\t\t\t\t$temp$list = A2(elm$core$List$cons, hi, list);\n\t\t\t\tlo = $temp$lo;\n\t\t\t\thi = $temp$hi;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue rangeHelp;\n\t\t\t} else {\n\t\t\t\treturn list;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$range = F2(\n\tfunction (lo, hi) {\n\t\treturn A3(elm$core$List$rangeHelp, lo, hi, _List_Nil);\n\t});\nvar elm$core$List$indexedMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$map2,\n\t\t\tf,\n\t\t\tA2(\n\t\t\t\telm$core$List$range,\n\t\t\t\t0,\n\t\t\t\telm$core$List$length(xs) - 1),\n\t\t\txs);\n\t});\nvar elm$core$String$all = _String_all;\nvar elm$core$String$join = F2(\n\tfunction (sep, chunks) {\n\t\treturn A2(\n\t\t\t_String_join,\n\t\t\tsep,\n\t\t\t_List_toArray(chunks));\n\t});\nvar elm$core$String$uncons = _String_uncons;\nvar elm$core$String$split = F2(\n\tfunction (sep, string) {\n\t\treturn _List_fromArray(\n\t\t\tA2(_String_split, sep, string));\n\t});\nvar elm$json$Json$Decode$indent = function (str) {\n\treturn A2(\n\t\telm$core$String$join,\n\t\t'\\n    ',\n\t\tA2(elm$core$String$split, '\\n', str));\n};\nvar elm$json$Json$Encode$encode = _Json_encode;\nvar elm$json$Json$Decode$errorOneOf = F2(\n\tfunction (i, error) {\n\t\treturn '\\n\\n(' + (elm$core$String$fromInt(i + 1) + (') ' + elm$json$Json$Decode$indent(\n\t\t\telm$json$Json$Decode$errorToString(error))));\n\t});\nvar elm$json$Json$Decode$errorToString = function (error) {\n\treturn A2(elm$json$Json$Decode$errorToStringHelp, error, _List_Nil);\n};\nvar elm$json$Json$Decode$errorToStringHelp = F2(\n\tfunction (error, context) {\n\t\terrorToStringHelp:\n\t\twhile (true) {\n\t\t\tswitch (error.$) {\n\t\t\t\tcase 0:\n\t\t\t\t\tvar f = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar isSimple = function () {\n\t\t\t\t\t\tvar _n1 = elm$core$String$uncons(f);\n\t\t\t\t\t\tif (_n1.$ === 1) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _n2 = _n1.a;\n\t\t\t\t\t\t\tvar _char = _n2.a;\n\t\t\t\t\t\t\tvar rest = _n2.b;\n\t\t\t\t\t\t\treturn elm$core$Char$isAlpha(_char) && A2(elm$core$String$all, elm$core$Char$isAlphaNum, rest);\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\tvar fieldName = isSimple ? ('.' + f) : ('[\\'' + (f + '\\']'));\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2(elm$core$List$cons, fieldName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 1:\n\t\t\t\t\tvar i = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar indexName = '[' + (elm$core$String$fromInt(i) + ']');\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2(elm$core$List$cons, indexName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 2:\n\t\t\t\t\tvar errors = error.a;\n\t\t\t\t\tif (!errors.b) {\n\t\t\t\t\t\treturn 'Ran into a Json.Decode.oneOf with no possibilities' + function () {\n\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\treturn '!';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn ' at json' + A2(\n\t\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\telm$core$List$reverse(context));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!errors.b.b) {\n\t\t\t\t\t\t\tvar err = errors.a;\n\t\t\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t\t\t$temp$context = context;\n\t\t\t\t\t\t\terror = $temp$error;\n\t\t\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar starter = function () {\n\t\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\t\treturn 'Json.Decode.oneOf';\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn 'The Json.Decode.oneOf at json' + A2(\n\t\t\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\t\telm$core$List$reverse(context));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}();\n\t\t\t\t\t\t\tvar introduction = starter + (' failed in the following ' + (elm$core$String$fromInt(\n\t\t\t\t\t\t\t\telm$core$List$length(errors)) + ' ways:'));\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t'\\n\\n',\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\tintroduction,\n\t\t\t\t\t\t\t\t\tA2(elm$core$List$indexedMap, elm$json$Json$Decode$errorOneOf, errors)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tvar msg = error.a;\n\t\t\t\t\tvar json = error.b;\n\t\t\t\t\tvar introduction = function () {\n\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\treturn 'Problem with the given value:\\n\\n';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn 'Problem with the value at json' + (A2(\n\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\telm$core$List$reverse(context)) + ':\\n\\n    ');\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\treturn introduction + (elm$json$Json$Decode$indent(\n\t\t\t\t\t\tA2(elm$json$Json$Encode$encode, 4, json)) + ('\\n\\n' + msg));\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Platform$Cmd$batch = _Platform_batch;\nvar elm$core$Platform$Cmd$none = elm$core$Platform$Cmd$batch(_List_Nil);\nvar author$project$Main$init = function (_n0) {\n\tvar glider = author$project$MatrixUtils$fieldMatrix('glider');\n\treturn _Utils_Tuple2(\n\t\t{\n\t\t\tv: author$project$MatrixUtils$getAliveCells(glider),\n\t\t\tm: author$project$MatrixUtils$fieldMatrix('glider'),\n\t\t\to: false,\n\t\t\tL: 'glider'\n\t\t},\n\t\telm$core$Platform$Cmd$none);\n};\nvar author$project$Main$tickRate = 100;\nvar author$project$Msgs$Tick = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$core$Platform$Sub$batch = _Platform_batch;\nvar elm$core$Platform$Sub$none = elm$core$Platform$Sub$batch(_List_Nil);\nvar elm$time$Time$Every = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$core$Task$succeed = _Scheduler_succeed;\nvar elm$time$Time$State = F2(\n\tfunction (taggers, processes) {\n\t\treturn {aq: processes, ay: taggers};\n\t});\nvar elm$time$Time$init = elm$core$Task$succeed(\n\tA2(elm$time$Time$State, elm$core$Dict$empty, elm$core$Dict$empty));\nvar elm$core$Dict$foldl = F3(\n\tfunction (func, acc, dict) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (dict.$ === -2) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = dict.b;\n\t\t\t\tvar value = dict.c;\n\t\t\t\tvar left = dict.d;\n\t\t\t\tvar right = dict.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3(elm$core$Dict$foldl, func, acc, left)),\n\t\t\t\t\t$temp$dict = right;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tdict = $temp$dict;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$merge = F6(\n\tfunction (leftStep, bothStep, rightStep, leftDict, rightDict, initialResult) {\n\t\tvar stepState = F3(\n\t\t\tfunction (rKey, rValue, _n0) {\n\t\t\t\tstepState:\n\t\t\t\twhile (true) {\n\t\t\t\t\tvar list = _n0.a;\n\t\t\t\t\tvar result = _n0.b;\n\t\t\t\t\tif (!list.b) {\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\tlist,\n\t\t\t\t\t\t\tA3(rightStep, rKey, rValue, result));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _n2 = list.a;\n\t\t\t\t\t\tvar lKey = _n2.a;\n\t\t\t\t\t\tvar lValue = _n2.b;\n\t\t\t\t\t\tvar rest = list.b;\n\t\t\t\t\t\tif (_Utils_cmp(lKey, rKey) < 0) {\n\t\t\t\t\t\t\tvar $temp$rKey = rKey,\n\t\t\t\t\t\t\t\t$temp$rValue = rValue,\n\t\t\t\t\t\t\t\t$temp$_n0 = _Utils_Tuple2(\n\t\t\t\t\t\t\t\trest,\n\t\t\t\t\t\t\t\tA3(leftStep, lKey, lValue, result));\n\t\t\t\t\t\t\trKey = $temp$rKey;\n\t\t\t\t\t\t\trValue = $temp$rValue;\n\t\t\t\t\t\t\t_n0 = $temp$_n0;\n\t\t\t\t\t\t\tcontinue stepState;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (_Utils_cmp(lKey, rKey) > 0) {\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\tlist,\n\t\t\t\t\t\t\t\t\tA3(rightStep, rKey, rValue, result));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\trest,\n\t\t\t\t\t\t\t\t\tA4(bothStep, lKey, lValue, rValue, result));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\tvar _n3 = A3(\n\t\t\telm$core$Dict$foldl,\n\t\t\tstepState,\n\t\t\t_Utils_Tuple2(\n\t\t\t\telm$core$Dict$toList(leftDict),\n\t\t\t\tinitialResult),\n\t\t\trightDict);\n\t\tvar leftovers = _n3.a;\n\t\tvar intermediateResult = _n3.b;\n\t\treturn A3(\n\t\t\telm$core$List$foldl,\n\t\t\tF2(\n\t\t\t\tfunction (_n4, result) {\n\t\t\t\t\tvar k = _n4.a;\n\t\t\t\t\tvar v = _n4.b;\n\t\t\t\t\treturn A3(leftStep, k, v, result);\n\t\t\t\t}),\n\t\t\tintermediateResult,\n\t\t\tleftovers);\n\t});\nvar elm$core$Process$kill = _Scheduler_kill;\nvar elm$core$Task$andThen = _Scheduler_andThen;\nvar elm$time$Time$addMySub = F2(\n\tfunction (_n0, state) {\n\t\tvar interval = _n0.a;\n\t\tvar tagger = _n0.b;\n\t\tvar _n1 = A2(elm$core$Dict$get, interval, state);\n\t\tif (_n1.$ === 1) {\n\t\t\treturn A3(\n\t\t\t\telm$core$Dict$insert,\n\t\t\t\tinterval,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[tagger]),\n\t\t\t\tstate);\n\t\t} else {\n\t\t\tvar taggers = _n1.a;\n\t\t\treturn A3(\n\t\t\t\telm$core$Dict$insert,\n\t\t\t\tinterval,\n\t\t\t\tA2(elm$core$List$cons, tagger, taggers),\n\t\t\t\tstate);\n\t\t}\n\t});\nvar elm$core$Platform$sendToSelf = _Platform_sendToSelf;\nvar elm$core$Process$spawn = _Scheduler_spawn;\nvar elm$time$Time$Name = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$time$Time$Offset = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$time$Time$Zone = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$time$Time$customZone = elm$time$Time$Zone;\nvar elm$time$Time$setInterval = _Time_setInterval;\nvar elm$time$Time$spawnHelp = F3(\n\tfunction (router, intervals, processes) {\n\t\tif (!intervals.b) {\n\t\t\treturn elm$core$Task$succeed(processes);\n\t\t} else {\n\t\t\tvar interval = intervals.a;\n\t\t\tvar rest = intervals.b;\n\t\t\tvar spawnTimer = elm$core$Process$spawn(\n\t\t\t\tA2(\n\t\t\t\t\telm$time$Time$setInterval,\n\t\t\t\t\tinterval,\n\t\t\t\t\tA2(elm$core$Platform$sendToSelf, router, interval)));\n\t\t\tvar spawnRest = function (id) {\n\t\t\t\treturn A3(\n\t\t\t\t\telm$time$Time$spawnHelp,\n\t\t\t\t\trouter,\n\t\t\t\t\trest,\n\t\t\t\t\tA3(elm$core$Dict$insert, interval, id, processes));\n\t\t\t};\n\t\t\treturn A2(elm$core$Task$andThen, spawnRest, spawnTimer);\n\t\t}\n\t});\nvar elm$time$Time$onEffects = F3(\n\tfunction (router, subs, _n0) {\n\t\tvar processes = _n0.aq;\n\t\tvar rightStep = F3(\n\t\t\tfunction (_n6, id, _n7) {\n\t\t\t\tvar spawns = _n7.a;\n\t\t\t\tvar existing = _n7.b;\n\t\t\t\tvar kills = _n7.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tspawns,\n\t\t\t\t\texisting,\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$Task$andThen,\n\t\t\t\t\t\tfunction (_n5) {\n\t\t\t\t\t\t\treturn kills;\n\t\t\t\t\t\t},\n\t\t\t\t\t\telm$core$Process$kill(id)));\n\t\t\t});\n\t\tvar newTaggers = A3(elm$core$List$foldl, elm$time$Time$addMySub, elm$core$Dict$empty, subs);\n\t\tvar leftStep = F3(\n\t\t\tfunction (interval, taggers, _n4) {\n\t\t\t\tvar spawns = _n4.a;\n\t\t\t\tvar existing = _n4.b;\n\t\t\t\tvar kills = _n4.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tA2(elm$core$List$cons, interval, spawns),\n\t\t\t\t\texisting,\n\t\t\t\t\tkills);\n\t\t\t});\n\t\tvar bothStep = F4(\n\t\t\tfunction (interval, taggers, id, _n3) {\n\t\t\t\tvar spawns = _n3.a;\n\t\t\t\tvar existing = _n3.b;\n\t\t\t\tvar kills = _n3.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tspawns,\n\t\t\t\t\tA3(elm$core$Dict$insert, interval, id, existing),\n\t\t\t\t\tkills);\n\t\t\t});\n\t\tvar _n1 = A6(\n\t\t\telm$core$Dict$merge,\n\t\t\tleftStep,\n\t\t\tbothStep,\n\t\t\trightStep,\n\t\t\tnewTaggers,\n\t\t\tprocesses,\n\t\t\t_Utils_Tuple3(\n\t\t\t\t_List_Nil,\n\t\t\t\telm$core$Dict$empty,\n\t\t\t\telm$core$Task$succeed(0)));\n\t\tvar spawnList = _n1.a;\n\t\tvar existingDict = _n1.b;\n\t\tvar killTask = _n1.c;\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (newProcesses) {\n\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\tA2(elm$time$Time$State, newTaggers, newProcesses));\n\t\t\t},\n\t\t\tA2(\n\t\t\t\telm$core$Task$andThen,\n\t\t\t\tfunction (_n2) {\n\t\t\t\t\treturn A3(elm$time$Time$spawnHelp, router, spawnList, existingDict);\n\t\t\t\t},\n\t\t\t\tkillTask));\n\t});\nvar elm$core$List$map = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, acc) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\tf(x),\n\t\t\t\t\t\tacc);\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar elm$core$Platform$sendToApp = _Platform_sendToApp;\nvar elm$core$Task$map2 = F3(\n\tfunction (func, taskA, taskB) {\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Task$andThen,\n\t\t\t\t\tfunction (b) {\n\t\t\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\t\t\tA2(func, a, b));\n\t\t\t\t\t},\n\t\t\t\t\ttaskB);\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar elm$core$Task$sequence = function (tasks) {\n\treturn A3(\n\t\telm$core$List$foldr,\n\t\telm$core$Task$map2(elm$core$List$cons),\n\t\telm$core$Task$succeed(_List_Nil),\n\t\ttasks);\n};\nvar elm$core$Basics$identity = function (x) {\n\treturn x;\n};\nvar elm$time$Time$Posix = elm$core$Basics$identity;\nvar elm$time$Time$millisToPosix = elm$core$Basics$identity;\nvar elm$time$Time$now = _Time_now(elm$time$Time$millisToPosix);\nvar elm$time$Time$onSelfMsg = F3(\n\tfunction (router, interval, state) {\n\t\tvar _n0 = A2(elm$core$Dict$get, interval, state.ay);\n\t\tif (_n0.$ === 1) {\n\t\t\treturn elm$core$Task$succeed(state);\n\t\t} else {\n\t\t\tvar taggers = _n0.a;\n\t\t\tvar tellTaggers = function (time) {\n\t\t\t\treturn elm$core$Task$sequence(\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$List$map,\n\t\t\t\t\t\tfunction (tagger) {\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\telm$core$Platform$sendToApp,\n\t\t\t\t\t\t\t\trouter,\n\t\t\t\t\t\t\t\ttagger(time));\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttaggers));\n\t\t\t};\n\t\t\treturn A2(\n\t\t\t\telm$core$Task$andThen,\n\t\t\t\tfunction (_n1) {\n\t\t\t\t\treturn elm$core$Task$succeed(state);\n\t\t\t\t},\n\t\t\t\tA2(elm$core$Task$andThen, tellTaggers, elm$time$Time$now));\n\t\t}\n\t});\nvar elm$core$Basics$composeL = F3(\n\tfunction (g, f, x) {\n\t\treturn g(\n\t\t\tf(x));\n\t});\nvar elm$time$Time$subMap = F2(\n\tfunction (f, _n0) {\n\t\tvar interval = _n0.a;\n\t\tvar tagger = _n0.b;\n\t\treturn A2(\n\t\t\telm$time$Time$Every,\n\t\t\tinterval,\n\t\t\tA2(elm$core$Basics$composeL, f, tagger));\n\t});\n_Platform_effectManagers['Time'] = _Platform_createManager(elm$time$Time$init, elm$time$Time$onEffects, elm$time$Time$onSelfMsg, 0, elm$time$Time$subMap);\nvar elm$time$Time$subscription = _Platform_leaf('Time');\nvar elm$time$Time$every = F2(\n\tfunction (interval, tagger) {\n\t\treturn elm$time$Time$subscription(\n\t\t\tA2(elm$time$Time$Every, interval, tagger));\n\t});\nvar author$project$Main$subscriptions = function (_n0) {\n\tvar isTicking = _n0.o;\n\tif (isTicking) {\n\t\treturn A2(elm$time$Time$every, author$project$Main$tickRate, author$project$Msgs$Tick);\n\t} else {\n\t\treturn elm$core$Platform$Sub$none;\n\t}\n};\nvar elm$core$Elm$JsArray$map = _JsArray_map;\nvar elm$core$Array$map = F2(\n\tfunction (func, _n0) {\n\t\tvar len = _n0.a;\n\t\tvar startShift = _n0.b;\n\t\tvar tree = _n0.c;\n\t\tvar tail = _n0.d;\n\t\tvar helper = function (node) {\n\t\t\tif (!node.$) {\n\t\t\t\tvar subTree = node.a;\n\t\t\t\treturn elm$core$Array$SubTree(\n\t\t\t\t\tA2(elm$core$Elm$JsArray$map, helper, subTree));\n\t\t\t} else {\n\t\t\t\tvar values = node.a;\n\t\t\t\treturn elm$core$Array$Leaf(\n\t\t\t\t\tA2(elm$core$Elm$JsArray$map, func, values));\n\t\t\t}\n\t\t};\n\t\treturn A4(\n\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\tlen,\n\t\t\tstartShift,\n\t\t\tA2(elm$core$Elm$JsArray$map, helper, tree),\n\t\t\tA2(elm$core$Elm$JsArray$map, func, tail));\n\t});\nvar Kraxorax$elm_matrix_a$Matrix$map = F2(\n\tfunction (f, _n0) {\n\t\tvar w = _n0.a;\n\t\tvar m = _n0.b;\n\t\treturn A2(\n\t\t\tKraxorax$elm_matrix_a$Matrix$Matrix,\n\t\t\tw,\n\t\t\tA2(\n\t\t\t\telm$core$Array$map,\n\t\t\t\tfunction (row) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\telm$core$Array$map,\n\t\t\t\t\t\tfunction (ele) {\n\t\t\t\t\t\t\treturn f(ele);\n\t\t\t\t\t\t},\n\t\t\t\t\t\trow);\n\t\t\t\t},\n\t\t\t\tm));\n\t});\nvar elm$core$Array$getHelp = F3(\n\tfunction (shift, index, tree) {\n\t\tgetHelp:\n\t\twhile (true) {\n\t\t\tvar pos = elm$core$Array$bitMask & (index >>> shift);\n\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$unsafeGet, pos, tree);\n\t\t\tif (!_n0.$) {\n\t\t\t\tvar subTree = _n0.a;\n\t\t\t\tvar $temp$shift = shift - elm$core$Array$shiftStep,\n\t\t\t\t\t$temp$index = index,\n\t\t\t\t\t$temp$tree = subTree;\n\t\t\t\tshift = $temp$shift;\n\t\t\t\tindex = $temp$index;\n\t\t\t\ttree = $temp$tree;\n\t\t\t\tcontinue getHelp;\n\t\t\t} else {\n\t\t\t\tvar values = _n0.a;\n\t\t\t\treturn A2(elm$core$Elm$JsArray$unsafeGet, elm$core$Array$bitMask & index, values);\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$tailIndex = function (len) {\n\treturn (len >>> 5) << 5;\n};\nvar elm$core$Array$get = F2(\n\tfunction (index, _n0) {\n\t\tvar len = _n0.a;\n\t\tvar startShift = _n0.b;\n\t\tvar tree = _n0.c;\n\t\tvar tail = _n0.d;\n\t\treturn ((index < 0) || (_Utils_cmp(index, len) > -1)) ? elm$core$Maybe$Nothing : ((_Utils_cmp(\n\t\t\tindex,\n\t\t\telm$core$Array$tailIndex(len)) > -1) ? elm$core$Maybe$Just(\n\t\t\tA2(elm$core$Elm$JsArray$unsafeGet, elm$core$Array$bitMask & index, tail)) : elm$core$Maybe$Just(\n\t\t\tA3(elm$core$Array$getHelp, startShift, index, tree)));\n\t});\nvar elm$core$Array$setHelp = F4(\n\tfunction (shift, index, value, tree) {\n\t\tvar pos = elm$core$Array$bitMask & (index >>> shift);\n\t\tvar _n0 = A2(elm$core$Elm$JsArray$unsafeGet, pos, tree);\n\t\tif (!_n0.$) {\n\t\t\tvar subTree = _n0.a;\n\t\t\tvar newSub = A4(elm$core$Array$setHelp, shift - elm$core$Array$shiftStep, index, value, subTree);\n\t\t\treturn A3(\n\t\t\t\telm$core$Elm$JsArray$unsafeSet,\n\t\t\t\tpos,\n\t\t\t\telm$core$Array$SubTree(newSub),\n\t\t\t\ttree);\n\t\t} else {\n\t\t\tvar values = _n0.a;\n\t\t\tvar newLeaf = A3(elm$core$Elm$JsArray$unsafeSet, elm$core$Array$bitMask & index, value, values);\n\t\t\treturn A3(\n\t\t\t\telm$core$Elm$JsArray$unsafeSet,\n\t\t\t\tpos,\n\t\t\t\telm$core$Array$Leaf(newLeaf),\n\t\t\t\ttree);\n\t\t}\n\t});\nvar elm$core$Array$set = F3(\n\tfunction (index, value, array) {\n\t\tvar len = array.a;\n\t\tvar startShift = array.b;\n\t\tvar tree = array.c;\n\t\tvar tail = array.d;\n\t\treturn ((index < 0) || (_Utils_cmp(index, len) > -1)) ? array : ((_Utils_cmp(\n\t\t\tindex,\n\t\t\telm$core$Array$tailIndex(len)) > -1) ? A4(\n\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\tlen,\n\t\t\tstartShift,\n\t\t\ttree,\n\t\t\tA3(elm$core$Elm$JsArray$unsafeSet, elm$core$Array$bitMask & index, value, tail)) : A4(\n\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\tlen,\n\t\t\tstartShift,\n\t\t\tA4(elm$core$Array$setHelp, startShift, index, value, tree),\n\t\t\ttail));\n\t});\nvar Kraxorax$elm_matrix_a$Matrix$set = F4(\n\tfunction (x, y, a, _n0) {\n\t\tvar w = _n0.a;\n\t\tvar m = _n0.b;\n\t\treturn A2(\n\t\t\tKraxorax$elm_matrix_a$Matrix$Matrix,\n\t\t\tw,\n\t\t\tfunction () {\n\t\t\t\tvar _n1 = A2(elm$core$Array$get, y, m);\n\t\t\t\tif (!_n1.$) {\n\t\t\t\t\tvar row = _n1.a;\n\t\t\t\t\treturn A3(\n\t\t\t\t\t\telm$core$Array$set,\n\t\t\t\t\t\ty,\n\t\t\t\t\t\tA3(elm$core$Array$set, x, a, row),\n\t\t\t\t\t\tm);\n\t\t\t\t} else {\n\t\t\t\t\treturn m;\n\t\t\t\t}\n\t\t\t}());\n\t});\nvar Kraxorax$elm_matrix_a$Neighbours$Torus = 1;\nvar Kraxorax$elm_matrix_a$Matrix$getRow = F2(\n\tfunction (y, _n0) {\n\t\tvar m = _n0.b;\n\t\tvar _n1 = A2(elm$core$Array$get, y, m);\n\t\tif (!_n1.$) {\n\t\t\tvar x = _n1.a;\n\t\t\treturn elm$core$Result$Ok(x);\n\t\t} else {\n\t\t\treturn elm$core$Result$Err('Matrix: Row index out of bounds');\n\t\t}\n\t});\nvar Kraxorax$elm_matrix_a$Neighbours$flatten = A2(elm$core$Array$foldr, elm$core$Array$append, elm$core$Array$empty);\nvar elm$core$Array$length = function (_n0) {\n\tvar len = _n0.a;\n\treturn len;\n};\nvar Kraxorax$elm_matrix_a$Matrix$height = function (_n0) {\n\tvar m = _n0.b;\n\treturn elm$core$Array$length(m);\n};\nvar elm$core$Result$withDefault = F2(\n\tfunction (def, result) {\n\t\tif (!result.$) {\n\t\t\tvar a = result.a;\n\t\t\treturn a;\n\t\t} else {\n\t\t\treturn def;\n\t\t}\n\t});\nvar Kraxorax$elm_matrix_a$Neighbours$orEmpty = elm$core$Result$withDefault(elm$core$Array$empty);\nvar elm$core$Array$repeat = F2(\n\tfunction (n, e) {\n\t\treturn A2(\n\t\t\telm$core$Array$initialize,\n\t\t\tn,\n\t\t\tfunction (_n0) {\n\t\t\t\treturn e;\n\t\t\t});\n\t});\nvar Kraxorax$elm_matrix_a$Neighbours$getBoundSideRows = F2(\n\tfunction (y, m) {\n\t\treturn (!y) ? A2(\n\t\t\telm$core$Array$repeat,\n\t\t\t1,\n\t\t\tKraxorax$elm_matrix_a$Neighbours$orEmpty(\n\t\t\t\tA2(Kraxorax$elm_matrix_a$Matrix$getRow, 1, m))) : (_Utils_eq(\n\t\t\ty,\n\t\t\tKraxorax$elm_matrix_a$Matrix$height(m) - 1) ? A2(\n\t\t\telm$core$Array$repeat,\n\t\t\t1,\n\t\t\tKraxorax$elm_matrix_a$Neighbours$orEmpty(\n\t\t\t\tA2(Kraxorax$elm_matrix_a$Matrix$getRow, y - 1, m))) : A2(\n\t\t\telm$core$Array$map,\n\t\t\tKraxorax$elm_matrix_a$Neighbours$orEmpty,\n\t\t\telm$core$Array$fromList(\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\tA2(Kraxorax$elm_matrix_a$Matrix$getRow, y - 1, m),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(Kraxorax$elm_matrix_a$Matrix$getRow, y + 1, m)\n\t\t\t\t\t\t])))));\n\t});\nvar Kraxorax$elm_matrix_a$Neighbours$modulo = F2(\n\tfunction (a, m) {\n\t\treturn (a < 0) ? (m + a) : ((_Utils_cmp(a, m) > -1) ? (m - a) : a);\n\t});\nvar elm$core$List$drop = F2(\n\tfunction (n, list) {\n\t\tdrop:\n\t\twhile (true) {\n\t\t\tif (n <= 0) {\n\t\t\t\treturn list;\n\t\t\t} else {\n\t\t\t\tif (!list.b) {\n\t\t\t\t\treturn list;\n\t\t\t\t} else {\n\t\t\t\t\tvar x = list.a;\n\t\t\t\t\tvar xs = list.b;\n\t\t\t\t\tvar $temp$n = n - 1,\n\t\t\t\t\t\t$temp$list = xs;\n\t\t\t\t\tn = $temp$n;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tcontinue drop;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$sliceLeft = F2(\n\tfunction (from, array) {\n\t\tvar len = array.a;\n\t\tvar tree = array.c;\n\t\tvar tail = array.d;\n\t\tif (!from) {\n\t\t\treturn array;\n\t\t} else {\n\t\t\tif (_Utils_cmp(\n\t\t\t\tfrom,\n\t\t\t\telm$core$Array$tailIndex(len)) > -1) {\n\t\t\t\treturn A4(\n\t\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\t\tlen - from,\n\t\t\t\t\telm$core$Array$shiftStep,\n\t\t\t\t\telm$core$Elm$JsArray$empty,\n\t\t\t\t\tA3(\n\t\t\t\t\t\telm$core$Elm$JsArray$slice,\n\t\t\t\t\t\tfrom - elm$core$Array$tailIndex(len),\n\t\t\t\t\t\telm$core$Elm$JsArray$length(tail),\n\t\t\t\t\t\ttail));\n\t\t\t} else {\n\t\t\t\tvar skipNodes = (from / elm$core$Array$branchFactor) | 0;\n\t\t\t\tvar helper = F2(\n\t\t\t\t\tfunction (node, acc) {\n\t\t\t\t\t\tif (!node.$) {\n\t\t\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldr, helper, acc, subTree);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar leaf = node.a;\n\t\t\t\t\t\t\treturn A2(elm$core$List$cons, leaf, acc);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\tvar leafNodes = A3(\n\t\t\t\t\telm$core$Elm$JsArray$foldr,\n\t\t\t\t\thelper,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[tail]),\n\t\t\t\t\ttree);\n\t\t\t\tvar nodesToInsert = A2(elm$core$List$drop, skipNodes, leafNodes);\n\t\t\t\tif (!nodesToInsert.b) {\n\t\t\t\t\treturn elm$core$Array$empty;\n\t\t\t\t} else {\n\t\t\t\t\tvar head = nodesToInsert.a;\n\t\t\t\t\tvar rest = nodesToInsert.b;\n\t\t\t\t\tvar firstSlice = from - (skipNodes * elm$core$Array$branchFactor);\n\t\t\t\t\tvar initialBuilder = {\n\t\t\t\t\t\td: _List_Nil,\n\t\t\t\t\t\ta: 0,\n\t\t\t\t\t\tc: A3(\n\t\t\t\t\t\t\telm$core$Elm$JsArray$slice,\n\t\t\t\t\t\t\tfirstSlice,\n\t\t\t\t\t\t\telm$core$Elm$JsArray$length(head),\n\t\t\t\t\t\t\thead)\n\t\t\t\t\t};\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\telm$core$Array$builderToArray,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\tA3(elm$core$List$foldl, elm$core$Array$appendHelpBuilder, initialBuilder, rest));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$fetchNewTail = F4(\n\tfunction (shift, end, treeEnd, tree) {\n\t\tfetchNewTail:\n\t\twhile (true) {\n\t\t\tvar pos = elm$core$Array$bitMask & (treeEnd >>> shift);\n\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$unsafeGet, pos, tree);\n\t\t\tif (!_n0.$) {\n\t\t\t\tvar sub = _n0.a;\n\t\t\t\tvar $temp$shift = shift - elm$core$Array$shiftStep,\n\t\t\t\t\t$temp$end = end,\n\t\t\t\t\t$temp$treeEnd = treeEnd,\n\t\t\t\t\t$temp$tree = sub;\n\t\t\t\tshift = $temp$shift;\n\t\t\t\tend = $temp$end;\n\t\t\t\ttreeEnd = $temp$treeEnd;\n\t\t\t\ttree = $temp$tree;\n\t\t\t\tcontinue fetchNewTail;\n\t\t\t} else {\n\t\t\t\tvar values = _n0.a;\n\t\t\t\treturn A3(elm$core$Elm$JsArray$slice, 0, elm$core$Array$bitMask & end, values);\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$hoistTree = F3(\n\tfunction (oldShift, newShift, tree) {\n\t\thoistTree:\n\t\twhile (true) {\n\t\t\tif ((_Utils_cmp(oldShift, newShift) < 1) || (!elm$core$Elm$JsArray$length(tree))) {\n\t\t\t\treturn tree;\n\t\t\t} else {\n\t\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$unsafeGet, 0, tree);\n\t\t\t\tif (!_n0.$) {\n\t\t\t\t\tvar sub = _n0.a;\n\t\t\t\t\tvar $temp$oldShift = oldShift - elm$core$Array$shiftStep,\n\t\t\t\t\t\t$temp$newShift = newShift,\n\t\t\t\t\t\t$temp$tree = sub;\n\t\t\t\t\toldShift = $temp$oldShift;\n\t\t\t\t\tnewShift = $temp$newShift;\n\t\t\t\t\ttree = $temp$tree;\n\t\t\t\t\tcontinue hoistTree;\n\t\t\t\t} else {\n\t\t\t\t\treturn tree;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$sliceTree = F3(\n\tfunction (shift, endIdx, tree) {\n\t\tvar lastPos = elm$core$Array$bitMask & (endIdx >>> shift);\n\t\tvar _n0 = A2(elm$core$Elm$JsArray$unsafeGet, lastPos, tree);\n\t\tif (!_n0.$) {\n\t\t\tvar sub = _n0.a;\n\t\t\tvar newSub = A3(elm$core$Array$sliceTree, shift - elm$core$Array$shiftStep, endIdx, sub);\n\t\t\treturn (!elm$core$Elm$JsArray$length(newSub)) ? A3(elm$core$Elm$JsArray$slice, 0, lastPos, tree) : A3(\n\t\t\t\telm$core$Elm$JsArray$unsafeSet,\n\t\t\t\tlastPos,\n\t\t\t\telm$core$Array$SubTree(newSub),\n\t\t\t\tA3(elm$core$Elm$JsArray$slice, 0, lastPos + 1, tree));\n\t\t} else {\n\t\t\treturn A3(elm$core$Elm$JsArray$slice, 0, lastPos, tree);\n\t\t}\n\t});\nvar elm$core$Array$sliceRight = F2(\n\tfunction (end, array) {\n\t\tvar len = array.a;\n\t\tvar startShift = array.b;\n\t\tvar tree = array.c;\n\t\tvar tail = array.d;\n\t\tif (_Utils_eq(end, len)) {\n\t\t\treturn array;\n\t\t} else {\n\t\t\tif (_Utils_cmp(\n\t\t\t\tend,\n\t\t\t\telm$core$Array$tailIndex(len)) > -1) {\n\t\t\t\treturn A4(\n\t\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\t\tend,\n\t\t\t\t\tstartShift,\n\t\t\t\t\ttree,\n\t\t\t\t\tA3(elm$core$Elm$JsArray$slice, 0, elm$core$Array$bitMask & end, tail));\n\t\t\t} else {\n\t\t\t\tvar endIdx = elm$core$Array$tailIndex(end);\n\t\t\t\tvar depth = elm$core$Basics$floor(\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$Basics$logBase,\n\t\t\t\t\t\telm$core$Array$branchFactor,\n\t\t\t\t\t\tA2(elm$core$Basics$max, 1, endIdx - 1)));\n\t\t\t\tvar newShift = A2(elm$core$Basics$max, 5, depth * elm$core$Array$shiftStep);\n\t\t\t\treturn A4(\n\t\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\t\tend,\n\t\t\t\t\tnewShift,\n\t\t\t\t\tA3(\n\t\t\t\t\t\telm$core$Array$hoistTree,\n\t\t\t\t\t\tstartShift,\n\t\t\t\t\t\tnewShift,\n\t\t\t\t\t\tA3(elm$core$Array$sliceTree, startShift, endIdx, tree)),\n\t\t\t\t\tA4(elm$core$Array$fetchNewTail, startShift, end, endIdx, tree));\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$translateIndex = F2(\n\tfunction (index, _n0) {\n\t\tvar len = _n0.a;\n\t\tvar posIndex = (index < 0) ? (len + index) : index;\n\t\treturn (posIndex < 0) ? 0 : ((_Utils_cmp(posIndex, len) > 0) ? len : posIndex);\n\t});\nvar elm$core$Array$slice = F3(\n\tfunction (from, to, array) {\n\t\tvar correctTo = A2(elm$core$Array$translateIndex, to, array);\n\t\tvar correctFrom = A2(elm$core$Array$translateIndex, from, array);\n\t\treturn (_Utils_cmp(correctFrom, correctTo) > 0) ? elm$core$Array$empty : A2(\n\t\t\telm$core$Array$sliceLeft,\n\t\t\tcorrectFrom,\n\t\t\tA2(elm$core$Array$sliceRight, correctTo, array));\n\t});\nvar Kraxorax$elm_matrix_a$Neighbours$unboundHorizontalCenter = F2(\n\tfunction (x, row) {\n\t\tvar mw = elm$core$Array$length(row);\n\t\tvar start = A2(Kraxorax$elm_matrix_a$Neighbours$modulo, x - 1, mw);\n\t\tvar end = A2(Kraxorax$elm_matrix_a$Neighbours$modulo, x + 1, mw);\n\t\treturn A2(\n\t\t\telm$core$Array$append,\n\t\t\tA3(elm$core$Array$slice, end, end + 1, row),\n\t\t\tA3(elm$core$Array$slice, start, start + 1, row));\n\t});\nvar Kraxorax$elm_matrix_a$Neighbours$unboundHorizontalSide = F2(\n\tfunction (x, row) {\n\t\tvar mw = elm$core$Array$length(row);\n\t\tvar start = A2(Kraxorax$elm_matrix_a$Neighbours$modulo, x - 1, mw);\n\t\tvar end = A2(Kraxorax$elm_matrix_a$Neighbours$modulo, x + 1, mw);\n\t\treturn (_Utils_cmp(end, start) < 0) ? A2(\n\t\t\telm$core$Array$append,\n\t\t\tA3(elm$core$Array$slice, start, start + 3, row),\n\t\t\tA3(elm$core$Array$slice, 0, end + 1, row)) : A3(elm$core$Array$slice, start, end + 1, row);\n\t});\nvar Kraxorax$elm_matrix_a$Neighbours$neighboursOnHorizontalStrip = F3(\n\tfunction (x, y, m) {\n\t\tvar rowSides = A2(Kraxorax$elm_matrix_a$Neighbours$getBoundSideRows, y, m);\n\t\tvar sideNbrs = Kraxorax$elm_matrix_a$Neighbours$flatten(\n\t\t\tA2(\n\t\t\t\telm$core$Array$map,\n\t\t\t\tKraxorax$elm_matrix_a$Neighbours$unboundHorizontalSide(x),\n\t\t\t\trowSides));\n\t\tvar rowCenter = Kraxorax$elm_matrix_a$Neighbours$orEmpty(\n\t\t\tA2(Kraxorax$elm_matrix_a$Matrix$getRow, y, m));\n\t\tvar centerNbrs = A2(Kraxorax$elm_matrix_a$Neighbours$unboundHorizontalCenter, x, rowCenter);\n\t\treturn A2(elm$core$Array$append, sideNbrs, centerNbrs);\n\t});\nvar Kraxorax$elm_matrix_a$Neighbours$boundHorizontalCenter = F2(\n\tfunction (x, row) {\n\t\tvar start = x - 1;\n\t\tvar end = x + 1;\n\t\treturn (start < 0) ? A3(elm$core$Array$slice, end, end + 1, row) : A2(\n\t\t\telm$core$Array$append,\n\t\t\tA3(elm$core$Array$slice, end, end + 1, row),\n\t\t\tA3(elm$core$Array$slice, start, start + 1, row));\n\t});\nvar Kraxorax$elm_matrix_a$Neighbours$boundHorizontalSide = F2(\n\tfunction (x, row) {\n\t\tvar start = x - 1;\n\t\tvar end = x + 1;\n\t\treturn A3(\n\t\t\telm$core$Array$slice,\n\t\t\tA2(elm$core$Basics$max, 0, start),\n\t\t\tend + 1,\n\t\t\trow);\n\t});\nvar Kraxorax$elm_matrix_a$Neighbours$neighboursOnPlane = F3(\n\tfunction (x, y, m) {\n\t\tvar rowSides = A2(Kraxorax$elm_matrix_a$Neighbours$getBoundSideRows, y, m);\n\t\tvar sideNbrs = Kraxorax$elm_matrix_a$Neighbours$flatten(\n\t\t\tA2(\n\t\t\t\telm$core$Array$map,\n\t\t\t\tfunction (row) {\n\t\t\t\t\treturn A2(Kraxorax$elm_matrix_a$Neighbours$boundHorizontalSide, x, row);\n\t\t\t\t},\n\t\t\t\trowSides));\n\t\tvar rowCenter = Kraxorax$elm_matrix_a$Neighbours$orEmpty(\n\t\t\tA2(Kraxorax$elm_matrix_a$Matrix$getRow, y, m));\n\t\tvar centerNbrs = A2(Kraxorax$elm_matrix_a$Neighbours$boundHorizontalCenter, x, rowCenter);\n\t\treturn A2(elm$core$Array$append, sideNbrs, centerNbrs);\n\t});\nvar Kraxorax$elm_matrix_a$Neighbours$getUnboundSideRows = F2(\n\tfunction (y, m) {\n\t\tvar mh = Kraxorax$elm_matrix_a$Matrix$height(m);\n\t\treturn elm$core$Array$fromList(\n\t\t\tA2(\n\t\t\t\telm$core$List$cons,\n\t\t\t\tKraxorax$elm_matrix_a$Neighbours$orEmpty(\n\t\t\t\t\tA2(\n\t\t\t\t\t\tKraxorax$elm_matrix_a$Matrix$getRow,\n\t\t\t\t\t\tA2(Kraxorax$elm_matrix_a$Neighbours$modulo, y - 1, mh),\n\t\t\t\t\t\tm)),\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$Result$withDefault,\n\t\t\t\t\t\telm$core$Array$empty,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\tKraxorax$elm_matrix_a$Matrix$getRow,\n\t\t\t\t\t\t\tA2(Kraxorax$elm_matrix_a$Neighbours$modulo, y + 1, mh),\n\t\t\t\t\t\t\tm)),\n\t\t\t\t\t_List_Nil)));\n\t});\nvar Kraxorax$elm_matrix_a$Neighbours$neighboursOnTorus = F3(\n\tfunction (x, y, m) {\n\t\tvar rowSides = A2(Kraxorax$elm_matrix_a$Neighbours$getUnboundSideRows, y, m);\n\t\tvar sideNbrs = Kraxorax$elm_matrix_a$Neighbours$flatten(\n\t\t\tA2(\n\t\t\t\telm$core$Array$map,\n\t\t\t\tfunction (row) {\n\t\t\t\t\treturn A2(Kraxorax$elm_matrix_a$Neighbours$unboundHorizontalSide, x, row);\n\t\t\t\t},\n\t\t\t\trowSides));\n\t\tvar rowCenter = Kraxorax$elm_matrix_a$Neighbours$orEmpty(\n\t\t\tA2(Kraxorax$elm_matrix_a$Matrix$getRow, y, m));\n\t\tvar centerNbrs = A2(Kraxorax$elm_matrix_a$Neighbours$unboundHorizontalCenter, x, rowCenter);\n\t\treturn A2(elm$core$Array$append, sideNbrs, centerNbrs);\n\t});\nvar Kraxorax$elm_matrix_a$Neighbours$neighboursOnVerticalStrip = F3(\n\tfunction (x, y, m) {\n\t\tvar rowSides = A2(Kraxorax$elm_matrix_a$Neighbours$getUnboundSideRows, y, m);\n\t\tvar sideNbrs = Kraxorax$elm_matrix_a$Neighbours$flatten(\n\t\t\tA2(\n\t\t\t\telm$core$Array$map,\n\t\t\t\tfunction (row) {\n\t\t\t\t\treturn A2(Kraxorax$elm_matrix_a$Neighbours$boundHorizontalSide, x, row);\n\t\t\t\t},\n\t\t\t\trowSides));\n\t\tvar rowCenter = Kraxorax$elm_matrix_a$Neighbours$orEmpty(\n\t\t\tA2(Kraxorax$elm_matrix_a$Matrix$getRow, y, m));\n\t\tvar centerNbrs = A2(Kraxorax$elm_matrix_a$Neighbours$boundHorizontalCenter, x, rowCenter);\n\t\treturn A2(elm$core$Array$append, sideNbrs, centerNbrs);\n\t});\nvar Kraxorax$elm_matrix_a$Neighbours$neighbours = function (mt) {\n\tswitch (mt) {\n\t\tcase 0:\n\t\t\treturn Kraxorax$elm_matrix_a$Neighbours$neighboursOnPlane;\n\t\tcase 1:\n\t\t\treturn Kraxorax$elm_matrix_a$Neighbours$neighboursOnTorus;\n\t\tcase 3:\n\t\t\treturn Kraxorax$elm_matrix_a$Neighbours$neighboursOnVerticalStrip;\n\t\tdefault:\n\t\t\treturn Kraxorax$elm_matrix_a$Neighbours$neighboursOnHorizontalStrip;\n\t}\n};\nvar author$project$MatrixUtils$cellNeighbours = F2(\n\tfunction (matrix, _n0) {\n\t\tvar posX = _n0.aU;\n\t\tvar posY = _n0.aV;\n\t\treturn elm$core$Array$toList(\n\t\t\tA4(Kraxorax$elm_matrix_a$Neighbours$neighbours, 1, posX, posY, matrix));\n\t});\nvar author$project$MatrixUtils$liveNeighboursCount = F2(\n\tfunction (matrix, cell) {\n\t\treturn elm$core$List$length(\n\t\t\tA2(\n\t\t\t\telm$core$List$filter,\n\t\t\t\tfunction ($) {\n\t\t\t\t\treturn $.aC;\n\t\t\t\t},\n\t\t\t\tA2(author$project$MatrixUtils$cellNeighbours, matrix, cell)));\n\t});\nvar author$project$MatrixUtils$isAlive = F2(\n\tfunction (matrix, cell) {\n\t\tvar count = A2(author$project$MatrixUtils$liveNeighboursCount, matrix, cell);\n\t\tvar _n0 = cell.aC;\n\t\tif (_n0) {\n\t\t\treturn ((count === 2) || (count === 3)) ? true : false;\n\t\t} else {\n\t\t\treturn count === 3;\n\t\t}\n\t});\nvar author$project$MatrixUtils$detectFate = F2(\n\tfunction (matrix, cell) {\n\t\treturn _Utils_update(\n\t\t\tcell,\n\t\t\t{\n\t\t\t\taC: A2(author$project$MatrixUtils$isAlive, matrix, cell)\n\t\t\t});\n\t});\nvar elm$core$List$append = F2(\n\tfunction (xs, ys) {\n\t\tif (!ys.b) {\n\t\t\treturn xs;\n\t\t} else {\n\t\t\treturn A3(elm$core$List$foldr, elm$core$List$cons, ys, xs);\n\t\t}\n\t});\nvar elm$core$List$concat = function (lists) {\n\treturn A3(elm$core$List$foldr, elm$core$List$append, _List_Nil, lists);\n};\nvar elm$core$Set$Set_elm_builtin = elm$core$Basics$identity;\nvar elm$core$Set$empty = elm$core$Dict$empty;\nvar elm$core$Set$insert = F2(\n\tfunction (key, _n0) {\n\t\tvar dict = _n0;\n\t\treturn A3(elm$core$Dict$insert, key, 0, dict);\n\t});\nvar elm$core$Dict$member = F2(\n\tfunction (key, dict) {\n\t\tvar _n0 = A2(elm$core$Dict$get, key, dict);\n\t\tif (!_n0.$) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t});\nvar elm$core$Set$member = F2(\n\tfunction (key, _n0) {\n\t\tvar dict = _n0;\n\t\treturn A2(elm$core$Dict$member, key, dict);\n\t});\nvar elm_community$list_extra$List$Extra$uniqueHelp = F4(\n\tfunction (f, existing, remaining, accumulator) {\n\t\tuniqueHelp:\n\t\twhile (true) {\n\t\t\tif (!remaining.b) {\n\t\t\t\treturn elm$core$List$reverse(accumulator);\n\t\t\t} else {\n\t\t\t\tvar first = remaining.a;\n\t\t\t\tvar rest = remaining.b;\n\t\t\t\tvar computedFirst = f(first);\n\t\t\t\tif (A2(elm$core$Set$member, computedFirst, existing)) {\n\t\t\t\t\tvar $temp$f = f,\n\t\t\t\t\t\t$temp$existing = existing,\n\t\t\t\t\t\t$temp$remaining = rest,\n\t\t\t\t\t\t$temp$accumulator = accumulator;\n\t\t\t\t\tf = $temp$f;\n\t\t\t\t\texisting = $temp$existing;\n\t\t\t\t\tremaining = $temp$remaining;\n\t\t\t\t\taccumulator = $temp$accumulator;\n\t\t\t\t\tcontinue uniqueHelp;\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$f = f,\n\t\t\t\t\t\t$temp$existing = A2(elm$core$Set$insert, computedFirst, existing),\n\t\t\t\t\t\t$temp$remaining = rest,\n\t\t\t\t\t\t$temp$accumulator = A2(elm$core$List$cons, first, accumulator);\n\t\t\t\t\tf = $temp$f;\n\t\t\t\t\texisting = $temp$existing;\n\t\t\t\t\tremaining = $temp$remaining;\n\t\t\t\t\taccumulator = $temp$accumulator;\n\t\t\t\t\tcontinue uniqueHelp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm_community$list_extra$List$Extra$uniqueBy = F2(\n\tfunction (f, list) {\n\t\treturn A4(elm_community$list_extra$List$Extra$uniqueHelp, f, elm$core$Set$empty, list, _List_Nil);\n\t});\nvar author$project$Main$buildNewGeneration = F2(\n\tfunction (generation, live) {\n\t\treturn A3(\n\t\t\telm$core$List$foldl,\n\t\t\tF2(\n\t\t\t\tfunction (cell, _n0) {\n\t\t\t\t\tvar resultGen = _n0.a;\n\t\t\t\t\tvar resultAlives = _n0.b;\n\t\t\t\t\tvar fate = A2(author$project$MatrixUtils$detectFate, generation, cell);\n\t\t\t\t\tvar newGeneration = A4(Kraxorax$elm_matrix_a$Matrix$set, cell.aU, cell.aV, fate, resultGen);\n\t\t\t\t\tvar newLiveList = fate.aC ? A2(elm$core$List$cons, fate, resultAlives) : resultAlives;\n\t\t\t\t\treturn _Utils_Tuple2(newGeneration, newLiveList);\n\t\t\t\t}),\n\t\t\t_Utils_Tuple2(generation, _List_Nil),\n\t\t\tA2(\n\t\t\t\telm_community$list_extra$List$Extra$uniqueBy,\n\t\t\t\tfunction ($) {\n\t\t\t\t\treturn $.aM;\n\t\t\t\t},\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$append,\n\t\t\t\t\tlive,\n\t\t\t\t\telm$core$List$concat(\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\telm$core$List$map,\n\t\t\t\t\t\t\tauthor$project$MatrixUtils$cellNeighbours(generation),\n\t\t\t\t\t\t\tlive)))));\n\t});\nvar author$project$Main$fetchLiveCells = function (_n0) {\n\tvar aliveCells = _n0.v;\n\tvar generation = _n0.m;\n\tif (!aliveCells.b) {\n\t\treturn author$project$MatrixUtils$getAliveCells(generation);\n\t} else {\n\t\treturn aliveCells;\n\t}\n};\nvar author$project$Main$toggle = F2(\n\tfunction (id, cell) {\n\t\treturn _Utils_eq(cell.aM, id) ? _Utils_update(\n\t\t\tcell,\n\t\t\t{aC: !cell.aC}) : cell;\n\t});\nvar elm$core$Elm$JsArray$indexedMap = _JsArray_indexedMap;\nvar elm$core$Array$indexedMap = F2(\n\tfunction (func, _n0) {\n\t\tvar len = _n0.a;\n\t\tvar tree = _n0.c;\n\t\tvar tail = _n0.d;\n\t\tvar initialBuilder = {\n\t\t\td: _List_Nil,\n\t\t\ta: 0,\n\t\t\tc: A3(\n\t\t\t\telm$core$Elm$JsArray$indexedMap,\n\t\t\t\tfunc,\n\t\t\t\telm$core$Array$tailIndex(len),\n\t\t\t\ttail)\n\t\t};\n\t\tvar helper = F2(\n\t\t\tfunction (node, builder) {\n\t\t\t\tif (!node.$) {\n\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldl, helper, builder, subTree);\n\t\t\t\t} else {\n\t\t\t\t\tvar leaf = node.a;\n\t\t\t\t\tvar offset = builder.a * elm$core$Array$branchFactor;\n\t\t\t\t\tvar mappedLeaf = elm$core$Array$Leaf(\n\t\t\t\t\t\tA3(elm$core$Elm$JsArray$indexedMap, func, offset, leaf));\n\t\t\t\t\treturn {\n\t\t\t\t\t\td: A2(elm$core$List$cons, mappedLeaf, builder.d),\n\t\t\t\t\t\ta: builder.a + 1,\n\t\t\t\t\t\tc: builder.c\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\treturn A2(\n\t\t\telm$core$Array$builderToArray,\n\t\t\ttrue,\n\t\t\tA3(elm$core$Elm$JsArray$foldl, helper, initialBuilder, tree));\n\t});\nvar Kraxorax$elm_matrix_a$Matrix$indexedMap = F2(\n\tfunction (f, _n0) {\n\t\tvar w = _n0.a;\n\t\tvar m = _n0.b;\n\t\treturn A2(\n\t\t\tKraxorax$elm_matrix_a$Matrix$Matrix,\n\t\t\tw,\n\t\t\tA2(\n\t\t\t\telm$core$Array$indexedMap,\n\t\t\t\tF2(\n\t\t\t\t\tfunction (y, row) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\telm$core$Array$indexedMap,\n\t\t\t\t\t\t\tF2(\n\t\t\t\t\t\t\t\tfunction (x, ele) {\n\t\t\t\t\t\t\t\t\treturn A3(f, x, y, ele);\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\trow);\n\t\t\t\t\t}),\n\t\t\t\tm));\n\t});\nvar author$project$MatrixUtils$randomFieldMatrix = function (seed) {\n\treturn A2(\n\t\tKraxorax$elm_matrix_a$Matrix$indexedMap,\n\t\tF3(\n\t\t\tfunction (x, y, cell) {\n\t\t\t\tvar seedIndex = x + (y * author$project$MatrixUtils$sideSize);\n\t\t\t\tvar alive = function () {\n\t\t\t\t\tvar _n0 = A2(elm$core$Array$get, seedIndex, seed);\n\t\t\t\t\tif (!_n0.$) {\n\t\t\t\t\t\tvar value = _n0.a;\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}();\n\t\t\t\treturn A4(\n\t\t\t\t\tauthor$project$Types$Cell,\n\t\t\t\t\tx,\n\t\t\t\t\ty,\n\t\t\t\t\tA2(author$project$MatrixUtils$cellId, x, y),\n\t\t\t\t\talive);\n\t\t\t}),\n\t\tA3(\n\t\t\tKraxorax$elm_matrix_a$Matrix$generate,\n\t\t\tauthor$project$MatrixUtils$sideSize,\n\t\t\tauthor$project$MatrixUtils$sideSize,\n\t\t\tF2(\n\t\t\t\tfunction (x, y) {\n\t\t\t\t\treturn A4(\n\t\t\t\t\t\tauthor$project$Types$Cell,\n\t\t\t\t\t\tx,\n\t\t\t\t\t\ty,\n\t\t\t\t\t\tA2(author$project$MatrixUtils$cellId, x, y),\n\t\t\t\t\t\tfalse);\n\t\t\t\t})));\n};\nvar author$project$Msgs$RandomField = function (a) {\n\treturn {$: 4, a: a};\n};\nvar elm$random$Random$Generate = elm$core$Basics$identity;\nvar elm$random$Random$Seed = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$random$Random$next = function (_n0) {\n\tvar state0 = _n0.a;\n\tvar incr = _n0.b;\n\treturn A2(elm$random$Random$Seed, ((state0 * 1664525) + incr) >>> 0, incr);\n};\nvar elm$random$Random$initialSeed = function (x) {\n\tvar _n0 = elm$random$Random$next(\n\t\tA2(elm$random$Random$Seed, 0, 1013904223));\n\tvar state1 = _n0.a;\n\tvar incr = _n0.b;\n\tvar state2 = (state1 + x) >>> 0;\n\treturn elm$random$Random$next(\n\t\tA2(elm$random$Random$Seed, state2, incr));\n};\nvar elm$time$Time$posixToMillis = function (_n0) {\n\tvar millis = _n0;\n\treturn millis;\n};\nvar elm$random$Random$init = A2(\n\telm$core$Task$andThen,\n\tfunction (time) {\n\t\treturn elm$core$Task$succeed(\n\t\t\telm$random$Random$initialSeed(\n\t\t\t\telm$time$Time$posixToMillis(time)));\n\t},\n\telm$time$Time$now);\nvar elm$random$Random$step = F2(\n\tfunction (_n0, seed) {\n\t\tvar generator = _n0;\n\t\treturn generator(seed);\n\t});\nvar elm$random$Random$onEffects = F3(\n\tfunction (router, commands, seed) {\n\t\tif (!commands.b) {\n\t\t\treturn elm$core$Task$succeed(seed);\n\t\t} else {\n\t\t\tvar generator = commands.a;\n\t\t\tvar rest = commands.b;\n\t\t\tvar _n1 = A2(elm$random$Random$step, generator, seed);\n\t\t\tvar value = _n1.a;\n\t\t\tvar newSeed = _n1.b;\n\t\t\treturn A2(\n\t\t\t\telm$core$Task$andThen,\n\t\t\t\tfunction (_n2) {\n\t\t\t\t\treturn A3(elm$random$Random$onEffects, router, rest, newSeed);\n\t\t\t\t},\n\t\t\t\tA2(elm$core$Platform$sendToApp, router, value));\n\t\t}\n\t});\nvar elm$random$Random$onSelfMsg = F3(\n\tfunction (_n0, _n1, seed) {\n\t\treturn elm$core$Task$succeed(seed);\n\t});\nvar elm$random$Random$Generator = elm$core$Basics$identity;\nvar elm$random$Random$map = F2(\n\tfunction (func, _n0) {\n\t\tvar genA = _n0;\n\t\treturn function (seed0) {\n\t\t\tvar _n1 = genA(seed0);\n\t\t\tvar a = _n1.a;\n\t\t\tvar seed1 = _n1.b;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\tfunc(a),\n\t\t\t\tseed1);\n\t\t};\n\t});\nvar elm$random$Random$cmdMap = F2(\n\tfunction (func, _n0) {\n\t\tvar generator = _n0;\n\t\treturn A2(elm$random$Random$map, func, generator);\n\t});\n_Platform_effectManagers['Random'] = _Platform_createManager(elm$random$Random$init, elm$random$Random$onEffects, elm$random$Random$onSelfMsg, elm$random$Random$cmdMap);\nvar elm$random$Random$command = _Platform_leaf('Random');\nvar elm$random$Random$generate = F2(\n\tfunction (tagger, generator) {\n\t\treturn elm$random$Random$command(\n\t\t\tA2(elm$random$Random$map, tagger, generator));\n\t});\nvar elm$random$Random$listHelp = F4(\n\tfunction (revList, n, gen, seed) {\n\t\tlistHelp:\n\t\twhile (true) {\n\t\t\tif (n < 1) {\n\t\t\t\treturn _Utils_Tuple2(revList, seed);\n\t\t\t} else {\n\t\t\t\tvar _n0 = gen(seed);\n\t\t\t\tvar value = _n0.a;\n\t\t\t\tvar newSeed = _n0.b;\n\t\t\t\tvar $temp$revList = A2(elm$core$List$cons, value, revList),\n\t\t\t\t\t$temp$n = n - 1,\n\t\t\t\t\t$temp$gen = gen,\n\t\t\t\t\t$temp$seed = newSeed;\n\t\t\t\trevList = $temp$revList;\n\t\t\t\tn = $temp$n;\n\t\t\t\tgen = $temp$gen;\n\t\t\t\tseed = $temp$seed;\n\t\t\t\tcontinue listHelp;\n\t\t\t}\n\t\t}\n\t});\nvar elm$random$Random$list = F2(\n\tfunction (n, _n0) {\n\t\tvar gen = _n0;\n\t\treturn function (seed) {\n\t\t\treturn A4(elm$random$Random$listHelp, _List_Nil, n, gen, seed);\n\t\t};\n\t});\nvar elm$core$Basics$negate = function (n) {\n\treturn -n;\n};\nvar elm$core$Basics$abs = function (n) {\n\treturn (n < 0) ? (-n) : n;\n};\nvar elm$core$List$sum = function (numbers) {\n\treturn A3(elm$core$List$foldl, elm$core$Basics$add, 0, numbers);\n};\nvar elm$core$Bitwise$xor = _Bitwise_xor;\nvar elm$random$Random$peel = function (_n0) {\n\tvar state = _n0.a;\n\tvar word = (state ^ (state >>> ((state >>> 28) + 4))) * 277803737;\n\treturn ((word >>> 22) ^ word) >>> 0;\n};\nvar elm$random$Random$float = F2(\n\tfunction (a, b) {\n\t\treturn function (seed0) {\n\t\t\tvar seed1 = elm$random$Random$next(seed0);\n\t\t\tvar range = elm$core$Basics$abs(b - a);\n\t\t\tvar n1 = elm$random$Random$peel(seed1);\n\t\t\tvar n0 = elm$random$Random$peel(seed0);\n\t\t\tvar lo = (134217727 & n1) * 1.0;\n\t\t\tvar hi = (67108863 & n0) * 1.0;\n\t\t\tvar val = ((hi * 1.34217728e8) + lo) / 9.007199254740992e15;\n\t\t\tvar scaled = (val * range) + a;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\tscaled,\n\t\t\t\telm$random$Random$next(seed1));\n\t\t};\n\t});\nvar elm$random$Random$getByWeight = F3(\n\tfunction (_n0, others, countdown) {\n\t\tgetByWeight:\n\t\twhile (true) {\n\t\t\tvar weight = _n0.a;\n\t\t\tvar value = _n0.b;\n\t\t\tif (!others.b) {\n\t\t\t\treturn value;\n\t\t\t} else {\n\t\t\t\tvar second = others.a;\n\t\t\t\tvar otherOthers = others.b;\n\t\t\t\tif (_Utils_cmp(\n\t\t\t\t\tcountdown,\n\t\t\t\t\telm$core$Basics$abs(weight)) < 1) {\n\t\t\t\t\treturn value;\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$_n0 = second,\n\t\t\t\t\t\t$temp$others = otherOthers,\n\t\t\t\t\t\t$temp$countdown = countdown - elm$core$Basics$abs(weight);\n\t\t\t\t\t_n0 = $temp$_n0;\n\t\t\t\t\tothers = $temp$others;\n\t\t\t\t\tcountdown = $temp$countdown;\n\t\t\t\t\tcontinue getByWeight;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$random$Random$weighted = F2(\n\tfunction (first, others) {\n\t\tvar normalize = function (_n0) {\n\t\t\tvar weight = _n0.a;\n\t\t\treturn elm$core$Basics$abs(weight);\n\t\t};\n\t\tvar total = normalize(first) + elm$core$List$sum(\n\t\t\tA2(elm$core$List$map, normalize, others));\n\t\treturn A2(\n\t\t\telm$random$Random$map,\n\t\t\tA2(elm$random$Random$getByWeight, first, others),\n\t\t\tA2(elm$random$Random$float, 0, total));\n\t});\nvar author$project$Main$update = F2(\n\tfunction (msg, model) {\n\t\tswitch (msg.$) {\n\t\t\tcase 1:\n\t\t\t\tvar live = author$project$Main$fetchLiveCells(model);\n\t\t\t\tvar isTicking = elm$core$List$length(live) > 0;\n\t\t\t\tvar _n1 = A2(author$project$Main$buildNewGeneration, model.m, live);\n\t\t\t\tvar newGeneration = _n1.a;\n\t\t\t\tvar newLiveCells = _n1.b;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{v: newLiveCells, m: newGeneration, o: isTicking}),\n\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t\tcase 0:\n\t\t\t\tvar id = msg.a;\n\t\t\t\tvar newGeneration = A2(\n\t\t\t\t\tKraxorax$elm_matrix_a$Matrix$map,\n\t\t\t\t\tauthor$project$Main$toggle(id),\n\t\t\t\t\tmodel.m);\n\t\t\t\tvar newAliveCells = author$project$MatrixUtils$getAliveCells(newGeneration);\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{v: newAliveCells, m: newGeneration}),\n\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t\tcase 2:\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{o: !model.o}),\n\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t\tcase 3:\n\t\t\t\tif (msg.a === 'random') {\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\telm$random$Random$generate,\n\t\t\t\t\t\t\tauthor$project$Msgs$RandomField,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\telm$random$Random$list,\n\t\t\t\t\t\t\t\t2500,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\telm$random$Random$weighted,\n\t\t\t\t\t\t\t\t\t_Utils_Tuple2(20, true),\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t_Utils_Tuple2(80, false)\n\t\t\t\t\t\t\t\t\t\t])))));\n\t\t\t\t} else {\n\t\t\t\t\tvar patternName = msg.a;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tv: _List_Nil,\n\t\t\t\t\t\t\t\tm: author$project$MatrixUtils$fieldMatrix(patternName),\n\t\t\t\t\t\t\t\to: false,\n\t\t\t\t\t\t\t\tL: patternName\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\tvar seed = msg.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tv: _List_Nil,\n\t\t\t\t\t\t\tm: author$project$MatrixUtils$randomFieldMatrix(\n\t\t\t\t\t\t\t\telm$core$Array$fromList(seed)),\n\t\t\t\t\t\t\to: false,\n\t\t\t\t\t\t\tL: 'random'\n\t\t\t\t\t\t}),\n\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t}\n\t});\nvar author$project$CellUtils$cellSizeString = '15';\nvar author$project$CellUtils$fillColor = function (alive) {\n\tif (alive) {\n\t\treturn '#5c8d89';\n\t} else {\n\t\treturn '#f9f8eb';\n\t}\n};\nvar author$project$CellUtils$cellSize = 15;\nvar author$project$CellUtils$rectPosition = function (value) {\n\treturn elm$core$String$fromInt(value * author$project$CellUtils$cellSize);\n};\nvar elm$json$Json$Decode$map = _Json_map1;\nvar elm$json$Json$Decode$map2 = _Json_map2;\nvar elm$json$Json$Decode$succeed = _Json_succeed;\nvar elm$virtual_dom$VirtualDom$toHandlerInt = function (handler) {\n\tswitch (handler.$) {\n\t\tcase 0:\n\t\t\treturn 0;\n\t\tcase 1:\n\t\t\treturn 1;\n\t\tcase 2:\n\t\t\treturn 2;\n\t\tdefault:\n\t\t\treturn 3;\n\t}\n};\nvar elm$svg$Svg$trustedNode = _VirtualDom_nodeNS('http://www.w3.org/2000/svg');\nvar elm$svg$Svg$rect = elm$svg$Svg$trustedNode('rect');\nvar elm$svg$Svg$Attributes$fill = _VirtualDom_attribute('fill');\nvar elm$svg$Svg$Attributes$height = _VirtualDom_attribute('height');\nvar elm$svg$Svg$Attributes$stroke = _VirtualDom_attribute('stroke');\nvar elm$svg$Svg$Attributes$width = _VirtualDom_attribute('width');\nvar elm$svg$Svg$Attributes$x = _VirtualDom_attribute('x');\nvar elm$svg$Svg$Attributes$y = _VirtualDom_attribute('y');\nvar elm$virtual_dom$VirtualDom$Normal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$virtual_dom$VirtualDom$on = _VirtualDom_on;\nvar elm$html$Html$Events$on = F2(\n\tfunction (event, decoder) {\n\t\treturn A2(\n\t\t\telm$virtual_dom$VirtualDom$on,\n\t\t\tevent,\n\t\t\telm$virtual_dom$VirtualDom$Normal(decoder));\n\t});\nvar elm$svg$Svg$Events$onClick = function (msg) {\n\treturn A2(\n\t\telm$html$Html$Events$on,\n\t\t'click',\n\t\telm$json$Json$Decode$succeed(msg));\n};\nvar author$project$CellUtils$cellRect = F2(\n\tfunction (_n0, onClickHanlder) {\n\t\tvar posX = _n0.aU;\n\t\tvar posY = _n0.aV;\n\t\tvar alive = _n0.aC;\n\t\tvar id = _n0.aM;\n\t\treturn A2(\n\t\t\telm$svg$Svg$rect,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$svg$Svg$Attributes$x(\n\t\t\t\t\tauthor$project$CellUtils$rectPosition(posX)),\n\t\t\t\t\telm$svg$Svg$Attributes$y(\n\t\t\t\t\tauthor$project$CellUtils$rectPosition(posY)),\n\t\t\t\t\telm$svg$Svg$Attributes$width(author$project$CellUtils$cellSizeString),\n\t\t\t\t\telm$svg$Svg$Attributes$height(author$project$CellUtils$cellSizeString),\n\t\t\t\t\telm$svg$Svg$Attributes$fill(\n\t\t\t\t\tauthor$project$CellUtils$fillColor(alive)),\n\t\t\t\t\telm$svg$Svg$Attributes$stroke('gainsboro'),\n\t\t\t\t\telm$svg$Svg$Events$onClick(\n\t\t\t\t\tonClickHanlder(id))\n\t\t\t\t]),\n\t\t\t_List_Nil);\n\t});\nvar author$project$CellUtils$cellList = F2(\n\tfunction (generation, onClickHanlder) {\n\t\treturn elm$core$Array$toList(\n\t\t\tA2(\n\t\t\t\telm$core$Array$map,\n\t\t\t\tfunction (item) {\n\t\t\t\t\treturn A2(author$project$CellUtils$cellRect, item, onClickHanlder);\n\t\t\t\t},\n\t\t\t\tKraxorax$elm_matrix_a$Matrix$toArray(generation)));\n\t});\nvar author$project$Main$buttonText = function (isTicking) {\n\treturn isTicking ? 'Stop Game' : 'Start Game';\n};\nvar author$project$Main$viewBoxParams = '0 0 800 800';\nvar author$project$Main$viewBoxSize = '800';\nvar author$project$Msgs$ChangePattern = function (a) {\n\treturn {$: 3, a: a};\n};\nvar author$project$Msgs$ClickEvent = function (a) {\n\treturn {$: 0, a: a};\n};\nvar author$project$Msgs$ToggleTicking = {$: 2};\nvar elm$html$Html$button = _VirtualDom_node('button');\nvar elm$html$Html$div = _VirtualDom_node('div');\nvar elm$html$Html$option = _VirtualDom_node('option');\nvar elm$html$Html$select = _VirtualDom_node('select');\nvar elm$virtual_dom$VirtualDom$text = _VirtualDom_text;\nvar elm$html$Html$text = elm$virtual_dom$VirtualDom$text;\nvar elm$json$Json$Encode$string = _Json_wrap;\nvar elm$html$Html$Attributes$stringProperty = F2(\n\tfunction (key, string) {\n\t\treturn A2(\n\t\t\t_VirtualDom_property,\n\t\t\tkey,\n\t\t\telm$json$Json$Encode$string(string));\n\t});\nvar elm$html$Html$Attributes$class = elm$html$Html$Attributes$stringProperty('className');\nvar elm$virtual_dom$VirtualDom$style = _VirtualDom_style;\nvar elm$html$Html$Attributes$style = elm$virtual_dom$VirtualDom$style;\nvar elm$html$Html$Attributes$value = elm$html$Html$Attributes$stringProperty('value');\nvar elm$html$Html$Events$onClick = function (msg) {\n\treturn A2(\n\t\telm$html$Html$Events$on,\n\t\t'click',\n\t\telm$json$Json$Decode$succeed(msg));\n};\nvar elm$html$Html$Events$alwaysStop = function (x) {\n\treturn _Utils_Tuple2(x, true);\n};\nvar elm$virtual_dom$VirtualDom$MayStopPropagation = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$html$Html$Events$stopPropagationOn = F2(\n\tfunction (event, decoder) {\n\t\treturn A2(\n\t\t\telm$virtual_dom$VirtualDom$on,\n\t\t\tevent,\n\t\t\telm$virtual_dom$VirtualDom$MayStopPropagation(decoder));\n\t});\nvar elm$json$Json$Decode$field = _Json_decodeField;\nvar elm$json$Json$Decode$at = F2(\n\tfunction (fields, decoder) {\n\t\treturn A3(elm$core$List$foldr, elm$json$Json$Decode$field, decoder, fields);\n\t});\nvar elm$json$Json$Decode$string = _Json_decodeString;\nvar elm$html$Html$Events$targetValue = A2(\n\telm$json$Json$Decode$at,\n\t_List_fromArray(\n\t\t['target', 'value']),\n\telm$json$Json$Decode$string);\nvar elm$html$Html$Events$onInput = function (tagger) {\n\treturn A2(\n\t\telm$html$Html$Events$stopPropagationOn,\n\t\t'input',\n\t\tA2(\n\t\t\telm$json$Json$Decode$map,\n\t\t\telm$html$Html$Events$alwaysStop,\n\t\t\tA2(elm$json$Json$Decode$map, tagger, elm$html$Html$Events$targetValue)));\n};\nvar elm$svg$Svg$svg = elm$svg$Svg$trustedNode('svg');\nvar elm$svg$Svg$Attributes$viewBox = _VirtualDom_attribute('viewBox');\nvar author$project$Main$view = function (_n0) {\n\tvar generation = _n0.m;\n\tvar isTicking = _n0.o;\n\tvar selectedPattern = _n0.L;\n\treturn A2(\n\t\telm$html$Html$div,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\telm$html$Html$Attributes$class('container')\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$div,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$Attributes$class('row')\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$html$Html$Attributes$class('col-sm-offset-3 field')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\telm$svg$Svg$svg,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\telm$svg$Svg$Attributes$width(author$project$Main$viewBoxSize),\n\t\t\t\t\t\t\t\t\t\telm$svg$Svg$Attributes$height(author$project$Main$viewBoxSize),\n\t\t\t\t\t\t\t\t\t\telm$svg$Svg$Attributes$viewBox(author$project$Main$viewBoxParams)\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\tauthor$project$CellUtils$cellList,\n\t\t\t\t\t\t\t\t\tgeneration,\n\t\t\t\t\t\t\t\t\tfunction (id) {\n\t\t\t\t\t\t\t\t\t\treturn author$project$Msgs$ClickEvent(id);\n\t\t\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$div,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$Attributes$class('row')\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$html$Html$Attributes$class('col-sm-offset-3')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\telm$html$Html$button,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2(elm$html$Html$Attributes$style, 'margin', '10px'),\n\t\t\t\t\t\t\t\t\t\telm$html$Html$Events$onClick(author$project$Msgs$ToggleTicking)\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\telm$html$Html$text(\n\t\t\t\t\t\t\t\t\t\tauthor$project$Main$buttonText(isTicking))\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$html$Html$Attributes$class('col-sm-1')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\telm$html$Html$select,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\telm$html$Html$Attributes$class('pattern-select'),\n\t\t\t\t\t\t\t\t\t\telm$html$Html$Events$onInput(author$project$Msgs$ChangePattern)\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\telm$html$Html$option,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\telm$html$Html$Attributes$value('glider')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\telm$html$Html$text('Glider')\n\t\t\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\telm$html$Html$option,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\telm$html$Html$Attributes$value('blinkers')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\telm$html$Html$text('Blinker')\n\t\t\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\telm$html$Html$option,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\telm$html$Html$Attributes$value('random')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\telm$html$Html$text('Random')\n\t\t\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$html$Html$Attributes$class('col-sm-1')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\telm$html$Html$button,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\telm$html$Html$Attributes$class('secondary'),\n\t\t\t\t\t\t\t\t\t\tA2(elm$html$Html$Attributes$style, 'margin', '10px'),\n\t\t\t\t\t\t\t\t\t\telm$html$Html$Events$onClick(\n\t\t\t\t\t\t\t\t\t\tauthor$project$Msgs$ChangePattern(selectedPattern))\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\telm$html$Html$text('Reset')\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t]))\n\t\t\t]));\n};\nvar elm$browser$Browser$External = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$browser$Browser$Internal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$browser$Browser$Dom$NotFound = elm$core$Basics$identity;\nvar elm$core$Basics$never = function (_n0) {\n\tnever:\n\twhile (true) {\n\t\tvar nvr = _n0;\n\t\tvar $temp$_n0 = nvr;\n\t\t_n0 = $temp$_n0;\n\t\tcontinue never;\n\t}\n};\nvar elm$core$Task$Perform = elm$core$Basics$identity;\nvar elm$core$Task$init = elm$core$Task$succeed(0);\nvar elm$core$Task$map = F2(\n\tfunction (func, taskA) {\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\tfunc(a));\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar elm$core$Task$spawnCmd = F2(\n\tfunction (router, _n0) {\n\t\tvar task = _n0;\n\t\treturn _Scheduler_spawn(\n\t\t\tA2(\n\t\t\t\telm$core$Task$andThen,\n\t\t\t\telm$core$Platform$sendToApp(router),\n\t\t\t\ttask));\n\t});\nvar elm$core$Task$onEffects = F3(\n\tfunction (router, commands, state) {\n\t\treturn A2(\n\t\t\telm$core$Task$map,\n\t\t\tfunction (_n0) {\n\t\t\t\treturn 0;\n\t\t\t},\n\t\t\telm$core$Task$sequence(\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\telm$core$Task$spawnCmd(router),\n\t\t\t\t\tcommands)));\n\t});\nvar elm$core$Task$onSelfMsg = F3(\n\tfunction (_n0, _n1, _n2) {\n\t\treturn elm$core$Task$succeed(0);\n\t});\nvar elm$core$Task$cmdMap = F2(\n\tfunction (tagger, _n0) {\n\t\tvar task = _n0;\n\t\treturn A2(elm$core$Task$map, tagger, task);\n\t});\n_Platform_effectManagers['Task'] = _Platform_createManager(elm$core$Task$init, elm$core$Task$onEffects, elm$core$Task$onSelfMsg, elm$core$Task$cmdMap);\nvar elm$core$Task$command = _Platform_leaf('Task');\nvar elm$core$Task$perform = F2(\n\tfunction (toMessage, task) {\n\t\treturn elm$core$Task$command(\n\t\t\tA2(elm$core$Task$map, toMessage, task));\n\t});\nvar elm$core$String$length = _String_length;\nvar elm$core$String$slice = _String_slice;\nvar elm$core$String$dropLeft = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? string : A3(\n\t\t\telm$core$String$slice,\n\t\t\tn,\n\t\t\telm$core$String$length(string),\n\t\t\tstring);\n\t});\nvar elm$core$String$startsWith = _String_startsWith;\nvar elm$url$Url$Http = 0;\nvar elm$url$Url$Https = 1;\nvar elm$core$String$indexes = _String_indexes;\nvar elm$core$String$isEmpty = function (string) {\n\treturn string === '';\n};\nvar elm$core$String$left = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? '' : A3(elm$core$String$slice, 0, n, string);\n\t});\nvar elm$core$String$contains = _String_contains;\nvar elm$core$String$toInt = _String_toInt;\nvar elm$url$Url$Url = F6(\n\tfunction (protocol, host, port_, path, query, fragment) {\n\t\treturn {af: fragment, ah: host, am: path, ao: port_, ar: protocol, as: query};\n\t});\nvar elm$url$Url$chompBeforePath = F5(\n\tfunction (protocol, path, params, frag, str) {\n\t\tif (elm$core$String$isEmpty(str) || A2(elm$core$String$contains, '@', str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, ':', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\tA6(elm$url$Url$Url, protocol, str, elm$core$Maybe$Nothing, path, params, frag));\n\t\t\t} else {\n\t\t\t\tif (!_n0.b.b) {\n\t\t\t\t\tvar i = _n0.a;\n\t\t\t\t\tvar _n1 = elm$core$String$toInt(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str));\n\t\t\t\t\tif (_n1.$ === 1) {\n\t\t\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar port_ = _n1;\n\t\t\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\t\t\tA6(\n\t\t\t\t\t\t\t\telm$url$Url$Url,\n\t\t\t\t\t\t\t\tprotocol,\n\t\t\t\t\t\t\t\tA2(elm$core$String$left, i, str),\n\t\t\t\t\t\t\t\tport_,\n\t\t\t\t\t\t\t\tpath,\n\t\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\t\tfrag));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompBeforeQuery = F4(\n\tfunction (protocol, params, frag, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '/', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A5(elm$url$Url$chompBeforePath, protocol, '/', params, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$url$Url$chompBeforePath,\n\t\t\t\t\tprotocol,\n\t\t\t\t\tA2(elm$core$String$dropLeft, i, str),\n\t\t\t\t\tparams,\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompBeforeFragment = F3(\n\tfunction (protocol, frag, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '?', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A4(elm$url$Url$chompBeforeQuery, protocol, elm$core$Maybe$Nothing, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A4(\n\t\t\t\t\telm$url$Url$chompBeforeQuery,\n\t\t\t\t\tprotocol,\n\t\t\t\t\telm$core$Maybe$Just(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompAfterProtocol = F2(\n\tfunction (protocol, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '#', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A3(elm$url$Url$chompBeforeFragment, protocol, elm$core$Maybe$Nothing, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A3(\n\t\t\t\t\telm$url$Url$chompBeforeFragment,\n\t\t\t\t\tprotocol,\n\t\t\t\t\telm$core$Maybe$Just(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$fromString = function (str) {\n\treturn A2(elm$core$String$startsWith, 'http://', str) ? A2(\n\t\telm$url$Url$chompAfterProtocol,\n\t\t0,\n\t\tA2(elm$core$String$dropLeft, 7, str)) : (A2(elm$core$String$startsWith, 'https://', str) ? A2(\n\t\telm$url$Url$chompAfterProtocol,\n\t\t1,\n\t\tA2(elm$core$String$dropLeft, 8, str)) : elm$core$Maybe$Nothing);\n};\nvar elm$browser$Browser$element = _Browser_element;\nvar author$project$Main$main = elm$browser$Browser$element(\n\t{aO: author$project$Main$init, aX: author$project$Main$subscriptions, aZ: author$project$Main$update, a$: author$project$Main$view});\n_Platform_export({'Main':{'init':author$project$Main$main(\n\telm$json$Json$Decode$succeed(0))(0)}});}(this));","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'mini.css';\nimport './main.css';\nimport { Elm } from './Main.elm';\nimport registerServiceWorker from './registerServiceWorker';\n\nElm.Main.init({\n  node: document.getElementById('root')\n});\n\nregisterServiceWorker();\n"],"sourceRoot":""}