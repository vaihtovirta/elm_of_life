{"version":3,"sources":["Main.elm","registerServiceWorker.js","index.js"],"names":["scope","F","arity","fun","wrapper","a","f","F2","b","F3","c","F4","d","F5","e","A2","A3","A4","A5","_List_Nil","$","_List_Cons","hd","tl","_List_cons","_List_fromArray","arr","out","i","length","_Utils_eq","x","y","pair","stack","isEqual","_Utils_eqHelp","pop","depth","push","_Utils_Tuple2","_Debug_crash","key","elm$core$Dict$toList","_Utils_cmp","ord","_Utils_compare","n","elm$core$Basics$LT","elm$core$Basics$GT","elm$core$Basics$EQ","_Utils_Tuple3","_Utils_update","oldRecord","updatedFields","newRecord","_JsArray_initialize","size","offset","func","result","Array","_JsArray_initializeFromList","max","ls","_JsArray_unsafeGet","index","array","_JsArray_unsafeSet","value","_JsArray_push","_JsArray_foldl","acc","_JsArray_foldr","_JsArray_map","_JsArray_indexedMap","_JsArray_slice","from","to","slice","_JsArray_appendN","dest","source","destLen","itemsToCopy","identifier","Error","_Basics_add","_Basics_ceiling","Math","ceil","_Basics_floor","floor","_Basics_log","log","_Json_decodePrim","decoder","_Json_expecting","elm$core$Result$Ok","isFinite","_Json_wrap","_Json_decodeString","String","_Json_decodeField","field","_Json_map1","d1","decoders","g","_Json_mapMany","_Json_run","_Json_runHelp","_Json_unwrap","_Json_isArray","_Json_runArrayDecoder","_Json_toElmArray","elm$core$Result$isOk","elm$core$Result$Err","elm$json$Json$Decode$Field","elm$json$Json$Decode$Index","keyValuePairs","hasOwnProperty","elm$core$List$reverse","answer","h","errors","temp","elm$json$Json$Decode$OneOf","elm$json$Json$Decode$Failure","toElmValue","len","isArray","FileList","elm$core$Array$initialize","type","_Json_equality","_Json_listEquality","aDecoders","bDecoders","_Scheduler_succeed","_Scheduler_binding","callback","_Scheduler_andThen","task","_Scheduler_guid","_Scheduler_rawSpawn","proc","_Scheduler_enqueue","_Scheduler_spawn","_Scheduler_rawSend","msg","_Scheduler_send","_Scheduler_working","_Scheduler_queue","shift","_Scheduler_step","rootTag","newRoot","_Platform_effectManagers","_Platform_createManager","init","onEffects","onSelfMsg","cmdMap","subMap","_Platform_instantiateManager","info","sendToApp","router","undefined","loop","state","j","_Platform_sendToApp","_Platform_sendToSelf","_Platform_leaf","home","k","l","_Platform_batch","list","m","_Platform_dispatchEffects","managers","cmdBag","subBag","effectsDict","_Platform_gatherEffects","isCmd","bag","taggers","effect","q","p","_Platform_toEffect","newEffect","effects","_Platform_insert","o","_VirtualDom_divertHrefToApp","_Time_setInterval","interval","id","setInterval","clearInterval","_VirtualDom_doc","document","_VirtualDom_appendChild","parent","child","appendChild","_VirtualDom_text","string","_VirtualDom_nodeNS","namespace","tag","factList","kidList","kids","descendantsCount","kid","_VirtualDom_organizeFacts","_VirtualDom_node","_VirtualDom_keyedNodeNS","_VirtualDom_passiveSupported","_VirtualDom_on","handler","_VirtualDom_property","_VirtualDom_attribute","facts","entry","subFacts","_VirtualDom_addClass","object","newClass","classes","_VirtualDom_render","vNode","eventNode","createTextNode","subNode","tagger","subEventRoot","domNode","elm_event_node_ref","_VirtualDom_applyFacts","createElementNS","createElement","addEventListener","_VirtualDom_applyStyles","_VirtualDom_applyEvents","_VirtualDom_applyAttrs","_VirtualDom_applyAttrsNS","styles","domNodeStyle","style","attrs","setAttribute","removeAttribute","nsAttrs","setAttributeNS","removeAttributeNS","events","allCallbacks","elmFs","newHandler","oldCallback","removeEventListener","_VirtualDom_makeCallback","passive","elm$virtual_dom$VirtualDom$toHandlerInt","window","Object","defineProperty","get","initialHandler","event","message","s","stopPropagation","_","currentEventNode","Y","preventDefault","_VirtualDom_equalEvents","_VirtualDom_pushPatch","patches","data","patch","r","t","u","_VirtualDom_diffHelp","xType","yType","keyedNode","keyedKids","_VirtualDom_dekey","xRefs","yRefs","same","subPatches","xTaggers","yTaggers","nesting","xSubNode","ySubNode","as","bs","_VirtualDom_pairwiseRefEqual","_VirtualDom_diffNodes","_VirtualDom_diffKids","_VirtualDom_diffKeyedKids","factsDiff","_VirtualDom_diffFacts","diffKids","category","diff","xKey","xValue","yValue","subDiff","yKey","xParent","yParent","xKids","yKids","xLen","yLen","v","minLen","xKid","rootIndex","localPatches","changes","inserts","xIndex","yIndex","xNode","yNode","newMatch","oldMatch","xNext","yNext","xNextKey","xNextNode","yNextKey","yNextNode","_VirtualDom_insertNode","_VirtualDom_removeNode","endInserts","w","_VirtualDom_POSTFIX","vnode","A","z","_VirtualDom_applyPatches","rootDomNode","oldVirtualNode","_VirtualDom_addDomNodes","_VirtualDom_addDomNodesHelp","low","high","patchType","vKids","childNodes","vKid","nextLow","_VirtualDom_applyPatchesHelp","localDomNode","newNode","_VirtualDom_applyPatch","parentNode","replaceChild","_VirtualDom_applyPatchRedraw","replaceData","removeChild","theEnd","insertBefore","frag","createDocumentFragment","_VirtualDom_applyPatchReorderEndInsertsHelp","insert","node","_VirtualDom_applyPatchReorder","_Browser_element","impl","flagDecoder","debugMetadata","args","update","subscriptions","stepperBuilder","model","stepper","ports","manager","_Platform_setupEffects","viewMetadata","_Platform_initialize","aO","aZ","aX","initialModel","view","a$","currNode","_VirtualDom_virtualize","nodeType","textContent","attrList","attributes","attr","name","tagName","toLowerCase","draw","updateIfNeeded","_Browser_requestAnimationFrame","nextModel","isSync","_Browser_makeAnimator","nextNode","_VirtualDom_diff","cancelAnimationFrame","requestAnimationFrame","setTimeout","assocs","millisToPosix","Kraxorax$elm_matrix_a$Matrix$Matrix","elm$core$Array$Array_elm_builtin","elm$core$Dict$foldr","left","$temp$func","$temp$acc","elm$core$List$cons","dict","elm$core$Elm$JsArray$foldr","elm$core$Array$foldr","baseCase","_n0","tree","tail","helper","elm$core$Array$toList","elm$core$Basics$ceiling","elm$core$Basics$logBase","base","number","elm$core$Array$shiftStep","elm$core$Elm$JsArray$empty","elm$core$Array$empty","elm$core$Array$Leaf","elm$core$Array$SubTree","elm$core$Elm$JsArray$initializeFromList","elm$core$List$foldl","xs","elm$core$Array$compressNodes","nodes","remainingNodes","newAcc","elm$core$Array$treeFromBuilder","nodeList","nodeListSize","newNodeSize","elm$core$Basics$add","elm$core$Basics$floor","elm$core$Basics$max","elm$core$Elm$JsArray$length","elm$core$Array$builderToArray","reverseNodeList","builder","treeLen","correctNodeList","elm$core$Elm$JsArray$initialize","elm$core$Array$initializeHelp","fn","fromIndex","leaf","tailLen","Kraxorax$elm_matrix_a$Matrix$generate","elm$core$Maybe$Just","elm$core$Maybe$Nothing","elm$core$String$fromInt","author$project$MatrixUtils$cellId","author$project$MatrixUtils$blinkers","author$project$MatrixUtils$glider","elm$core$Dict$RBEmpty_elm_builtin","elm$core$Dict$empty","elm$core$Dict$RBNode_elm_builtin","elm$core$Basics$compare","elm$core$Dict$balance","color","right","_n6","lRight","rK","rV","rLeft","rRight","elm$core$Dict$insertHelp","nColor","nKey","nValue","nLeft","nRight","elm$core$Dict$insert","author$project$MatrixUtils$patterns","elm$core$Dict$get","targetKey","elm$core$List$foldrHelper","ctr","r1","r2","r3","r4","elm$core$List$foldr","elm$core$List$filter","isGood","author$project$MatrixUtils$isIncludedInPattern","itemX","itemY","pattern","author$project$Types$Cell","posX","posY","alive","aC","aM","aU","aV","author$project$MatrixUtils$fieldMatrix","patternName","author$project$MatrixUtils$getPattern","elm$core$Elm$JsArray$appendN","elm$core$Elm$JsArray$slice","elm$core$Array$appendHelpBuilder","notAppended","appended","elm$core$Array$bitMask","elm$core$Elm$JsArray$push","elm$core$Elm$JsArray$singleton","elm$core$Elm$JsArray$unsafeGet","elm$core$Elm$JsArray$unsafeSet","elm$core$Array$insertTailInTree","pos","newSub","elm$core$Array$unsafeReplaceTail","newTail","startShift","originalTailLen","newTailLen","newArrayLen","newShift","newTree","elm$core$Array$appendHelpTree","toAppend","itemsToAppend","newArray","elm$core$Elm$JsArray$foldl","elm$core$Array$append","foldHelper","bTree","bTail","elm$core$Array$branchFactor","Kraxorax$elm_matrix_a$Matrix$toArray","elm$core$Array$fromListHelp","jsArray","remainingItems","elm$core$Array$fromList","elm$core$Array$filter","author$project$MatrixUtils$getAliveCells","matrix","elm$core$Platform$Cmd$none","author$project$Msgs$Tick","elm$core$Platform$Sub$none","elm$time$Time$Every","elm$core$Task$succeed","elm$time$Time$State","processes","aq","ay","elm$time$Time$init","elm$core$Dict$foldl","elm$core$Dict$merge","leftStep","bothStep","rightStep","leftDict","rightDict","initialResult","_n3","rKey","rValue","stepState","_n2","lKey","lValue","rest","leftovers","intermediateResult","_n4","elm$core$Task$andThen","elm$time$Time$addMySub","_n1","elm$core$Platform$sendToSelf","elm$core$Process$spawn","elm$time$Time$setInterval","elm$time$Time$spawnHelp","intervals","spawnTimer","elm$time$Time$onEffects","subs","_n7","kills","newTaggers","existing","spawnList","existingDict","newProcesses","elm$core$List$map","elm$core$Platform$sendToApp","elm$core$Task$map2","taskA","taskB","elm$core$Task$sequence","tasks","elm$time$Time$now","Date","now","elm$time$Time$onSelfMsg","time","elm$core$Basics$composeL","elm$time$Time$subscription","elm$time$Time$every","elm$core$Elm$JsArray$map","elm$core$Array$map","Kraxorax$elm_matrix_a$Matrix$map","row","ele","author$project$Main$toggle","cell","author$project$Main$handleClick","newGeneration","elm$core$Array$tailIndex","elm$core$Elm$JsArray$indexedMap","elm$core$Array$indexedMap","initialBuilder","mappedLeaf","Kraxorax$elm_matrix_a$Matrix$indexedMap","elm$core$Array$getHelp","elm$core$Array$get","author$project$Main$handleRandomSeed","seed","author$project$MatrixUtils$randomFieldMatrix","L","author$project$Main$handleSelectPattern","author$project$Msgs$RandomField","elm$random$Random$Seed","elm$random$Random$next","incr","elm$random$Random$init","elm$random$Random$initialSeed","elm$random$Random$step","elm$random$Random$onEffects","commands","newSeed","elm$random$Random$onSelfMsg","elm$random$Random$map","genA","seed0","seed1","exports","elm$random$Random$command","elm$random$Random$generate","generator","elm$random$Random$listHelp","revList","gen","elm$random$Random$list","elm$core$Basics$abs","elm$random$Random$peel","word","elm$random$Random$float","range","n1","elm$random$Random$getByWeight","others","countdown","weight","second","otherOthers","elm$random$Random$weighted","first","normalize","total","elm$core$Array$setHelp","elm$core$Array$set","Kraxorax$elm_matrix_a$Matrix$set","Kraxorax$elm_matrix_a$Matrix$getRow","Kraxorax$elm_matrix_a$Neighbours$flatten","elm$core$Array$length","Kraxorax$elm_matrix_a$Matrix$height","elm$core$Result$withDefault","def","Kraxorax$elm_matrix_a$Neighbours$orEmpty","elm$core$Array$repeat","Kraxorax$elm_matrix_a$Neighbours$getBoundSideRows","Kraxorax$elm_matrix_a$Neighbours$modulo","elm$core$List$drop","drop","elm$core$Array$sliceLeft","skipNodes","leafNodes","nodesToInsert","head","elm$core$Array$fetchNewTail","end","treeEnd","elm$core$Array$hoistTree","oldShift","elm$core$Array$sliceTree","endIdx","lastPos","elm$core$Array$sliceRight","elm$core$Array$translateIndex","posIndex","elm$core$Array$slice","correctTo","correctFrom","Kraxorax$elm_matrix_a$Neighbours$unboundHorizontalCenter","mw","start","Kraxorax$elm_matrix_a$Neighbours$unboundHorizontalSide","Kraxorax$elm_matrix_a$Neighbours$neighboursOnHorizontalStrip","rowSides","sideNbrs","rowCenter","Kraxorax$elm_matrix_a$Neighbours$boundHorizontalCenter","Kraxorax$elm_matrix_a$Neighbours$boundHorizontalSide","Kraxorax$elm_matrix_a$Neighbours$neighboursOnPlane","Kraxorax$elm_matrix_a$Neighbours$getUnboundSideRows","mh","Kraxorax$elm_matrix_a$Neighbours$neighboursOnTorus","Kraxorax$elm_matrix_a$Neighbours$neighboursOnVerticalStrip","Kraxorax$elm_matrix_a$Neighbours$neighbours","mt","author$project$MatrixUtils$cellNeighbours","author$project$MatrixUtils$liveNeighboursCount","author$project$MatrixUtils$isAlive","count","author$project$MatrixUtils$detectFate","elm$core$List$append","ys","elm$core$Set$empty","elm$core$Set$insert","elm$core$Dict$member","elm$core$Set$member","elm_community$list_extra$List$Extra$uniqueHelp","remaining","accumulator","computedFirst","elm_community$list_extra$List$Extra$uniqueBy","author$project$Main$evolve","generation","live","resultGen","resultAlives","fate","lists","author$project$Main$update","aliveCells","gameStatus","author$project$Main$handleTick","author$project$Main$handleTicking","author$project$Main$handleSelectRandomPattern","author$project$CellUtils$rectPosition","elm$json$Json$Decode$map","elm$json$Json$Decode$succeed","elm$svg$Svg$trustedNode","elm$svg$Svg$rect","elm$svg$Svg$Attributes$fill","elm$svg$Svg$Attributes$height","elm$svg$Svg$Attributes$stroke","elm$svg$Svg$Attributes$width","elm$svg$Svg$Attributes$x","elm$svg$Svg$Attributes$y","elm$virtual_dom$VirtualDom$on","elm$html$Html$Events$on","author$project$CellUtils$cellRect","onClickHanlder","author$project$CellUtils$fillColor","author$project$CellUtils$cellList","item","author$project$Msgs$SelectPattern","author$project$Msgs$ToggleTicking","elm$html$Html$a","elm$html$Html$button","elm$html$Html$div","elm$html$Html$h1","elm$html$Html$option","elm$html$Html$select","elm$html$Html$text","elm$json$Json$Encode$string","elm$html$Html$Attributes$stringProperty","elm$html$Html$Attributes$class","elm$html$Html$Attributes$value","elm$html$Html$Events$onClick","elm$html$Html$Events$alwaysStop","elm$html$Html$Events$stopPropagationOn","elm$json$Json$Decode$field","elm$json$Json$Decode$string","elm$html$Html$Events$targetValue","fields","elm$svg$Svg$svg","elm$svg$Svg$Attributes$viewBox","elm$core$Task$init","elm$core$Task$map","elm$core$Task$spawnCmd","Main","glider","url","selectedPattern","test","replace","author$project$Main$buttonText","author$project$Main$main","_Platform_mergeExportsProd","obj","this","isLocalhost","registerValidSW","swUrl","navigator","registration","installingWorker","installing","controller","console","error","Elm","URL","process","location","publicUrl","origin","concat","fetch","response","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f12a42a8.chunk.js","sourcesContent":["(function(scope){\n'use strict';\n\nfunction F(arity, fun, wrapper) {\n  wrapper.a = arity;\n  wrapper.f = fun;\n  return wrapper;\n}\n\nfunction F2(fun) {\n  return F(2, fun, function(a) { return function(b) { return fun(a,b); }; })\n}\nfunction F3(fun) {\n  return F(3, fun, function(a) {\n    return function(b) { return function(c) { return fun(a, b, c); }; };\n  });\n}\nfunction F4(fun) {\n  return F(4, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return fun(a, b, c, d); }; }; };\n  });\n}\nfunction F5(fun) {\n  return F(5, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };\n  });\n}\nfunction F6(fun) {\n  return F(6, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return fun(a, b, c, d, e, f); }; }; }; }; };\n  });\n}\nfunction F7(fun) {\n  return F(7, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };\n  });\n}\nfunction F8(fun) {\n  return F(8, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) {\n    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };\n  });\n}\nfunction F9(fun) {\n  return F(9, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) { return function(i) {\n    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };\n  });\n}\n\nfunction A2(fun, a, b) {\n  return fun.a === 2 ? fun.f(a, b) : fun(a)(b);\n}\nfunction A3(fun, a, b, c) {\n  return fun.a === 3 ? fun.f(a, b, c) : fun(a)(b)(c);\n}\nfunction A4(fun, a, b, c, d) {\n  return fun.a === 4 ? fun.f(a, b, c, d) : fun(a)(b)(c)(d);\n}\nfunction A5(fun, a, b, c, d, e) {\n  return fun.a === 5 ? fun.f(a, b, c, d, e) : fun(a)(b)(c)(d)(e);\n}\nfunction A6(fun, a, b, c, d, e, f) {\n  return fun.a === 6 ? fun.f(a, b, c, d, e, f) : fun(a)(b)(c)(d)(e)(f);\n}\nfunction A7(fun, a, b, c, d, e, f, g) {\n  return fun.a === 7 ? fun.f(a, b, c, d, e, f, g) : fun(a)(b)(c)(d)(e)(f)(g);\n}\nfunction A8(fun, a, b, c, d, e, f, g, h) {\n  return fun.a === 8 ? fun.f(a, b, c, d, e, f, g, h) : fun(a)(b)(c)(d)(e)(f)(g)(h);\n}\nfunction A9(fun, a, b, c, d, e, f, g, h, i) {\n  return fun.a === 9 ? fun.f(a, b, c, d, e, f, g, h, i) : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);\n}\n\n\n\n\nvar _List_Nil = { $: 0 };\nvar _List_Nil_UNUSED = { $: '[]' };\n\nfunction _List_Cons(hd, tl) { return { $: 1, a: hd, b: tl }; }\nfunction _List_Cons_UNUSED(hd, tl) { return { $: '::', a: hd, b: tl }; }\n\n\nvar _List_cons = F2(_List_Cons);\n\nfunction _List_fromArray(arr)\n{\n\tvar out = _List_Nil;\n\tfor (var i = arr.length; i--; )\n\t{\n\t\tout = _List_Cons(arr[i], out);\n\t}\n\treturn out;\n}\n\nfunction _List_toArray(xs)\n{\n\tfor (var out = []; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tout.push(xs.a);\n\t}\n\treturn out;\n}\n\nvar _List_map2 = F3(function(f, xs, ys)\n{\n\tfor (var arr = []; xs.b && ys.b; xs = xs.b, ys = ys.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A2(f, xs.a, ys.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map3 = F4(function(f, xs, ys, zs)\n{\n\tfor (var arr = []; xs.b && ys.b && zs.b; xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A3(f, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map4 = F5(function(f, ws, xs, ys, zs)\n{\n\tfor (var arr = []; ws.b && xs.b && ys.b && zs.b; ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A4(f, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map5 = F6(function(f, vs, ws, xs, ys, zs)\n{\n\tfor (var arr = []; vs.b && ws.b && xs.b && ys.b && zs.b; vs = vs.b, ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A5(f, vs.a, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_sortBy = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\treturn _Utils_cmp(f(a), f(b));\n\t}));\n});\n\nvar _List_sortWith = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\tvar ord = A2(f, a, b);\n\t\treturn ord === elm$core$Basics$EQ ? 0 : ord === elm$core$Basics$LT ? -1 : 1;\n\t}));\n});\n\n\n\n// EQUALITY\n\nfunction _Utils_eq(x, y)\n{\n\tfor (\n\t\tvar pair, stack = [], isEqual = _Utils_eqHelp(x, y, 0, stack);\n\t\tisEqual && (pair = stack.pop());\n\t\tisEqual = _Utils_eqHelp(pair.a, pair.b, 0, stack)\n\t\t)\n\t{}\n\n\treturn isEqual;\n}\n\nfunction _Utils_eqHelp(x, y, depth, stack)\n{\n\tif (depth > 100)\n\t{\n\t\tstack.push(_Utils_Tuple2(x,y));\n\t\treturn true;\n\t}\n\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (typeof x !== 'object' || x === null || y === null)\n\t{\n\t\ttypeof x === 'function' && _Debug_crash(5);\n\t\treturn false;\n\t}\n\n\t/**_UNUSED/\n\tif (x.$ === 'Set_elm_builtin')\n\t{\n\t\tx = elm$core$Set$toList(x);\n\t\ty = elm$core$Set$toList(y);\n\t}\n\tif (x.$ === 'RBNode_elm_builtin' || x.$ === 'RBEmpty_elm_builtin')\n\t{\n\t\tx = elm$core$Dict$toList(x);\n\t\ty = elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\t/**/\n\tif (x.$ < 0)\n\t{\n\t\tx = elm$core$Dict$toList(x);\n\t\ty = elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\tfor (var key in x)\n\t{\n\t\tif (!_Utils_eqHelp(x[key], y[key], depth + 1, stack))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nvar _Utils_equal = F2(_Utils_eq);\nvar _Utils_notEqual = F2(function(a, b) { return !_Utils_eq(a,b); });\n\n\n\n// COMPARISONS\n\n// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on\n// the particular integer values assigned to LT, EQ, and GT.\n\nfunction _Utils_cmp(x, y, ord)\n{\n\tif (typeof x !== 'object')\n\t{\n\t\treturn x === y ? /*EQ*/ 0 : x < y ? /*LT*/ -1 : /*GT*/ 1;\n\t}\n\n\t/**_UNUSED/\n\tif (x instanceof String)\n\t{\n\t\tvar a = x.valueOf();\n\t\tvar b = y.valueOf();\n\t\treturn a === b ? 0 : a < b ? -1 : 1;\n\t}\n\t//*/\n\n\t/**/\n\tif (typeof x.$ === 'undefined')\n\t//*/\n\t/**_UNUSED/\n\tif (x.$[0] === '#')\n\t//*/\n\t{\n\t\treturn (ord = _Utils_cmp(x.a, y.a))\n\t\t\t? ord\n\t\t\t: (ord = _Utils_cmp(x.b, y.b))\n\t\t\t\t? ord\n\t\t\t\t: _Utils_cmp(x.c, y.c);\n\t}\n\n\t// traverse conses until end of a list or a mismatch\n\tfor (; x.b && y.b && !(ord = _Utils_cmp(x.a, y.a)); x = x.b, y = y.b) {} // WHILE_CONSES\n\treturn ord || (x.b ? /*GT*/ 1 : y.b ? /*LT*/ -1 : /*EQ*/ 0);\n}\n\nvar _Utils_lt = F2(function(a, b) { return _Utils_cmp(a, b) < 0; });\nvar _Utils_le = F2(function(a, b) { return _Utils_cmp(a, b) < 1; });\nvar _Utils_gt = F2(function(a, b) { return _Utils_cmp(a, b) > 0; });\nvar _Utils_ge = F2(function(a, b) { return _Utils_cmp(a, b) >= 0; });\n\nvar _Utils_compare = F2(function(x, y)\n{\n\tvar n = _Utils_cmp(x, y);\n\treturn n < 0 ? elm$core$Basics$LT : n ? elm$core$Basics$GT : elm$core$Basics$EQ;\n});\n\n\n// COMMON VALUES\n\nvar _Utils_Tuple0 = 0;\nvar _Utils_Tuple0_UNUSED = { $: '#0' };\n\nfunction _Utils_Tuple2(a, b) { return { a: a, b: b }; }\nfunction _Utils_Tuple2_UNUSED(a, b) { return { $: '#2', a: a, b: b }; }\n\nfunction _Utils_Tuple3(a, b, c) { return { a: a, b: b, c: c }; }\nfunction _Utils_Tuple3_UNUSED(a, b, c) { return { $: '#3', a: a, b: b, c: c }; }\n\nfunction _Utils_chr(c) { return c; }\nfunction _Utils_chr_UNUSED(c) { return new String(c); }\n\n\n// RECORDS\n\nfunction _Utils_update(oldRecord, updatedFields)\n{\n\tvar newRecord = {};\n\n\tfor (var key in oldRecord)\n\t{\n\t\tnewRecord[key] = oldRecord[key];\n\t}\n\n\tfor (var key in updatedFields)\n\t{\n\t\tnewRecord[key] = updatedFields[key];\n\t}\n\n\treturn newRecord;\n}\n\n\n// APPEND\n\nvar _Utils_append = F2(_Utils_ap);\n\nfunction _Utils_ap(xs, ys)\n{\n\t// append Strings\n\tif (typeof xs === 'string')\n\t{\n\t\treturn xs + ys;\n\t}\n\n\t// append Lists\n\tif (!xs.b)\n\t{\n\t\treturn ys;\n\t}\n\tvar root = _List_Cons(xs.a, ys);\n\txs = xs.b\n\tfor (var curr = root; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tcurr = curr.b = _List_Cons(xs.a, ys);\n\t}\n\treturn root;\n}\n\n\n\nvar _JsArray_empty = [];\n\nfunction _JsArray_singleton(value)\n{\n    return [value];\n}\n\nfunction _JsArray_length(array)\n{\n    return array.length;\n}\n\nvar _JsArray_initialize = F3(function(size, offset, func)\n{\n    var result = new Array(size);\n\n    for (var i = 0; i < size; i++)\n    {\n        result[i] = func(offset + i);\n    }\n\n    return result;\n});\n\nvar _JsArray_initializeFromList = F2(function (max, ls)\n{\n    var result = new Array(max);\n\n    for (var i = 0; i < max && ls.b; i++)\n    {\n        result[i] = ls.a;\n        ls = ls.b;\n    }\n\n    result.length = i;\n    return _Utils_Tuple2(result, ls);\n});\n\nvar _JsArray_unsafeGet = F2(function(index, array)\n{\n    return array[index];\n});\n\nvar _JsArray_unsafeSet = F3(function(index, value, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[index] = value;\n    return result;\n});\n\nvar _JsArray_push = F2(function(value, array)\n{\n    var length = array.length;\n    var result = new Array(length + 1);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[length] = value;\n    return result;\n});\n\nvar _JsArray_foldl = F3(function(func, acc, array)\n{\n    var length = array.length;\n\n    for (var i = 0; i < length; i++)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_foldr = F3(function(func, acc, array)\n{\n    for (var i = array.length - 1; i >= 0; i--)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_map = F2(function(func, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = func(array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_indexedMap = F3(function(func, offset, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = A2(func, offset + i, array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_slice = F3(function(from, to, array)\n{\n    return array.slice(from, to);\n});\n\nvar _JsArray_appendN = F3(function(n, dest, source)\n{\n    var destLen = dest.length;\n    var itemsToCopy = n - destLen;\n\n    if (itemsToCopy > source.length)\n    {\n        itemsToCopy = source.length;\n    }\n\n    var size = destLen + itemsToCopy;\n    var result = new Array(size);\n\n    for (var i = 0; i < destLen; i++)\n    {\n        result[i] = dest[i];\n    }\n\n    for (var i = 0; i < itemsToCopy; i++)\n    {\n        result[i + destLen] = source[i];\n    }\n\n    return result;\n});\n\n\n\n// LOG\n\nvar _Debug_log = F2(function(tag, value)\n{\n\treturn value;\n});\n\nvar _Debug_log_UNUSED = F2(function(tag, value)\n{\n\tconsole.log(tag + ': ' + _Debug_toString(value));\n\treturn value;\n});\n\n\n// TODOS\n\nfunction _Debug_todo(moduleName, region)\n{\n\treturn function(message) {\n\t\t_Debug_crash(8, moduleName, region, message);\n\t};\n}\n\nfunction _Debug_todoCase(moduleName, region, value)\n{\n\treturn function(message) {\n\t\t_Debug_crash(9, moduleName, region, value, message);\n\t};\n}\n\n\n// TO STRING\n\nfunction _Debug_toString(value)\n{\n\treturn '<internals>';\n}\n\nfunction _Debug_toString_UNUSED(value)\n{\n\treturn _Debug_toAnsiString(false, value);\n}\n\nfunction _Debug_toAnsiString(ansi, value)\n{\n\tif (typeof value === 'function')\n\t{\n\t\treturn _Debug_internalColor(ansi, '<function>');\n\t}\n\n\tif (typeof value === 'boolean')\n\t{\n\t\treturn _Debug_ctorColor(ansi, value ? 'True' : 'False');\n\t}\n\n\tif (typeof value === 'number')\n\t{\n\t\treturn _Debug_numberColor(ansi, value + '');\n\t}\n\n\tif (value instanceof String)\n\t{\n\t\treturn _Debug_charColor(ansi, \"'\" + _Debug_addSlashes(value, true) + \"'\");\n\t}\n\n\tif (typeof value === 'string')\n\t{\n\t\treturn _Debug_stringColor(ansi, '\"' + _Debug_addSlashes(value, false) + '\"');\n\t}\n\n\tif (typeof value === 'object' && '$' in value)\n\t{\n\t\tvar tag = value.$;\n\n\t\tif (typeof tag === 'number')\n\t\t{\n\t\t\treturn _Debug_internalColor(ansi, '<internals>');\n\t\t}\n\n\t\tif (tag[0] === '#')\n\t\t{\n\t\t\tvar output = [];\n\t\t\tfor (var k in value)\n\t\t\t{\n\t\t\t\tif (k === '$') continue;\n\t\t\t\toutput.push(_Debug_toAnsiString(ansi, value[k]));\n\t\t\t}\n\t\t\treturn '(' + output.join(',') + ')';\n\t\t}\n\n\t\tif (tag === 'Set_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Set')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Set$toList(value));\n\t\t}\n\n\t\tif (tag === 'RBNode_elm_builtin' || tag === 'RBEmpty_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Dict')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Dict$toList(value));\n\t\t}\n\n\t\tif (tag === 'Array_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Array')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Array$toList(value));\n\t\t}\n\n\t\tif (tag === '::' || tag === '[]')\n\t\t{\n\t\t\tvar output = '[';\n\n\t\t\tvalue.b && (output += _Debug_toAnsiString(ansi, value.a), value = value.b)\n\n\t\t\tfor (; value.b; value = value.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\toutput += ',' + _Debug_toAnsiString(ansi, value.a);\n\t\t\t}\n\t\t\treturn output + ']';\n\t\t}\n\n\t\tvar output = '';\n\t\tfor (var i in value)\n\t\t{\n\t\t\tif (i === '$') continue;\n\t\t\tvar str = _Debug_toAnsiString(ansi, value[i]);\n\t\t\tvar c0 = str[0];\n\t\t\tvar parenless = c0 === '{' || c0 === '(' || c0 === '[' || c0 === '<' || c0 === '\"' || str.indexOf(' ') < 0;\n\t\t\toutput += ' ' + (parenless ? str : '(' + str + ')');\n\t\t}\n\t\treturn _Debug_ctorColor(ansi, tag) + output;\n\t}\n\n\tif (typeof DataView === 'function' && value instanceof DataView)\n\t{\n\t\treturn _Debug_stringColor(ansi, '<' + value.byteLength + ' bytes>');\n\t}\n\n\tif (typeof File === 'function' && value instanceof File)\n\t{\n\t\treturn _Debug_internalColor(ansi, '<' + value.name + '>');\n\t}\n\n\tif (typeof value === 'object')\n\t{\n\t\tvar output = [];\n\t\tfor (var key in value)\n\t\t{\n\t\t\tvar field = key[0] === '_' ? key.slice(1) : key;\n\t\t\toutput.push(_Debug_fadeColor(ansi, field) + ' = ' + _Debug_toAnsiString(ansi, value[key]));\n\t\t}\n\t\tif (output.length === 0)\n\t\t{\n\t\t\treturn '{}';\n\t\t}\n\t\treturn '{ ' + output.join(', ') + ' }';\n\t}\n\n\treturn _Debug_internalColor(ansi, '<internals>');\n}\n\nfunction _Debug_addSlashes(str, isChar)\n{\n\tvar s = str\n\t\t.replace(/\\\\/g, '\\\\\\\\')\n\t\t.replace(/\\n/g, '\\\\n')\n\t\t.replace(/\\t/g, '\\\\t')\n\t\t.replace(/\\r/g, '\\\\r')\n\t\t.replace(/\\v/g, '\\\\v')\n\t\t.replace(/\\0/g, '\\\\0');\n\n\tif (isChar)\n\t{\n\t\treturn s.replace(/\\'/g, '\\\\\\'');\n\t}\n\telse\n\t{\n\t\treturn s.replace(/\\\"/g, '\\\\\"');\n\t}\n}\n\nfunction _Debug_ctorColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[96m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_numberColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[95m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_stringColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[93m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_charColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[92m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_fadeColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[37m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_internalColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[94m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_toHexDigit(n)\n{\n\treturn String.fromCharCode(n < 10 ? 48 + n : 55 + n);\n}\n\n\n// CRASH\n\n\nfunction _Debug_crash(identifier)\n{\n\tthrow new Error('https://github.com/elm/core/blob/1.0.0/hints/' + identifier + '.md');\n}\n\n\nfunction _Debug_crash_UNUSED(identifier, fact1, fact2, fact3, fact4)\n{\n\tswitch(identifier)\n\t{\n\t\tcase 0:\n\t\t\tthrow new Error('What node should I take over? In JavaScript I need something like:\\n\\n    Elm.Main.init({\\n        node: document.getElementById(\"elm-node\")\\n    })\\n\\nYou need to do this with any Browser.sandbox or Browser.element program.');\n\n\t\tcase 1:\n\t\t\tthrow new Error('Browser.application programs cannot handle URLs like this:\\n\\n    ' + document.location.href + '\\n\\nWhat is the root? The root of your file system? Try looking at this program with `elm reactor` or some other server.');\n\n\t\tcase 2:\n\t\t\tvar jsonErrorString = fact1;\n\t\t\tthrow new Error('Problem with the flags given to your Elm program on initialization.\\n\\n' + jsonErrorString);\n\n\t\tcase 3:\n\t\t\tvar portName = fact1;\n\t\t\tthrow new Error('There can only be one port named `' + portName + '`, but your program has multiple.');\n\n\t\tcase 4:\n\t\t\tvar portName = fact1;\n\t\t\tvar problem = fact2;\n\t\t\tthrow new Error('Trying to send an unexpected type of value through port `' + portName + '`:\\n' + problem);\n\n\t\tcase 5:\n\t\t\tthrow new Error('Trying to use `(==)` on functions.\\nThere is no way to know if functions are \"the same\" in the Elm sense.\\nRead more about this at https://package.elm-lang.org/packages/elm/core/latest/Basics#== which describes why it is this way and what the better version will look like.');\n\n\t\tcase 6:\n\t\t\tvar moduleName = fact1;\n\t\t\tthrow new Error('Your page is loading multiple Elm scripts with a module named ' + moduleName + '. Maybe a duplicate script is getting loaded accidentally? If not, rename one of them so I know which is which!');\n\n\t\tcase 8:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar message = fact3;\n\t\t\tthrow new Error('TODO in module `' + moduleName + '` ' + _Debug_regionToString(region) + '\\n\\n' + message);\n\n\t\tcase 9:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar value = fact3;\n\t\t\tvar message = fact4;\n\t\t\tthrow new Error(\n\t\t\t\t'TODO in module `' + moduleName + '` from the `case` expression '\n\t\t\t\t+ _Debug_regionToString(region) + '\\n\\nIt received the following value:\\n\\n    '\n\t\t\t\t+ _Debug_toString(value).replace('\\n', '\\n    ')\n\t\t\t\t+ '\\n\\nBut the branch that handles it says:\\n\\n    ' + message.replace('\\n', '\\n    ')\n\t\t\t);\n\n\t\tcase 10:\n\t\t\tthrow new Error('Bug in https://github.com/elm/virtual-dom/issues');\n\n\t\tcase 11:\n\t\t\tthrow new Error('Cannot perform mod 0. Division by zero error.');\n\t}\n}\n\nfunction _Debug_regionToString(region)\n{\n\tif (region.Z.I === region.ad.I)\n\t{\n\t\treturn 'on line ' + region.Z.I;\n\t}\n\treturn 'on lines ' + region.Z.I + ' through ' + region.ad.I;\n}\n\n\n\n// MATH\n\nvar _Basics_add = F2(function(a, b) { return a + b; });\nvar _Basics_sub = F2(function(a, b) { return a - b; });\nvar _Basics_mul = F2(function(a, b) { return a * b; });\nvar _Basics_fdiv = F2(function(a, b) { return a / b; });\nvar _Basics_idiv = F2(function(a, b) { return (a / b) | 0; });\nvar _Basics_pow = F2(Math.pow);\n\nvar _Basics_remainderBy = F2(function(b, a) { return a % b; });\n\n// https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/divmodnote-letter.pdf\nvar _Basics_modBy = F2(function(modulus, x)\n{\n\tvar answer = x % modulus;\n\treturn modulus === 0\n\t\t? _Debug_crash(11)\n\t\t:\n\t((answer > 0 && modulus < 0) || (answer < 0 && modulus > 0))\n\t\t? answer + modulus\n\t\t: answer;\n});\n\n\n// TRIGONOMETRY\n\nvar _Basics_pi = Math.PI;\nvar _Basics_e = Math.E;\nvar _Basics_cos = Math.cos;\nvar _Basics_sin = Math.sin;\nvar _Basics_tan = Math.tan;\nvar _Basics_acos = Math.acos;\nvar _Basics_asin = Math.asin;\nvar _Basics_atan = Math.atan;\nvar _Basics_atan2 = F2(Math.atan2);\n\n\n// MORE MATH\n\nfunction _Basics_toFloat(x) { return x; }\nfunction _Basics_truncate(n) { return n | 0; }\nfunction _Basics_isInfinite(n) { return n === Infinity || n === -Infinity; }\n\nvar _Basics_ceiling = Math.ceil;\nvar _Basics_floor = Math.floor;\nvar _Basics_round = Math.round;\nvar _Basics_sqrt = Math.sqrt;\nvar _Basics_log = Math.log;\nvar _Basics_isNaN = isNaN;\n\n\n// BOOLEANS\n\nfunction _Basics_not(bool) { return !bool; }\nvar _Basics_and = F2(function(a, b) { return a && b; });\nvar _Basics_or  = F2(function(a, b) { return a || b; });\nvar _Basics_xor = F2(function(a, b) { return a !== b; });\n\n\n\nvar _String_cons = F2(function(chr, str)\n{\n\treturn chr + str;\n});\n\nfunction _String_uncons(string)\n{\n\tvar word = string.charCodeAt(0);\n\treturn word\n\t\t? elm$core$Maybe$Just(\n\t\t\t0xD800 <= word && word <= 0xDBFF\n\t\t\t\t? _Utils_Tuple2(_Utils_chr(string[0] + string[1]), string.slice(2))\n\t\t\t\t: _Utils_Tuple2(_Utils_chr(string[0]), string.slice(1))\n\t\t)\n\t\t: elm$core$Maybe$Nothing;\n}\n\nvar _String_append = F2(function(a, b)\n{\n\treturn a + b;\n});\n\nfunction _String_length(str)\n{\n\treturn str.length;\n}\n\nvar _String_map = F2(function(func, string)\n{\n\tvar len = string.length;\n\tvar array = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarray[i] = func(_Utils_chr(string[i] + string[i+1]));\n\t\t\ti += 2;\n\t\t\tcontinue;\n\t\t}\n\t\tarray[i] = func(_Utils_chr(string[i]));\n\t\ti++;\n\t}\n\treturn array.join('');\n});\n\nvar _String_filter = F2(function(isGood, str)\n{\n\tvar arr = [];\n\tvar len = str.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = str[i];\n\t\tvar word = str.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += str[i];\n\t\t\ti++;\n\t\t}\n\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\tarr.push(char);\n\t\t}\n\t}\n\treturn arr.join('');\n});\n\nfunction _String_reverse(str)\n{\n\tvar len = str.length;\n\tvar arr = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = str.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarr[len - i] = str[i + 1];\n\t\t\ti++;\n\t\t\tarr[len - i] = str[i - 1];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tarr[len - i] = str[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn arr.join('');\n}\n\nvar _String_foldl = F3(function(func, state, string)\n{\n\tvar len = string.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += string[i];\n\t\t\ti++;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_foldr = F3(function(func, state, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_split = F2(function(sep, str)\n{\n\treturn str.split(sep);\n});\n\nvar _String_join = F2(function(sep, strs)\n{\n\treturn strs.join(sep);\n});\n\nvar _String_slice = F3(function(start, end, str) {\n\treturn str.slice(start, end);\n});\n\nfunction _String_trim(str)\n{\n\treturn str.trim();\n}\n\nfunction _String_trimLeft(str)\n{\n\treturn str.replace(/^\\s+/, '');\n}\n\nfunction _String_trimRight(str)\n{\n\treturn str.replace(/\\s+$/, '');\n}\n\nfunction _String_words(str)\n{\n\treturn _List_fromArray(str.trim().split(/\\s+/g));\n}\n\nfunction _String_lines(str)\n{\n\treturn _List_fromArray(str.split(/\\r\\n|\\r|\\n/g));\n}\n\nfunction _String_toUpper(str)\n{\n\treturn str.toUpperCase();\n}\n\nfunction _String_toLower(str)\n{\n\treturn str.toLowerCase();\n}\n\nvar _String_any = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n});\n\nvar _String_all = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (!isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n});\n\nvar _String_contains = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) > -1;\n});\n\nvar _String_startsWith = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) === 0;\n});\n\nvar _String_endsWith = F2(function(sub, str)\n{\n\treturn str.length >= sub.length &&\n\t\tstr.lastIndexOf(sub) === str.length - sub.length;\n});\n\nvar _String_indexes = F2(function(sub, str)\n{\n\tvar subLen = sub.length;\n\n\tif (subLen < 1)\n\t{\n\t\treturn _List_Nil;\n\t}\n\n\tvar i = 0;\n\tvar is = [];\n\n\twhile ((i = str.indexOf(sub, i)) > -1)\n\t{\n\t\tis.push(i);\n\t\ti = i + subLen;\n\t}\n\n\treturn _List_fromArray(is);\n});\n\n\n// TO STRING\n\nfunction _String_fromNumber(number)\n{\n\treturn number + '';\n}\n\n\n// INT CONVERSIONS\n\nfunction _String_toInt(str)\n{\n\tvar total = 0;\n\tvar code0 = str.charCodeAt(0);\n\tvar start = code0 == 0x2B /* + */ || code0 == 0x2D /* - */ ? 1 : 0;\n\n\tfor (var i = start; i < str.length; ++i)\n\t{\n\t\tvar code = str.charCodeAt(i);\n\t\tif (code < 0x30 || 0x39 < code)\n\t\t{\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t}\n\t\ttotal = 10 * total + code - 0x30;\n\t}\n\n\treturn i == start\n\t\t? elm$core$Maybe$Nothing\n\t\t: elm$core$Maybe$Just(code0 == 0x2D ? -total : total);\n}\n\n\n// FLOAT CONVERSIONS\n\nfunction _String_toFloat(s)\n{\n\t// check if it is a hex, octal, or binary number\n\tif (s.length === 0 || /[\\sxbo]/.test(s))\n\t{\n\t\treturn elm$core$Maybe$Nothing;\n\t}\n\tvar n = +s;\n\t// faster isNaN check\n\treturn n === n ? elm$core$Maybe$Just(n) : elm$core$Maybe$Nothing;\n}\n\nfunction _String_fromList(chars)\n{\n\treturn _List_toArray(chars).join('');\n}\n\n\n\n\nvar _Bitwise_and = F2(function(a, b)\n{\n\treturn a & b;\n});\n\nvar _Bitwise_or = F2(function(a, b)\n{\n\treturn a | b;\n});\n\nvar _Bitwise_xor = F2(function(a, b)\n{\n\treturn a ^ b;\n});\n\nfunction _Bitwise_complement(a)\n{\n\treturn ~a;\n};\n\nvar _Bitwise_shiftLeftBy = F2(function(offset, a)\n{\n\treturn a << offset;\n});\n\nvar _Bitwise_shiftRightBy = F2(function(offset, a)\n{\n\treturn a >> offset;\n});\n\nvar _Bitwise_shiftRightZfBy = F2(function(offset, a)\n{\n\treturn a >>> offset;\n});\n\n\n\nfunction _Char_toCode(char)\n{\n\tvar code = char.charCodeAt(0);\n\tif (0xD800 <= code && code <= 0xDBFF)\n\t{\n\t\treturn (code - 0xD800) * 0x400 + char.charCodeAt(1) - 0xDC00 + 0x10000\n\t}\n\treturn code;\n}\n\nfunction _Char_fromCode(code)\n{\n\treturn _Utils_chr(\n\t\t(code < 0 || 0x10FFFF < code)\n\t\t\t? '\\uFFFD'\n\t\t\t:\n\t\t(code <= 0xFFFF)\n\t\t\t? String.fromCharCode(code)\n\t\t\t:\n\t\t(code -= 0x10000,\n\t\t\tString.fromCharCode(Math.floor(code / 0x400) + 0xD800, code % 0x400 + 0xDC00)\n\t\t)\n\t);\n}\n\nfunction _Char_toUpper(char)\n{\n\treturn _Utils_chr(char.toUpperCase());\n}\n\nfunction _Char_toLower(char)\n{\n\treturn _Utils_chr(char.toLowerCase());\n}\n\nfunction _Char_toLocaleUpper(char)\n{\n\treturn _Utils_chr(char.toLocaleUpperCase());\n}\n\nfunction _Char_toLocaleLower(char)\n{\n\treturn _Utils_chr(char.toLocaleLowerCase());\n}\n\n\n\n/**_UNUSED/\nfunction _Json_errorToString(error)\n{\n\treturn elm$json$Json$Decode$errorToString(error);\n}\n//*/\n\n\n// CORE DECODERS\n\nfunction _Json_succeed(msg)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_fail(msg)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_decodePrim(decoder)\n{\n\treturn { $: 2, b: decoder };\n}\n\nvar _Json_decodeInt = _Json_decodePrim(function(value) {\n\treturn (typeof value !== 'number')\n\t\t? _Json_expecting('an INT', value)\n\t\t:\n\t(-2147483647 < value && value < 2147483647 && (value | 0) === value)\n\t\t? elm$core$Result$Ok(value)\n\t\t:\n\t(isFinite(value) && !(value % 1))\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('an INT', value);\n});\n\nvar _Json_decodeBool = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'boolean')\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a BOOL', value);\n});\n\nvar _Json_decodeFloat = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'number')\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a FLOAT', value);\n});\n\nvar _Json_decodeValue = _Json_decodePrim(function(value) {\n\treturn elm$core$Result$Ok(_Json_wrap(value));\n});\n\nvar _Json_decodeString = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'string')\n\t\t? elm$core$Result$Ok(value)\n\t\t: (value instanceof String)\n\t\t\t? elm$core$Result$Ok(value + '')\n\t\t\t: _Json_expecting('a STRING', value);\n});\n\nfunction _Json_decodeList(decoder) { return { $: 3, b: decoder }; }\nfunction _Json_decodeArray(decoder) { return { $: 4, b: decoder }; }\n\nfunction _Json_decodeNull(value) { return { $: 5, c: value }; }\n\nvar _Json_decodeField = F2(function(field, decoder)\n{\n\treturn {\n\t\t$: 6,\n\t\td: field,\n\t\tb: decoder\n\t};\n});\n\nvar _Json_decodeIndex = F2(function(index, decoder)\n{\n\treturn {\n\t\t$: 7,\n\t\te: index,\n\t\tb: decoder\n\t};\n});\n\nfunction _Json_decodeKeyValuePairs(decoder)\n{\n\treturn {\n\t\t$: 8,\n\t\tb: decoder\n\t};\n}\n\nfunction _Json_mapMany(f, decoders)\n{\n\treturn {\n\t\t$: 9,\n\t\tf: f,\n\t\tg: decoders\n\t};\n}\n\nvar _Json_andThen = F2(function(callback, decoder)\n{\n\treturn {\n\t\t$: 10,\n\t\tb: decoder,\n\t\th: callback\n\t};\n});\n\nfunction _Json_oneOf(decoders)\n{\n\treturn {\n\t\t$: 11,\n\t\tg: decoders\n\t};\n}\n\n\n// DECODING OBJECTS\n\nvar _Json_map1 = F2(function(f, d1)\n{\n\treturn _Json_mapMany(f, [d1]);\n});\n\nvar _Json_map2 = F3(function(f, d1, d2)\n{\n\treturn _Json_mapMany(f, [d1, d2]);\n});\n\nvar _Json_map3 = F4(function(f, d1, d2, d3)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3]);\n});\n\nvar _Json_map4 = F5(function(f, d1, d2, d3, d4)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4]);\n});\n\nvar _Json_map5 = F6(function(f, d1, d2, d3, d4, d5)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5]);\n});\n\nvar _Json_map6 = F7(function(f, d1, d2, d3, d4, d5, d6)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6]);\n});\n\nvar _Json_map7 = F8(function(f, d1, d2, d3, d4, d5, d6, d7)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);\n});\n\nvar _Json_map8 = F9(function(f, d1, d2, d3, d4, d5, d6, d7, d8)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);\n});\n\n\n// DECODE\n\nvar _Json_runOnString = F2(function(decoder, string)\n{\n\ttry\n\t{\n\t\tvar value = JSON.parse(string);\n\t\treturn _Json_runHelp(decoder, value);\n\t}\n\tcatch (e)\n\t{\n\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, 'This is not valid JSON! ' + e.message, _Json_wrap(string)));\n\t}\n});\n\nvar _Json_run = F2(function(decoder, value)\n{\n\treturn _Json_runHelp(decoder, _Json_unwrap(value));\n});\n\nfunction _Json_runHelp(decoder, value)\n{\n\tswitch (decoder.$)\n\t{\n\t\tcase 2:\n\t\t\treturn decoder.b(value);\n\n\t\tcase 5:\n\t\t\treturn (value === null)\n\t\t\t\t? elm$core$Result$Ok(decoder.c)\n\t\t\t\t: _Json_expecting('null', value);\n\n\t\tcase 3:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LIST', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _List_fromArray);\n\n\t\tcase 4:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _Json_toElmArray);\n\n\t\tcase 6:\n\t\t\tvar field = decoder.d;\n\t\t\tif (typeof value !== 'object' || value === null || !(field in value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT with a field named `' + field + '`', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[field]);\n\t\t\treturn (elm$core$Result$isOk(result)) ? result : elm$core$Result$Err(A2(elm$json$Json$Decode$Field, field, result.a));\n\n\t\tcase 7:\n\t\t\tvar index = decoder.e;\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\tif (index >= value.length)\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LONGER array. Need index ' + index + ' but only see ' + value.length + ' entries', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[index]);\n\t\t\treturn (elm$core$Result$isOk(result)) ? result : elm$core$Result$Err(A2(elm$json$Json$Decode$Index, index, result.a));\n\n\t\tcase 8:\n\t\t\tif (typeof value !== 'object' || value === null || _Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT', value);\n\t\t\t}\n\n\t\t\tvar keyValuePairs = _List_Nil;\n\t\t\t// TODO test perf of Object.keys and switch when support is good enough\n\t\t\tfor (var key in value)\n\t\t\t{\n\t\t\t\tif (value.hasOwnProperty(key))\n\t\t\t\t{\n\t\t\t\t\tvar result = _Json_runHelp(decoder.b, value[key]);\n\t\t\t\t\tif (!elm$core$Result$isOk(result))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Field, key, result.a));\n\t\t\t\t\t}\n\t\t\t\t\tkeyValuePairs = _List_Cons(_Utils_Tuple2(key, result.a), keyValuePairs);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn elm$core$Result$Ok(elm$core$List$reverse(keyValuePairs));\n\n\t\tcase 9:\n\t\t\tvar answer = decoder.f;\n\t\t\tvar decoders = decoder.g;\n\t\t\tfor (var i = 0; i < decoders.length; i++)\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(decoders[i], value);\n\t\t\t\tif (!elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\tanswer = answer(result.a);\n\t\t\t}\n\t\t\treturn elm$core$Result$Ok(answer);\n\n\t\tcase 10:\n\t\t\tvar result = _Json_runHelp(decoder.b, value);\n\t\t\treturn (!elm$core$Result$isOk(result))\n\t\t\t\t? result\n\t\t\t\t: _Json_runHelp(decoder.h(result.a), value);\n\n\t\tcase 11:\n\t\t\tvar errors = _List_Nil;\n\t\t\tfor (var temp = decoder.g; temp.b; temp = temp.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(temp.a, value);\n\t\t\t\tif (elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\terrors = _List_Cons(result.a, errors);\n\t\t\t}\n\t\t\treturn elm$core$Result$Err(elm$json$Json$Decode$OneOf(elm$core$List$reverse(errors)));\n\n\t\tcase 1:\n\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, decoder.a, _Json_wrap(value)));\n\n\t\tcase 0:\n\t\t\treturn elm$core$Result$Ok(decoder.a);\n\t}\n}\n\nfunction _Json_runArrayDecoder(decoder, value, toElmValue)\n{\n\tvar len = value.length;\n\tvar array = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tvar result = _Json_runHelp(decoder, value[i]);\n\t\tif (!elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Index, i, result.a));\n\t\t}\n\t\tarray[i] = result.a;\n\t}\n\treturn elm$core$Result$Ok(toElmValue(array));\n}\n\nfunction _Json_isArray(value)\n{\n\treturn Array.isArray(value) || (typeof FileList === 'function' && value instanceof FileList);\n}\n\nfunction _Json_toElmArray(array)\n{\n\treturn A2(elm$core$Array$initialize, array.length, function(i) { return array[i]; });\n}\n\nfunction _Json_expecting(type, value)\n{\n\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, 'Expecting ' + type, _Json_wrap(value)));\n}\n\n\n// EQUALITY\n\nfunction _Json_equality(x, y)\n{\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (x.$ !== y.$)\n\t{\n\t\treturn false;\n\t}\n\n\tswitch (x.$)\n\t{\n\t\tcase 0:\n\t\tcase 1:\n\t\t\treturn x.a === y.a;\n\n\t\tcase 2:\n\t\t\treturn x.b === y.b;\n\n\t\tcase 5:\n\t\t\treturn x.c === y.c;\n\n\t\tcase 3:\n\t\tcase 4:\n\t\tcase 8:\n\t\t\treturn _Json_equality(x.b, y.b);\n\n\t\tcase 6:\n\t\t\treturn x.d === y.d && _Json_equality(x.b, y.b);\n\n\t\tcase 7:\n\t\t\treturn x.e === y.e && _Json_equality(x.b, y.b);\n\n\t\tcase 9:\n\t\t\treturn x.f === y.f && _Json_listEquality(x.g, y.g);\n\n\t\tcase 10:\n\t\t\treturn x.h === y.h && _Json_equality(x.b, y.b);\n\n\t\tcase 11:\n\t\t\treturn _Json_listEquality(x.g, y.g);\n\t}\n}\n\nfunction _Json_listEquality(aDecoders, bDecoders)\n{\n\tvar len = aDecoders.length;\n\tif (len !== bDecoders.length)\n\t{\n\t\treturn false;\n\t}\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tif (!_Json_equality(aDecoders[i], bDecoders[i]))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// ENCODE\n\nvar _Json_encode = F2(function(indentLevel, value)\n{\n\treturn JSON.stringify(_Json_unwrap(value), null, indentLevel) + '';\n});\n\nfunction _Json_wrap_UNUSED(value) { return { $: 0, a: value }; }\nfunction _Json_unwrap_UNUSED(value) { return value.a; }\n\nfunction _Json_wrap(value) { return value; }\nfunction _Json_unwrap(value) { return value; }\n\nfunction _Json_emptyArray() { return []; }\nfunction _Json_emptyObject() { return {}; }\n\nvar _Json_addField = F3(function(key, value, object)\n{\n\tobject[key] = _Json_unwrap(value);\n\treturn object;\n});\n\nfunction _Json_addEntry(func)\n{\n\treturn F2(function(entry, array)\n\t{\n\t\tarray.push(_Json_unwrap(func(entry)));\n\t\treturn array;\n\t});\n}\n\nvar _Json_encodeNull = _Json_wrap(null);\n\n\n\n// TASKS\n\nfunction _Scheduler_succeed(value)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: value\n\t};\n}\n\nfunction _Scheduler_fail(error)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: error\n\t};\n}\n\nfunction _Scheduler_binding(callback)\n{\n\treturn {\n\t\t$: 2,\n\t\tb: callback,\n\t\tc: null\n\t};\n}\n\nvar _Scheduler_andThen = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 3,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nvar _Scheduler_onError = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 4,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nfunction _Scheduler_receive(callback)\n{\n\treturn {\n\t\t$: 5,\n\t\tb: callback\n\t};\n}\n\n\n// PROCESSES\n\nvar _Scheduler_guid = 0;\n\nfunction _Scheduler_rawSpawn(task)\n{\n\tvar proc = {\n\t\t$: 0,\n\t\te: _Scheduler_guid++,\n\t\tf: task,\n\t\tg: null,\n\t\th: []\n\t};\n\n\t_Scheduler_enqueue(proc);\n\n\treturn proc;\n}\n\nfunction _Scheduler_spawn(task)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tcallback(_Scheduler_succeed(_Scheduler_rawSpawn(task)));\n\t});\n}\n\nfunction _Scheduler_rawSend(proc, msg)\n{\n\tproc.h.push(msg);\n\t_Scheduler_enqueue(proc);\n}\n\nvar _Scheduler_send = F2(function(proc, msg)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\t_Scheduler_rawSend(proc, msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\nfunction _Scheduler_kill(proc)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar task = proc.f;\n\t\tif (task.$ === 2 && task.c)\n\t\t{\n\t\t\ttask.c();\n\t\t}\n\n\t\tproc.f = null;\n\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n}\n\n\n/* STEP PROCESSES\n\ntype alias Process =\n  { $ : tag\n  , id : unique_id\n  , root : Task\n  , stack : null | { $: SUCCEED | FAIL, a: callback, b: stack }\n  , mailbox : [msg]\n  }\n\n*/\n\n\nvar _Scheduler_working = false;\nvar _Scheduler_queue = [];\n\n\nfunction _Scheduler_enqueue(proc)\n{\n\t_Scheduler_queue.push(proc);\n\tif (_Scheduler_working)\n\t{\n\t\treturn;\n\t}\n\t_Scheduler_working = true;\n\twhile (proc = _Scheduler_queue.shift())\n\t{\n\t\t_Scheduler_step(proc);\n\t}\n\t_Scheduler_working = false;\n}\n\n\nfunction _Scheduler_step(proc)\n{\n\twhile (proc.f)\n\t{\n\t\tvar rootTag = proc.f.$;\n\t\tif (rootTag === 0 || rootTag === 1)\n\t\t{\n\t\t\twhile (proc.g && proc.g.$ !== rootTag)\n\t\t\t{\n\t\t\t\tproc.g = proc.g.i;\n\t\t\t}\n\t\t\tif (!proc.g)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.g.b(proc.f.a);\n\t\t\tproc.g = proc.g.i;\n\t\t}\n\t\telse if (rootTag === 2)\n\t\t{\n\t\t\tproc.f.c = proc.f.b(function(newRoot) {\n\t\t\t\tproc.f = newRoot;\n\t\t\t\t_Scheduler_enqueue(proc);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\telse if (rootTag === 5)\n\t\t{\n\t\t\tif (proc.h.length === 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.f.b(proc.h.shift());\n\t\t}\n\t\telse // if (rootTag === 3 || rootTag === 4)\n\t\t{\n\t\t\tproc.g = {\n\t\t\t\t$: rootTag === 3 ? 0 : 1,\n\t\t\t\tb: proc.f.b,\n\t\t\t\ti: proc.g\n\t\t\t};\n\t\t\tproc.f = proc.f.d;\n\t\t}\n\t}\n}\n\n\n\nfunction _Process_sleep(time)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar id = setTimeout(function() {\n\t\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t\t}, time);\n\n\t\treturn function() { clearTimeout(id); };\n\t});\n}\n\n\n\n\n// PROGRAMS\n\n\nvar _Platform_worker = F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.aO,\n\t\timpl.aZ,\n\t\timpl.aX,\n\t\tfunction() { return function() {} }\n\t);\n});\n\n\n\n// INITIALIZE A PROGRAM\n\n\nfunction _Platform_initialize(flagDecoder, args, init, update, subscriptions, stepperBuilder)\n{\n\tvar result = A2(_Json_run, flagDecoder, _Json_wrap(args ? args['flags'] : undefined));\n\telm$core$Result$isOk(result) || _Debug_crash(2 /**_UNUSED/, _Json_errorToString(result.a) /**/);\n\tvar managers = {};\n\tresult = init(result.a);\n\tvar model = result.a;\n\tvar stepper = stepperBuilder(sendToApp, model);\n\tvar ports = _Platform_setupEffects(managers, sendToApp);\n\n\tfunction sendToApp(msg, viewMetadata)\n\t{\n\t\tresult = A2(update, msg, model);\n\t\tstepper(model = result.a, viewMetadata);\n\t\t_Platform_dispatchEffects(managers, result.b, subscriptions(model));\n\t}\n\n\t_Platform_dispatchEffects(managers, result.b, subscriptions(model));\n\n\treturn ports ? { ports: ports } : {};\n}\n\n\n\n// TRACK PRELOADS\n//\n// This is used by code in elm/browser and elm/http\n// to register any HTTP requests that are triggered by init.\n//\n\n\nvar _Platform_preload;\n\n\nfunction _Platform_registerPreload(url)\n{\n\t_Platform_preload.add(url);\n}\n\n\n\n// EFFECT MANAGERS\n\n\nvar _Platform_effectManagers = {};\n\n\nfunction _Platform_setupEffects(managers, sendToApp)\n{\n\tvar ports;\n\n\t// setup all necessary effect managers\n\tfor (var key in _Platform_effectManagers)\n\t{\n\t\tvar manager = _Platform_effectManagers[key];\n\n\t\tif (manager.a)\n\t\t{\n\t\t\tports = ports || {};\n\t\t\tports[key] = manager.a(key, sendToApp);\n\t\t}\n\n\t\tmanagers[key] = _Platform_instantiateManager(manager, sendToApp);\n\t}\n\n\treturn ports;\n}\n\n\nfunction _Platform_createManager(init, onEffects, onSelfMsg, cmdMap, subMap)\n{\n\treturn {\n\t\tb: init,\n\t\tc: onEffects,\n\t\td: onSelfMsg,\n\t\te: cmdMap,\n\t\tf: subMap\n\t};\n}\n\n\nfunction _Platform_instantiateManager(info, sendToApp)\n{\n\tvar router = {\n\t\tg: sendToApp,\n\t\th: undefined\n\t};\n\n\tvar onEffects = info.c;\n\tvar onSelfMsg = info.d;\n\tvar cmdMap = info.e;\n\tvar subMap = info.f;\n\n\tfunction loop(state)\n\t{\n\t\treturn A2(_Scheduler_andThen, loop, _Scheduler_receive(function(msg)\n\t\t{\n\t\t\tvar value = msg.a;\n\n\t\t\tif (msg.$ === 0)\n\t\t\t{\n\t\t\t\treturn A3(onSelfMsg, router, value, state);\n\t\t\t}\n\n\t\t\treturn cmdMap && subMap\n\t\t\t\t? A4(onEffects, router, value.i, value.j, state)\n\t\t\t\t: A3(onEffects, router, cmdMap ? value.i : value.j, state);\n\t\t}));\n\t}\n\n\treturn router.h = _Scheduler_rawSpawn(A2(_Scheduler_andThen, loop, info.b));\n}\n\n\n\n// ROUTING\n\n\nvar _Platform_sendToApp = F2(function(router, msg)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\trouter.g(msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\n\nvar _Platform_sendToSelf = F2(function(router, msg)\n{\n\treturn A2(_Scheduler_send, router.h, {\n\t\t$: 0,\n\t\ta: msg\n\t});\n});\n\n\n\n// BAGS\n\n\nfunction _Platform_leaf(home)\n{\n\treturn function(value)\n\t{\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tk: home,\n\t\t\tl: value\n\t\t};\n\t};\n}\n\n\nfunction _Platform_batch(list)\n{\n\treturn {\n\t\t$: 2,\n\t\tm: list\n\t};\n}\n\n\nvar _Platform_map = F2(function(tagger, bag)\n{\n\treturn {\n\t\t$: 3,\n\t\tn: tagger,\n\t\to: bag\n\t}\n});\n\n\n\n// PIPE BAGS INTO EFFECT MANAGERS\n\n\nfunction _Platform_dispatchEffects(managers, cmdBag, subBag)\n{\n\tvar effectsDict = {};\n\t_Platform_gatherEffects(true, cmdBag, effectsDict, null);\n\t_Platform_gatherEffects(false, subBag, effectsDict, null);\n\n\tfor (var home in managers)\n\t{\n\t\t_Scheduler_rawSend(managers[home], {\n\t\t\t$: 'fx',\n\t\t\ta: effectsDict[home] || { i: _List_Nil, j: _List_Nil }\n\t\t});\n\t}\n}\n\n\nfunction _Platform_gatherEffects(isCmd, bag, effectsDict, taggers)\n{\n\tswitch (bag.$)\n\t{\n\t\tcase 1:\n\t\t\tvar home = bag.k;\n\t\t\tvar effect = _Platform_toEffect(isCmd, home, taggers, bag.l);\n\t\t\teffectsDict[home] = _Platform_insert(isCmd, effect, effectsDict[home]);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\tfor (var list = bag.m; list.b; list = list.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\t_Platform_gatherEffects(isCmd, list.a, effectsDict, taggers);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\t_Platform_gatherEffects(isCmd, bag.o, effectsDict, {\n\t\t\t\tp: bag.n,\n\t\t\t\tq: taggers\n\t\t\t});\n\t\t\treturn;\n\t}\n}\n\n\nfunction _Platform_toEffect(isCmd, home, taggers, value)\n{\n\tfunction applyTaggers(x)\n\t{\n\t\tfor (var temp = taggers; temp; temp = temp.q)\n\t\t{\n\t\t\tx = temp.p(x);\n\t\t}\n\t\treturn x;\n\t}\n\n\tvar map = isCmd\n\t\t? _Platform_effectManagers[home].e\n\t\t: _Platform_effectManagers[home].f;\n\n\treturn A2(map, applyTaggers, value)\n}\n\n\nfunction _Platform_insert(isCmd, newEffect, effects)\n{\n\teffects = effects || { i: _List_Nil, j: _List_Nil };\n\n\tisCmd\n\t\t? (effects.i = _List_Cons(newEffect, effects.i))\n\t\t: (effects.j = _List_Cons(newEffect, effects.j));\n\n\treturn effects;\n}\n\n\n\n// PORTS\n\n\nfunction _Platform_checkPortName(name)\n{\n\tif (_Platform_effectManagers[name])\n\t{\n\t\t_Debug_crash(3, name)\n\t}\n}\n\n\n\n// OUTGOING PORTS\n\n\nfunction _Platform_outgoingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\te: _Platform_outgoingPortMap,\n\t\tr: converter,\n\t\ta: _Platform_setupOutgoingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_outgoingPortMap = F2(function(tagger, value) { return value; });\n\n\nfunction _Platform_setupOutgoingPort(name)\n{\n\tvar subs = [];\n\tvar converter = _Platform_effectManagers[name].r;\n\n\t// CREATE MANAGER\n\n\tvar init = _Process_sleep(0);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, cmdList, state)\n\t{\n\t\tfor ( ; cmdList.b; cmdList = cmdList.b) // WHILE_CONS\n\t\t{\n\t\t\t// grab a separate reference to subs in case unsubscribe is called\n\t\t\tvar currentSubs = subs;\n\t\t\tvar value = _Json_unwrap(converter(cmdList.a));\n\t\t\tfor (var i = 0; i < currentSubs.length; i++)\n\t\t\t{\n\t\t\t\tcurrentSubs[i](value);\n\t\t\t}\n\t\t}\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction subscribe(callback)\n\t{\n\t\tsubs.push(callback);\n\t}\n\n\tfunction unsubscribe(callback)\n\t{\n\t\t// copy subs into a new array in case unsubscribe is called within a\n\t\t// subscribed callback\n\t\tsubs = subs.slice();\n\t\tvar index = subs.indexOf(callback);\n\t\tif (index >= 0)\n\t\t{\n\t\t\tsubs.splice(index, 1);\n\t\t}\n\t}\n\n\treturn {\n\t\tsubscribe: subscribe,\n\t\tunsubscribe: unsubscribe\n\t};\n}\n\n\n\n// INCOMING PORTS\n\n\nfunction _Platform_incomingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\tf: _Platform_incomingPortMap,\n\t\tr: converter,\n\t\ta: _Platform_setupIncomingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_incomingPortMap = F2(function(tagger, finalTagger)\n{\n\treturn function(value)\n\t{\n\t\treturn tagger(finalTagger(value));\n\t};\n});\n\n\nfunction _Platform_setupIncomingPort(name, sendToApp)\n{\n\tvar subs = _List_Nil;\n\tvar converter = _Platform_effectManagers[name].r;\n\n\t// CREATE MANAGER\n\n\tvar init = _Scheduler_succeed(null);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, subList, state)\n\t{\n\t\tsubs = subList;\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction send(incomingValue)\n\t{\n\t\tvar result = A2(_Json_run, converter, _Json_wrap(incomingValue));\n\n\t\telm$core$Result$isOk(result) || _Debug_crash(4, name, result.a);\n\n\t\tvar value = result.a;\n\t\tfor (var temp = subs; temp.b; temp = temp.b) // WHILE_CONS\n\t\t{\n\t\t\tsendToApp(temp.a(value));\n\t\t}\n\t}\n\n\treturn { send: send };\n}\n\n\n\n// EXPORT ELM MODULES\n//\n// Have DEBUG and PROD versions so that we can (1) give nicer errors in\n// debug mode and (2) not pay for the bits needed for that in prod mode.\n//\n\n\nfunction _Platform_export(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsProd(scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsProd(obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6)\n\t\t\t\t: _Platform_mergeExportsProd(obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\nfunction _Platform_export_UNUSED(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsDebug('Elm', scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsDebug(moduleName, obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6, moduleName)\n\t\t\t\t: _Platform_mergeExportsDebug(moduleName + '.' + name, obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\n\nfunction _Time_now(millisToPosix)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(millisToPosix(Date.now())));\n\t});\n}\n\nvar _Time_setInterval = F2(function(interval, task)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tvar id = setInterval(function() { _Scheduler_rawSpawn(task); }, interval);\n\t\treturn function() { clearInterval(id); };\n\t});\n});\n\nfunction _Time_here()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(\n\t\t\tA2(elm$time$Time$customZone, -(new Date().getTimezoneOffset()), _List_Nil)\n\t\t));\n\t});\n}\n\n\nfunction _Time_getZoneName()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\ttry\n\t\t{\n\t\t\tvar name = elm$time$Time$Name(Intl.DateTimeFormat().resolvedOptions().timeZone);\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\tvar name = elm$time$Time$Offset(new Date().getTimezoneOffset());\n\t\t}\n\t\tcallback(_Scheduler_succeed(name));\n\t});\n}\n\n\n\n\n// HELPERS\n\n\nvar _VirtualDom_divertHrefToApp;\n\nvar _VirtualDom_doc = typeof document !== 'undefined' ? document : {};\n\n\nfunction _VirtualDom_appendChild(parent, child)\n{\n\tparent.appendChild(child);\n}\n\nvar _VirtualDom_init = F4(function(virtualNode, flagDecoder, debugMetadata, args)\n{\n\t// NOTE: this function needs _Platform_export available to work\n\n\t/**/\n\tvar node = args['node'];\n\t//*/\n\t/**_UNUSED/\n\tvar node = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t//*/\n\n\tnode.parentNode.replaceChild(\n\t\t_VirtualDom_render(virtualNode, function() {}),\n\t\tnode\n\t);\n\n\treturn {};\n});\n\n\n\n// TEXT\n\n\nfunction _VirtualDom_text(string)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: string\n\t};\n}\n\n\n\n// NODE\n\n\nvar _VirtualDom_nodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_node = _VirtualDom_nodeNS(undefined);\n\n\n\n// KEYED NODE\n\n\nvar _VirtualDom_keyedNodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 2,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_keyedNode = _VirtualDom_keyedNodeNS(undefined);\n\n\n\n// CUSTOM\n\n\nfunction _VirtualDom_custom(factList, model, render, diff)\n{\n\treturn {\n\t\t$: 3,\n\t\td: _VirtualDom_organizeFacts(factList),\n\t\tg: model,\n\t\th: render,\n\t\ti: diff\n\t};\n}\n\n\n\n// MAP\n\n\nvar _VirtualDom_map = F2(function(tagger, node)\n{\n\treturn {\n\t\t$: 4,\n\t\tj: tagger,\n\t\tk: node,\n\t\tb: 1 + (node.b || 0)\n\t};\n});\n\n\n\n// LAZY\n\n\nfunction _VirtualDom_thunk(refs, thunk)\n{\n\treturn {\n\t\t$: 5,\n\t\tl: refs,\n\t\tm: thunk,\n\t\tk: undefined\n\t};\n}\n\nvar _VirtualDom_lazy = F2(function(func, a)\n{\n\treturn _VirtualDom_thunk([func, a], function() {\n\t\treturn func(a);\n\t});\n});\n\nvar _VirtualDom_lazy2 = F3(function(func, a, b)\n{\n\treturn _VirtualDom_thunk([func, a, b], function() {\n\t\treturn A2(func, a, b);\n\t});\n});\n\nvar _VirtualDom_lazy3 = F4(function(func, a, b, c)\n{\n\treturn _VirtualDom_thunk([func, a, b, c], function() {\n\t\treturn A3(func, a, b, c);\n\t});\n});\n\nvar _VirtualDom_lazy4 = F5(function(func, a, b, c, d)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d], function() {\n\t\treturn A4(func, a, b, c, d);\n\t});\n});\n\nvar _VirtualDom_lazy5 = F6(function(func, a, b, c, d, e)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e], function() {\n\t\treturn A5(func, a, b, c, d, e);\n\t});\n});\n\nvar _VirtualDom_lazy6 = F7(function(func, a, b, c, d, e, f)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f], function() {\n\t\treturn A6(func, a, b, c, d, e, f);\n\t});\n});\n\nvar _VirtualDom_lazy7 = F8(function(func, a, b, c, d, e, f, g)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g], function() {\n\t\treturn A7(func, a, b, c, d, e, f, g);\n\t});\n});\n\nvar _VirtualDom_lazy8 = F9(function(func, a, b, c, d, e, f, g, h)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g, h], function() {\n\t\treturn A8(func, a, b, c, d, e, f, g, h);\n\t});\n});\n\n\n\n// FACTS\n\n\nvar _VirtualDom_on = F2(function(key, handler)\n{\n\treturn {\n\t\t$: 'a0',\n\t\tn: key,\n\t\to: handler\n\t};\n});\nvar _VirtualDom_style = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a1',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_property = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a2',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attribute = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a3',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attributeNS = F3(function(namespace, key, value)\n{\n\treturn {\n\t\t$: 'a4',\n\t\tn: key,\n\t\to: { f: namespace, o: value }\n\t};\n});\n\n\n\n// XSS ATTACK VECTOR CHECKS\n\n\nfunction _VirtualDom_noScript(tag)\n{\n\treturn tag == 'script' ? 'p' : tag;\n}\n\nfunction _VirtualDom_noOnOrFormAction(key)\n{\n\treturn /^(on|formAction$)/i.test(key) ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noInnerHtmlOrFormAction(key)\n{\n\treturn key == 'innerHTML' || key == 'formAction' ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noJavaScriptUri(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,'')) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptUri_UNUSED(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,''))\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri_UNUSED(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value)\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\n\n\n// MAP FACTS\n\n\nvar _VirtualDom_mapAttribute = F2(function(func, attr)\n{\n\treturn (attr.$ === 'a0')\n\t\t? A2(_VirtualDom_on, attr.n, _VirtualDom_mapHandler(func, attr.o))\n\t\t: attr;\n});\n\nfunction _VirtualDom_mapHandler(func, handler)\n{\n\tvar tag = elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t// 0 = Normal\n\t// 1 = MayStopPropagation\n\t// 2 = MayPreventDefault\n\t// 3 = Custom\n\n\treturn {\n\t\t$: handler.$,\n\t\ta:\n\t\t\t!tag\n\t\t\t\t? A2(elm$json$Json$Decode$map, func, handler.a)\n\t\t\t\t:\n\t\t\tA3(elm$json$Json$Decode$map2,\n\t\t\t\ttag < 3\n\t\t\t\t\t? _VirtualDom_mapEventTuple\n\t\t\t\t\t: _VirtualDom_mapEventRecord,\n\t\t\t\telm$json$Json$Decode$succeed(func),\n\t\t\t\thandler.a\n\t\t\t)\n\t};\n}\n\nvar _VirtualDom_mapEventTuple = F2(function(func, tuple)\n{\n\treturn _Utils_Tuple2(func(tuple.a), tuple.b);\n});\n\nvar _VirtualDom_mapEventRecord = F2(function(func, record)\n{\n\treturn {\n\t\ts: func(record.s),\n\t\t_: record._,\n\t\tY: record.Y\n\t}\n});\n\n\n\n// ORGANIZE FACTS\n\n\nfunction _VirtualDom_organizeFacts(factList)\n{\n\tfor (var facts = {}; factList.b; factList = factList.b) // WHILE_CONS\n\t{\n\t\tvar entry = factList.a;\n\n\t\tvar tag = entry.$;\n\t\tvar key = entry.n;\n\t\tvar value = entry.o;\n\n\t\tif (tag === 'a2')\n\t\t{\n\t\t\t(key === 'className')\n\t\t\t\t? _VirtualDom_addClass(facts, key, _Json_unwrap(value))\n\t\t\t\t: facts[key] = _Json_unwrap(value);\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar subFacts = facts[tag] || (facts[tag] = {});\n\t\t(tag === 'a3' && key === 'class')\n\t\t\t? _VirtualDom_addClass(subFacts, key, value)\n\t\t\t: subFacts[key] = value;\n\t}\n\n\treturn facts;\n}\n\nfunction _VirtualDom_addClass(object, key, newClass)\n{\n\tvar classes = object[key];\n\tobject[key] = classes ? classes + ' ' + newClass : newClass;\n}\n\n\n\n// RENDER\n\n\nfunction _VirtualDom_render(vNode, eventNode)\n{\n\tvar tag = vNode.$;\n\n\tif (tag === 5)\n\t{\n\t\treturn _VirtualDom_render(vNode.k || (vNode.k = vNode.m()), eventNode);\n\t}\n\n\tif (tag === 0)\n\t{\n\t\treturn _VirtualDom_doc.createTextNode(vNode.a);\n\t}\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\t\tvar tagger = vNode.j;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\ttypeof tagger !== 'object'\n\t\t\t\t? tagger = [tagger, subNode.j]\n\t\t\t\t: tagger.push(subNode.j);\n\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\tvar subEventRoot = { j: tagger, p: eventNode };\n\t\tvar domNode = _VirtualDom_render(subNode, subEventRoot);\n\t\tdomNode.elm_event_node_ref = subEventRoot;\n\t\treturn domNode;\n\t}\n\n\tif (tag === 3)\n\t{\n\t\tvar domNode = vNode.h(vNode.g);\n\t\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\t\treturn domNode;\n\t}\n\n\t// at this point `tag` must be 1 or 2\n\n\tvar domNode = vNode.f\n\t\t? _VirtualDom_doc.createElementNS(vNode.f, vNode.c)\n\t\t: _VirtualDom_doc.createElement(vNode.c);\n\n\tif (_VirtualDom_divertHrefToApp && vNode.c == 'a')\n\t{\n\t\tdomNode.addEventListener('click', _VirtualDom_divertHrefToApp(domNode));\n\t}\n\n\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\n\tfor (var kids = vNode.e, i = 0; i < kids.length; i++)\n\t{\n\t\t_VirtualDom_appendChild(domNode, _VirtualDom_render(tag === 1 ? kids[i] : kids[i].b, eventNode));\n\t}\n\n\treturn domNode;\n}\n\n\n\n// APPLY FACTS\n\n\nfunction _VirtualDom_applyFacts(domNode, eventNode, facts)\n{\n\tfor (var key in facts)\n\t{\n\t\tvar value = facts[key];\n\n\t\tkey === 'a1'\n\t\t\t? _VirtualDom_applyStyles(domNode, value)\n\t\t\t:\n\t\tkey === 'a0'\n\t\t\t? _VirtualDom_applyEvents(domNode, eventNode, value)\n\t\t\t:\n\t\tkey === 'a3'\n\t\t\t? _VirtualDom_applyAttrs(domNode, value)\n\t\t\t:\n\t\tkey === 'a4'\n\t\t\t? _VirtualDom_applyAttrsNS(domNode, value)\n\t\t\t:\n\t\t((key !== 'value' && key !== 'checked') || domNode[key] !== value) && (domNode[key] = value);\n\t}\n}\n\n\n\n// APPLY STYLES\n\n\nfunction _VirtualDom_applyStyles(domNode, styles)\n{\n\tvar domNodeStyle = domNode.style;\n\n\tfor (var key in styles)\n\t{\n\t\tdomNodeStyle[key] = styles[key];\n\t}\n}\n\n\n\n// APPLY ATTRS\n\n\nfunction _VirtualDom_applyAttrs(domNode, attrs)\n{\n\tfor (var key in attrs)\n\t{\n\t\tvar value = attrs[key];\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttribute(key, value)\n\t\t\t: domNode.removeAttribute(key);\n\t}\n}\n\n\n\n// APPLY NAMESPACED ATTRS\n\n\nfunction _VirtualDom_applyAttrsNS(domNode, nsAttrs)\n{\n\tfor (var key in nsAttrs)\n\t{\n\t\tvar pair = nsAttrs[key];\n\t\tvar namespace = pair.f;\n\t\tvar value = pair.o;\n\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttributeNS(namespace, key, value)\n\t\t\t: domNode.removeAttributeNS(namespace, key);\n\t}\n}\n\n\n\n// APPLY EVENTS\n\n\nfunction _VirtualDom_applyEvents(domNode, eventNode, events)\n{\n\tvar allCallbacks = domNode.elmFs || (domNode.elmFs = {});\n\n\tfor (var key in events)\n\t{\n\t\tvar newHandler = events[key];\n\t\tvar oldCallback = allCallbacks[key];\n\n\t\tif (!newHandler)\n\t\t{\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t\tallCallbacks[key] = undefined;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (oldCallback)\n\t\t{\n\t\t\tvar oldHandler = oldCallback.q;\n\t\t\tif (oldHandler.$ === newHandler.$)\n\t\t\t{\n\t\t\t\toldCallback.q = newHandler;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t}\n\n\t\toldCallback = _VirtualDom_makeCallback(eventNode, newHandler);\n\t\tdomNode.addEventListener(key, oldCallback,\n\t\t\t_VirtualDom_passiveSupported\n\t\t\t&& { passive: elm$virtual_dom$VirtualDom$toHandlerInt(newHandler) < 2 }\n\t\t);\n\t\tallCallbacks[key] = oldCallback;\n\t}\n}\n\n\n\n// PASSIVE EVENTS\n\n\nvar _VirtualDom_passiveSupported;\n\ntry\n{\n\twindow.addEventListener('t', null, Object.defineProperty({}, 'passive', {\n\t\tget: function() { _VirtualDom_passiveSupported = true; }\n\t}));\n}\ncatch(e) {}\n\n\n\n// EVENT HANDLERS\n\n\nfunction _VirtualDom_makeCallback(eventNode, initialHandler)\n{\n\tfunction callback(event)\n\t{\n\t\tvar handler = callback.q;\n\t\tvar result = _Json_runHelp(handler.a, event);\n\n\t\tif (!elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar tag = elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t\t// 0 = Normal\n\t\t// 1 = MayStopPropagation\n\t\t// 2 = MayPreventDefault\n\t\t// 3 = Custom\n\n\t\tvar value = result.a;\n\t\tvar message = !tag ? value : tag < 3 ? value.a : value.s;\n\t\tvar stopPropagation = tag == 1 ? value.b : tag == 3 && value._;\n\t\tvar currentEventNode = (\n\t\t\tstopPropagation && event.stopPropagation(),\n\t\t\t(tag == 2 ? value.b : tag == 3 && value.Y) && event.preventDefault(),\n\t\t\teventNode\n\t\t);\n\t\tvar tagger;\n\t\tvar i;\n\t\twhile (tagger = currentEventNode.j)\n\t\t{\n\t\t\tif (typeof tagger == 'function')\n\t\t\t{\n\t\t\t\tmessage = tagger(message);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (var i = tagger.length; i--; )\n\t\t\t\t{\n\t\t\t\t\tmessage = tagger[i](message);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrentEventNode = currentEventNode.p;\n\t\t}\n\t\tcurrentEventNode(message, stopPropagation); // stopPropagation implies isSync\n\t}\n\n\tcallback.q = initialHandler;\n\n\treturn callback;\n}\n\nfunction _VirtualDom_equalEvents(x, y)\n{\n\treturn x.$ == y.$ && _Json_equality(x.a, y.a);\n}\n\n\n\n// DIFF\n\n\n// TODO: Should we do patches like in iOS?\n//\n// type Patch\n//   = At Int Patch\n//   | Batch (List Patch)\n//   | Change ...\n//\n// How could it not be better?\n//\nfunction _VirtualDom_diff(x, y)\n{\n\tvar patches = [];\n\t_VirtualDom_diffHelp(x, y, patches, 0);\n\treturn patches;\n}\n\n\nfunction _VirtualDom_pushPatch(patches, type, index, data)\n{\n\tvar patch = {\n\t\t$: type,\n\t\tr: index,\n\t\ts: data,\n\t\tt: undefined,\n\t\tu: undefined\n\t};\n\tpatches.push(patch);\n\treturn patch;\n}\n\n\nfunction _VirtualDom_diffHelp(x, y, patches, index)\n{\n\tif (x === y)\n\t{\n\t\treturn;\n\t}\n\n\tvar xType = x.$;\n\tvar yType = y.$;\n\n\t// Bail if you run into different types of nodes. Implies that the\n\t// structure has changed significantly and it's not worth a diff.\n\tif (xType !== yType)\n\t{\n\t\tif (xType === 1 && yType === 2)\n\t\t{\n\t\t\ty = _VirtualDom_dekey(y);\n\t\t\tyType = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// Now we know that both nodes are the same $.\n\tswitch (yType)\n\t{\n\t\tcase 5:\n\t\t\tvar xRefs = x.l;\n\t\t\tvar yRefs = y.l;\n\t\t\tvar i = xRefs.length;\n\t\t\tvar same = i === yRefs.length;\n\t\t\twhile (same && i--)\n\t\t\t{\n\t\t\t\tsame = xRefs[i] === yRefs[i];\n\t\t\t}\n\t\t\tif (same)\n\t\t\t{\n\t\t\t\ty.k = x.k;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ty.k = y.m();\n\t\t\tvar subPatches = [];\n\t\t\t_VirtualDom_diffHelp(x.k, y.k, subPatches, 0);\n\t\t\tsubPatches.length > 0 && _VirtualDom_pushPatch(patches, 1, index, subPatches);\n\t\t\treturn;\n\n\t\tcase 4:\n\t\t\t// gather nested taggers\n\t\t\tvar xTaggers = x.j;\n\t\t\tvar yTaggers = y.j;\n\t\t\tvar nesting = false;\n\n\t\t\tvar xSubNode = x.k;\n\t\t\twhile (xSubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof xTaggers !== 'object'\n\t\t\t\t\t? xTaggers = [xTaggers, xSubNode.j]\n\t\t\t\t\t: xTaggers.push(xSubNode.j);\n\n\t\t\t\txSubNode = xSubNode.k;\n\t\t\t}\n\n\t\t\tvar ySubNode = y.k;\n\t\t\twhile (ySubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof yTaggers !== 'object'\n\t\t\t\t\t? yTaggers = [yTaggers, ySubNode.j]\n\t\t\t\t\t: yTaggers.push(ySubNode.j);\n\n\t\t\t\tySubNode = ySubNode.k;\n\t\t\t}\n\n\t\t\t// Just bail if different numbers of taggers. This implies the\n\t\t\t// structure of the virtual DOM has changed.\n\t\t\tif (nesting && xTaggers.length !== yTaggers.length)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// check if taggers are \"the same\"\n\t\t\tif (nesting ? !_VirtualDom_pairwiseRefEqual(xTaggers, yTaggers) : xTaggers !== yTaggers)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 2, index, yTaggers);\n\t\t\t}\n\n\t\t\t// diff everything below the taggers\n\t\t\t_VirtualDom_diffHelp(xSubNode, ySubNode, patches, index + 1);\n\t\t\treturn;\n\n\t\tcase 0:\n\t\t\tif (x.a !== y.a)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 3, index, y.a);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 1:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKids);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKeyedKids);\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\tif (x.h !== y.h)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\t\t\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\t\t\tvar patch = y.i(x.g, y.g);\n\t\t\tpatch && _VirtualDom_pushPatch(patches, 5, index, patch);\n\n\t\t\treturn;\n\t}\n}\n\n// assumes the incoming arrays are the same length\nfunction _VirtualDom_pairwiseRefEqual(as, bs)\n{\n\tfor (var i = 0; i < as.length; i++)\n\t{\n\t\tif (as[i] !== bs[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction _VirtualDom_diffNodes(x, y, patches, index, diffKids)\n{\n\t// Bail if obvious indicators have changed. Implies more serious\n\t// structural changes such that it's not worth it to diff.\n\tif (x.c !== y.c || x.f !== y.f)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\treturn;\n\t}\n\n\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\tdiffKids(x, y, patches, index);\n}\n\n\n\n// DIFF FACTS\n\n\n// TODO Instead of creating a new diff object, it's possible to just test if\n// there *is* a diff. During the actual patch, do the diff again and make the\n// modifications directly. This way, there's no new allocations. Worth it?\nfunction _VirtualDom_diffFacts(x, y, category)\n{\n\tvar diff;\n\n\t// look for changes and removals\n\tfor (var xKey in x)\n\t{\n\t\tif (xKey === 'a1' || xKey === 'a0' || xKey === 'a3' || xKey === 'a4')\n\t\t{\n\t\t\tvar subDiff = _VirtualDom_diffFacts(x[xKey], y[xKey] || {}, xKey);\n\t\t\tif (subDiff)\n\t\t\t{\n\t\t\t\tdiff = diff || {};\n\t\t\t\tdiff[xKey] = subDiff;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove if not in the new facts\n\t\tif (!(xKey in y))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[xKey] =\n\t\t\t\t!category\n\t\t\t\t\t? (typeof x[xKey] === 'string' ? '' : null)\n\t\t\t\t\t:\n\t\t\t\t(category === 'a1')\n\t\t\t\t\t? ''\n\t\t\t\t\t:\n\t\t\t\t(category === 'a0' || category === 'a3')\n\t\t\t\t\t? undefined\n\t\t\t\t\t:\n\t\t\t\t{ f: x[xKey].f, o: undefined };\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar xValue = x[xKey];\n\t\tvar yValue = y[xKey];\n\n\t\t// reference equal, so don't worry about it\n\t\tif (xValue === yValue && xKey !== 'value' && xKey !== 'checked'\n\t\t\t|| category === 'a0' && _VirtualDom_equalEvents(xValue, yValue))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\tdiff = diff || {};\n\t\tdiff[xKey] = yValue;\n\t}\n\n\t// add new stuff\n\tfor (var yKey in y)\n\t{\n\t\tif (!(yKey in x))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[yKey] = y[yKey];\n\t\t}\n\t}\n\n\treturn diff;\n}\n\n\n\n// DIFF KIDS\n\n\nfunction _VirtualDom_diffKids(xParent, yParent, patches, index)\n{\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\n\t// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS\n\n\tif (xLen > yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 6, index, {\n\t\t\tv: yLen,\n\t\t\ti: xLen - yLen\n\t\t});\n\t}\n\telse if (xLen < yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 7, index, {\n\t\t\tv: xLen,\n\t\t\te: yKids\n\t\t});\n\t}\n\n\t// PAIRWISE DIFF EVERYTHING ELSE\n\n\tfor (var minLen = xLen < yLen ? xLen : yLen, i = 0; i < minLen; i++)\n\t{\n\t\tvar xKid = xKids[i];\n\t\t_VirtualDom_diffHelp(xKid, yKids[i], patches, ++index);\n\t\tindex += xKid.b || 0;\n\t}\n}\n\n\n\n// KEYED DIFF\n\n\nfunction _VirtualDom_diffKeyedKids(xParent, yParent, patches, rootIndex)\n{\n\tvar localPatches = [];\n\n\tvar changes = {}; // Dict String Entry\n\tvar inserts = []; // Array { index : Int, entry : Entry }\n\t// type Entry = { tag : String, vnode : VNode, index : Int, data : _ }\n\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\tvar xIndex = 0;\n\tvar yIndex = 0;\n\n\tvar index = rootIndex;\n\n\twhile (xIndex < xLen && yIndex < yLen)\n\t{\n\t\tvar x = xKids[xIndex];\n\t\tvar y = yKids[yIndex];\n\n\t\tvar xKey = x.a;\n\t\tvar yKey = y.a;\n\t\tvar xNode = x.b;\n\t\tvar yNode = y.b;\n\n\t\tvar newMatch = undefined;\n\t\tvar oldMatch = undefined;\n\n\t\t// check if keys match\n\n\t\tif (xKey === yKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex++;\n\t\t\tyIndex++;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// look ahead 1 to detect insertions and removals.\n\n\t\tvar xNext = xKids[xIndex + 1];\n\t\tvar yNext = yKids[yIndex + 1];\n\n\t\tif (xNext)\n\t\t{\n\t\t\tvar xNextKey = xNext.a;\n\t\t\tvar xNextNode = xNext.b;\n\t\t\toldMatch = yKey === xNextKey;\n\t\t}\n\n\t\tif (yNext)\n\t\t{\n\t\t\tvar yNextKey = yNext.a;\n\t\t\tvar yNextNode = yNext.b;\n\t\t\tnewMatch = xKey === yNextKey;\n\t\t}\n\n\n\t\t// swap x and y\n\t\tif (newMatch && oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, xKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNextNode, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// insert y\n\t\tif (newMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex += 1;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x\n\t\tif (oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 1;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x, insert y\n\t\tif (xNext && xNextKey === yNextKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNextNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n\n\t// eat up any remaining nodes with removeNode and insertNode\n\n\twhile (xIndex < xLen)\n\t{\n\t\tindex++;\n\t\tvar x = xKids[xIndex];\n\t\tvar xNode = x.b;\n\t\t_VirtualDom_removeNode(changes, localPatches, x.a, xNode, index);\n\t\tindex += xNode.b || 0;\n\t\txIndex++;\n\t}\n\n\twhile (yIndex < yLen)\n\t{\n\t\tvar endInserts = endInserts || [];\n\t\tvar y = yKids[yIndex];\n\t\t_VirtualDom_insertNode(changes, localPatches, y.a, y.b, undefined, endInserts);\n\t\tyIndex++;\n\t}\n\n\tif (localPatches.length > 0 || inserts.length > 0 || endInserts)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 8, rootIndex, {\n\t\t\tw: localPatches,\n\t\t\tx: inserts,\n\t\t\ty: endInserts\n\t\t});\n\t}\n}\n\n\n\n// CHANGES FROM KEYED DIFF\n\n\nvar _VirtualDom_POSTFIX = '_elmW6BL';\n\n\nfunction _VirtualDom_insertNode(changes, localPatches, key, vnode, yIndex, inserts)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tentry = {\n\t\t\tc: 0,\n\t\t\tz: vnode,\n\t\t\tr: yIndex,\n\t\t\ts: undefined\n\t\t};\n\n\t\tinserts.push({ r: yIndex, A: entry });\n\t\tchanges[key] = entry;\n\n\t\treturn;\n\t}\n\n\t// this key was removed earlier, a match!\n\tif (entry.c === 1)\n\t{\n\t\tinserts.push({ r: yIndex, A: entry });\n\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(entry.z, vnode, subPatches, entry.r);\n\t\tentry.r = yIndex;\n\t\tentry.s.s = {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key has already been inserted or moved, a duplicate!\n\t_VirtualDom_insertNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, yIndex, inserts);\n}\n\n\nfunction _VirtualDom_removeNode(changes, localPatches, key, vnode, index)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tvar patch = _VirtualDom_pushPatch(localPatches, 9, index, undefined);\n\n\t\tchanges[key] = {\n\t\t\tc: 1,\n\t\t\tz: vnode,\n\t\t\tr: index,\n\t\t\ts: patch\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key was inserted earlier, a match!\n\tif (entry.c === 0)\n\t{\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(vnode, entry.z, subPatches, index);\n\n\t\t_VirtualDom_pushPatch(localPatches, 9, index, {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t});\n\n\t\treturn;\n\t}\n\n\t// this key has already been removed or moved, a duplicate!\n\t_VirtualDom_removeNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, index);\n}\n\n\n\n// ADD DOM NODES\n//\n// Each DOM node has an \"index\" assigned in order of traversal. It is important\n// to minimize our crawl over the actual DOM, so these indexes (along with the\n// descendantsCount of virtual nodes) let us skip touching entire subtrees of\n// the DOM if we know there are no patches there.\n\n\nfunction _VirtualDom_addDomNodes(domNode, vNode, patches, eventNode)\n{\n\t_VirtualDom_addDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.b, eventNode);\n}\n\n\n// assumes `patches` is non-empty and indexes increase monotonically.\nfunction _VirtualDom_addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)\n{\n\tvar patch = patches[i];\n\tvar index = patch.r;\n\n\twhile (index === low)\n\t{\n\t\tvar patchType = patch.$;\n\n\t\tif (patchType === 1)\n\t\t{\n\t\t\t_VirtualDom_addDomNodes(domNode, vNode.k, patch.s, eventNode);\n\t\t}\n\t\telse if (patchType === 8)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar subPatches = patch.s.w;\n\t\t\tif (subPatches.length > 0)\n\t\t\t{\n\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t}\n\t\t}\n\t\telse if (patchType === 9)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar data = patch.s;\n\t\t\tif (data)\n\t\t\t{\n\t\t\t\tdata.A.s = domNode;\n\t\t\t\tvar subPatches = data.w;\n\t\t\t\tif (subPatches.length > 0)\n\t\t\t\t{\n\t\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\t\t}\n\n\t\ti++;\n\n\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n\n\tvar tag = vNode.$;\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\treturn _VirtualDom_addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);\n\t}\n\n\t// tag must be 1 or 2 at this point\n\n\tvar vKids = vNode.e;\n\tvar childNodes = domNode.childNodes;\n\tfor (var j = 0; j < vKids.length; j++)\n\t{\n\t\tlow++;\n\t\tvar vKid = tag === 1 ? vKids[j] : vKids[j].b;\n\t\tvar nextLow = low + (vKid.b || 0);\n\t\tif (low <= index && index <= nextLow)\n\t\t{\n\t\t\ti = _VirtualDom_addDomNodesHelp(childNodes[j], vKid, patches, i, low, nextLow, eventNode);\n\t\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\tlow = nextLow;\n\t}\n\treturn i;\n}\n\n\n\n// APPLY PATCHES\n\n\nfunction _VirtualDom_applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)\n{\n\tif (patches.length === 0)\n\t{\n\t\treturn rootDomNode;\n\t}\n\n\t_VirtualDom_addDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);\n\treturn _VirtualDom_applyPatchesHelp(rootDomNode, patches);\n}\n\nfunction _VirtualDom_applyPatchesHelp(rootDomNode, patches)\n{\n\tfor (var i = 0; i < patches.length; i++)\n\t{\n\t\tvar patch = patches[i];\n\t\tvar localDomNode = patch.t\n\t\tvar newNode = _VirtualDom_applyPatch(localDomNode, patch);\n\t\tif (localDomNode === rootDomNode)\n\t\t{\n\t\t\trootDomNode = newNode;\n\t\t}\n\t}\n\treturn rootDomNode;\n}\n\nfunction _VirtualDom_applyPatch(domNode, patch)\n{\n\tswitch (patch.$)\n\t{\n\t\tcase 0:\n\t\t\treturn _VirtualDom_applyPatchRedraw(domNode, patch.s, patch.u);\n\n\t\tcase 4:\n\t\t\t_VirtualDom_applyFacts(domNode, patch.u, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 3:\n\t\t\tdomNode.replaceData(0, domNode.length, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 1:\n\t\t\treturn _VirtualDom_applyPatchesHelp(domNode, patch.s);\n\n\t\tcase 2:\n\t\t\tif (domNode.elm_event_node_ref)\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref.j = patch.s;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref = { j: patch.s, p: patch.u };\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 6:\n\t\t\tvar data = patch.s;\n\t\t\tfor (var i = 0; i < data.i; i++)\n\t\t\t{\n\t\t\t\tdomNode.removeChild(domNode.childNodes[data.v]);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 7:\n\t\t\tvar data = patch.s;\n\t\t\tvar kids = data.e;\n\t\t\tvar i = data.v;\n\t\t\tvar theEnd = domNode.childNodes[i];\n\t\t\tfor (; i < kids.length; i++)\n\t\t\t{\n\t\t\t\tdomNode.insertBefore(_VirtualDom_render(kids[i], patch.u), theEnd);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 9:\n\t\t\tvar data = patch.s;\n\t\t\tif (!data)\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t\treturn domNode;\n\t\t\t}\n\t\t\tvar entry = data.A;\n\t\t\tif (typeof entry.r !== 'undefined')\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t}\n\t\t\tentry.s = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\t\t\treturn domNode;\n\n\t\tcase 8:\n\t\t\treturn _VirtualDom_applyPatchReorder(domNode, patch);\n\n\t\tcase 5:\n\t\t\treturn patch.s(domNode);\n\n\t\tdefault:\n\t\t\t_Debug_crash(10); // 'Ran into an unknown patch!'\n\t}\n}\n\n\nfunction _VirtualDom_applyPatchRedraw(domNode, vNode, eventNode)\n{\n\tvar parentNode = domNode.parentNode;\n\tvar newNode = _VirtualDom_render(vNode, eventNode);\n\n\tif (!newNode.elm_event_node_ref)\n\t{\n\t\tnewNode.elm_event_node_ref = domNode.elm_event_node_ref;\n\t}\n\n\tif (parentNode && newNode !== domNode)\n\t{\n\t\tparentNode.replaceChild(newNode, domNode);\n\t}\n\treturn newNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorder(domNode, patch)\n{\n\tvar data = patch.s;\n\n\t// remove end inserts\n\tvar frag = _VirtualDom_applyPatchReorderEndInsertsHelp(data.y, patch);\n\n\t// removals\n\tdomNode = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\n\t// inserts\n\tvar inserts = data.x;\n\tfor (var i = 0; i < inserts.length; i++)\n\t{\n\t\tvar insert = inserts[i];\n\t\tvar entry = insert.A;\n\t\tvar node = entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u);\n\t\tdomNode.insertBefore(node, domNode.childNodes[insert.r]);\n\t}\n\n\t// add end inserts\n\tif (frag)\n\t{\n\t\t_VirtualDom_appendChild(domNode, frag);\n\t}\n\n\treturn domNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorderEndInsertsHelp(endInserts, patch)\n{\n\tif (!endInserts)\n\t{\n\t\treturn;\n\t}\n\n\tvar frag = _VirtualDom_doc.createDocumentFragment();\n\tfor (var i = 0; i < endInserts.length; i++)\n\t{\n\t\tvar insert = endInserts[i];\n\t\tvar entry = insert.A;\n\t\t_VirtualDom_appendChild(frag, entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u)\n\t\t);\n\t}\n\treturn frag;\n}\n\n\nfunction _VirtualDom_virtualize(node)\n{\n\t// TEXT NODES\n\n\tif (node.nodeType === 3)\n\t{\n\t\treturn _VirtualDom_text(node.textContent);\n\t}\n\n\n\t// WEIRD NODES\n\n\tif (node.nodeType !== 1)\n\t{\n\t\treturn _VirtualDom_text('');\n\t}\n\n\n\t// ELEMENT NODES\n\n\tvar attrList = _List_Nil;\n\tvar attrs = node.attributes;\n\tfor (var i = attrs.length; i--; )\n\t{\n\t\tvar attr = attrs[i];\n\t\tvar name = attr.name;\n\t\tvar value = attr.value;\n\t\tattrList = _List_Cons( A2(_VirtualDom_attribute, name, value), attrList );\n\t}\n\n\tvar tag = node.tagName.toLowerCase();\n\tvar kidList = _List_Nil;\n\tvar kids = node.childNodes;\n\n\tfor (var i = kids.length; i--; )\n\t{\n\t\tkidList = _List_Cons(_VirtualDom_virtualize(kids[i]), kidList);\n\t}\n\treturn A3(_VirtualDom_node, tag, attrList, kidList);\n}\n\nfunction _VirtualDom_dekey(keyedNode)\n{\n\tvar keyedKids = keyedNode.e;\n\tvar len = keyedKids.length;\n\tvar kids = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tkids[i] = keyedKids[i].b;\n\t}\n\n\treturn {\n\t\t$: 1,\n\t\tc: keyedNode.c,\n\t\td: keyedNode.d,\n\t\te: kids,\n\t\tf: keyedNode.f,\n\t\tb: keyedNode.b\n\t};\n}\n\n\n\n\n// ELEMENT\n\n\nvar _Debugger_element;\n\nvar _Browser_element = _Debugger_element || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.aO,\n\t\timpl.aZ,\n\t\timpl.aX,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar view = impl.a$;\n\t\t\t/**/\n\t\t\tvar domNode = args['node'];\n\t\t\t//*/\n\t\t\t/**_UNUSED/\n\t\t\tvar domNode = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t\t\t//*/\n\t\t\tvar currNode = _VirtualDom_virtualize(domNode);\n\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\tvar nextNode = view(model);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tdomNode = _VirtualDom_applyPatches(domNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// DOCUMENT\n\n\nvar _Debugger_document;\n\nvar _Browser_document = _Debugger_document || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.aO,\n\t\timpl.aZ,\n\t\timpl.aX,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar divertHrefToApp = impl.M && impl.M(sendToApp)\n\t\t\tvar view = impl.a$;\n\t\t\tvar title = _VirtualDom_doc.title;\n\t\t\tvar bodyNode = _VirtualDom_doc.body;\n\t\t\tvar currNode = _VirtualDom_virtualize(bodyNode);\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\t_VirtualDom_divertHrefToApp = divertHrefToApp;\n\t\t\t\tvar doc = view(model);\n\t\t\t\tvar nextNode = _VirtualDom_node('body')(_List_Nil)(doc.aE);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tbodyNode = _VirtualDom_applyPatches(bodyNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t\t_VirtualDom_divertHrefToApp = 0;\n\t\t\t\t(title !== doc.aY) && (_VirtualDom_doc.title = title = doc.aY);\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// ANIMATION\n\n\nvar _Browser_cancelAnimationFrame =\n\ttypeof cancelAnimationFrame !== 'undefined'\n\t\t? cancelAnimationFrame\n\t\t: function(id) { clearTimeout(id); };\n\nvar _Browser_requestAnimationFrame =\n\ttypeof requestAnimationFrame !== 'undefined'\n\t\t? requestAnimationFrame\n\t\t: function(callback) { return setTimeout(callback, 1000 / 60); };\n\n\nfunction _Browser_makeAnimator(model, draw)\n{\n\tdraw(model);\n\n\tvar state = 0;\n\n\tfunction updateIfNeeded()\n\t{\n\t\tstate = state === 1\n\t\t\t? 0\n\t\t\t: ( _Browser_requestAnimationFrame(updateIfNeeded), draw(model), 1 );\n\t}\n\n\treturn function(nextModel, isSync)\n\t{\n\t\tmodel = nextModel;\n\n\t\tisSync\n\t\t\t? ( draw(model),\n\t\t\t\tstate === 2 && (state = 1)\n\t\t\t\t)\n\t\t\t: ( state === 0 && _Browser_requestAnimationFrame(updateIfNeeded),\n\t\t\t\tstate = 2\n\t\t\t\t);\n\t};\n}\n\n\n\n// APPLICATION\n\n\nfunction _Browser_application(impl)\n{\n\tvar onUrlChange = impl.aR;\n\tvar onUrlRequest = impl.aS;\n\tvar key = function() { key.a(onUrlChange(_Browser_getUrl())); };\n\n\treturn _Browser_document({\n\t\tM: function(sendToApp)\n\t\t{\n\t\t\tkey.a = sendToApp;\n\t\t\t_Browser_window.addEventListener('popstate', key);\n\t\t\t_Browser_window.navigator.userAgent.indexOf('Trident') < 0 || _Browser_window.addEventListener('hashchange', key);\n\n\t\t\treturn F2(function(domNode, event)\n\t\t\t{\n\t\t\t\tif (!event.ctrlKey && !event.metaKey && !event.shiftKey && event.button < 1 && !domNode.target && !domNode.hasAttribute('download'))\n\t\t\t\t{\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tvar href = domNode.href;\n\t\t\t\t\tvar curr = _Browser_getUrl();\n\t\t\t\t\tvar next = elm$url$Url$fromString(href).a;\n\t\t\t\t\tsendToApp(onUrlRequest(\n\t\t\t\t\t\t(next\n\t\t\t\t\t\t\t&& curr.ar === next.ar\n\t\t\t\t\t\t\t&& curr.ah === next.ah\n\t\t\t\t\t\t\t&& curr.ao.a === next.ao.a\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t? elm$browser$Browser$Internal(next)\n\t\t\t\t\t\t\t: elm$browser$Browser$External(href)\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\taO: function(flags)\n\t\t{\n\t\t\treturn A3(impl.aO, flags, _Browser_getUrl(), key);\n\t\t},\n\t\ta$: impl.a$,\n\t\taZ: impl.aZ,\n\t\taX: impl.aX\n\t});\n}\n\nfunction _Browser_getUrl()\n{\n\treturn elm$url$Url$fromString(_VirtualDom_doc.location.href).a || _Debug_crash(1);\n}\n\nvar _Browser_go = F2(function(key, n)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\tn && history.go(n);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_pushUrl = F2(function(key, url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.pushState({}, '', url);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_replaceUrl = F2(function(key, url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.replaceState({}, '', url);\n\t\tkey();\n\t}));\n});\n\n\n\n// GLOBAL EVENTS\n\n\nvar _Browser_fakeNode = { addEventListener: function() {}, removeEventListener: function() {} };\nvar _Browser_doc = typeof document !== 'undefined' ? document : _Browser_fakeNode;\nvar _Browser_window = typeof window !== 'undefined' ? window : _Browser_fakeNode;\n\nvar _Browser_on = F3(function(node, eventName, sendToSelf)\n{\n\treturn _Scheduler_spawn(_Scheduler_binding(function(callback)\n\t{\n\t\tfunction handler(event)\t{ _Scheduler_rawSpawn(sendToSelf(event)); }\n\t\tnode.addEventListener(eventName, handler, _VirtualDom_passiveSupported && { passive: true });\n\t\treturn function() { node.removeEventListener(eventName, handler); };\n\t}));\n});\n\nvar _Browser_decodeEvent = F2(function(decoder, event)\n{\n\tvar result = _Json_runHelp(decoder, event);\n\treturn elm$core$Result$isOk(result) ? elm$core$Maybe$Just(result.a) : elm$core$Maybe$Nothing;\n});\n\n\n\n// PAGE VISIBILITY\n\n\nfunction _Browser_visibilityInfo()\n{\n\treturn (typeof _VirtualDom_doc.hidden !== 'undefined')\n\t\t? { aL: 'hidden', aF: 'visibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.mozHidden !== 'undefined')\n\t\t? { aL: 'mozHidden', aF: 'mozvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.msHidden !== 'undefined')\n\t\t? { aL: 'msHidden', aF: 'msvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.webkitHidden !== 'undefined')\n\t\t? { aL: 'webkitHidden', aF: 'webkitvisibilitychange' }\n\t\t: { aL: 'hidden', aF: 'visibilitychange' };\n}\n\n\n\n// ANIMATION FRAMES\n\n\nfunction _Browser_rAF()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tvar id = _Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(Date.now()));\n\t\t});\n\n\t\treturn function() {\n\t\t\t_Browser_cancelAnimationFrame(id);\n\t\t};\n\t});\n}\n\n\nfunction _Browser_now()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(Date.now()));\n\t});\n}\n\n\n\n// DOM STUFF\n\n\nfunction _Browser_withNode(id, doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tvar node = document.getElementById(id);\n\t\t\tcallback(node\n\t\t\t\t? _Scheduler_succeed(doStuff(node))\n\t\t\t\t: _Scheduler_fail(elm$browser$Browser$Dom$NotFound(id))\n\t\t\t);\n\t\t});\n\t});\n}\n\n\nfunction _Browser_withWindow(doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(doStuff()));\n\t\t});\n\t});\n}\n\n\n// FOCUS and BLUR\n\n\nvar _Browser_call = F2(function(functionName, id)\n{\n\treturn _Browser_withNode(id, function(node) {\n\t\tnode[functionName]();\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// WINDOW VIEWPORT\n\n\nfunction _Browser_getViewport()\n{\n\treturn {\n\t\taw: _Browser_getScene(),\n\t\taz: {\n\t\t\tU: _Browser_window.pageXOffset,\n\t\t\tV: _Browser_window.pageYOffset,\n\t\t\tG: _Browser_doc.documentElement.clientWidth,\n\t\t\tB: _Browser_doc.documentElement.clientHeight\n\t\t}\n\t};\n}\n\nfunction _Browser_getScene()\n{\n\tvar body = _Browser_doc.body;\n\tvar elem = _Browser_doc.documentElement;\n\treturn {\n\t\tG: Math.max(body.scrollWidth, body.offsetWidth, elem.scrollWidth, elem.offsetWidth, elem.clientWidth),\n\t\tB: Math.max(body.scrollHeight, body.offsetHeight, elem.scrollHeight, elem.offsetHeight, elem.clientHeight)\n\t};\n}\n\nvar _Browser_setViewport = F2(function(x, y)\n{\n\treturn _Browser_withWindow(function()\n\t{\n\t\t_Browser_window.scroll(x, y);\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT VIEWPORT\n\n\nfunction _Browser_getViewportOf(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\treturn {\n\t\t\taw: {\n\t\t\t\tG: node.scrollWidth,\n\t\t\t\tB: node.scrollHeight\n\t\t\t},\n\t\t\taz: {\n\t\t\t\tU: node.scrollLeft,\n\t\t\t\tV: node.scrollTop,\n\t\t\t\tG: node.clientWidth,\n\t\t\t\tB: node.clientHeight\n\t\t\t}\n\t\t};\n\t});\n}\n\n\nvar _Browser_setViewportOf = F3(function(id, x, y)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tnode.scrollLeft = x;\n\t\tnode.scrollTop = y;\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT\n\n\nfunction _Browser_getElement(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tvar rect = node.getBoundingClientRect();\n\t\tvar x = _Browser_window.pageXOffset;\n\t\tvar y = _Browser_window.pageYOffset;\n\t\treturn {\n\t\t\taw: _Browser_getScene(),\n\t\t\taz: {\n\t\t\t\tU: x,\n\t\t\t\tV: y,\n\t\t\t\tG: _Browser_doc.documentElement.clientWidth,\n\t\t\t\tB: _Browser_doc.documentElement.clientHeight\n\t\t\t},\n\t\t\taG: {\n\t\t\t\tU: x + rect.left,\n\t\t\t\tV: y + rect.top,\n\t\t\t\tG: rect.width,\n\t\t\t\tB: rect.height\n\t\t\t}\n\t\t};\n\t});\n}\n\n\n\n// LOAD and RELOAD\n\n\nfunction _Browser_reload(skipCache)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\t_VirtualDom_doc.location.reload(skipCache);\n\t}));\n}\n\nfunction _Browser_load(url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\ttry\n\t\t{\n\t\t\t_Browser_window.location = url;\n\t\t}\n\t\tcatch(err)\n\t\t{\n\t\t\t// Only Firefox can throw a NS_ERROR_MALFORMED_URI exception here.\n\t\t\t// Other browsers reload the page, so let's be consistent about that.\n\t\t\t_VirtualDom_doc.location.reload(false);\n\t\t}\n\t}));\n}\nvar author$project$Main$Paused = 1;\nvar Kraxorax$elm_matrix_a$Matrix$Matrix = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$core$Array$branchFactor = 32;\nvar elm$core$Array$Array_elm_builtin = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 0, a: a, b: b, c: c, d: d};\n\t});\nvar elm$core$Basics$EQ = 1;\nvar elm$core$Basics$GT = 2;\nvar elm$core$Basics$LT = 0;\nvar elm$core$Dict$foldr = F3(\n\tfunction (func, acc, t) {\n\t\tfoldr:\n\t\twhile (true) {\n\t\t\tif (t.$ === -2) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = t.b;\n\t\t\t\tvar value = t.c;\n\t\t\t\tvar left = t.d;\n\t\t\t\tvar right = t.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3(elm$core$Dict$foldr, func, acc, right)),\n\t\t\t\t\t$temp$t = left;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tt = $temp$t;\n\t\t\t\tcontinue foldr;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$cons = _List_cons;\nvar elm$core$Dict$toList = function (dict) {\n\treturn A3(\n\t\telm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, list) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t_Utils_Tuple2(key, value),\n\t\t\t\t\tlist);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar elm$core$Dict$keys = function (dict) {\n\treturn A3(\n\t\telm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, keyList) {\n\t\t\t\treturn A2(elm$core$List$cons, key, keyList);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar elm$core$Set$toList = function (_n0) {\n\tvar dict = _n0;\n\treturn elm$core$Dict$keys(dict);\n};\nvar elm$core$Elm$JsArray$foldr = _JsArray_foldr;\nvar elm$core$Array$foldr = F3(\n\tfunction (func, baseCase, _n0) {\n\t\tvar tree = _n0.c;\n\t\tvar tail = _n0.d;\n\t\tvar helper = F2(\n\t\t\tfunction (node, acc) {\n\t\t\t\tif (!node.$) {\n\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldr, helper, acc, subTree);\n\t\t\t\t} else {\n\t\t\t\t\tvar values = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldr, func, acc, values);\n\t\t\t\t}\n\t\t\t});\n\t\treturn A3(\n\t\t\telm$core$Elm$JsArray$foldr,\n\t\t\thelper,\n\t\t\tA3(elm$core$Elm$JsArray$foldr, func, baseCase, tail),\n\t\t\ttree);\n\t});\nvar elm$core$Array$toList = function (array) {\n\treturn A3(elm$core$Array$foldr, elm$core$List$cons, _List_Nil, array);\n};\nvar elm$core$Basics$ceiling = _Basics_ceiling;\nvar elm$core$Basics$fdiv = _Basics_fdiv;\nvar elm$core$Basics$logBase = F2(\n\tfunction (base, number) {\n\t\treturn _Basics_log(number) / _Basics_log(base);\n\t});\nvar elm$core$Basics$toFloat = _Basics_toFloat;\nvar elm$core$Array$shiftStep = elm$core$Basics$ceiling(\n\tA2(elm$core$Basics$logBase, 2, elm$core$Array$branchFactor));\nvar elm$core$Elm$JsArray$empty = _JsArray_empty;\nvar elm$core$Array$empty = A4(elm$core$Array$Array_elm_builtin, 0, elm$core$Array$shiftStep, elm$core$Elm$JsArray$empty, elm$core$Elm$JsArray$empty);\nvar elm$core$Array$Leaf = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$core$Array$SubTree = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$core$Elm$JsArray$initializeFromList = _JsArray_initializeFromList;\nvar elm$core$List$foldl = F3(\n\tfunction (func, acc, list) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A2(func, x, acc),\n\t\t\t\t\t$temp$list = xs;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$reverse = function (list) {\n\treturn A3(elm$core$List$foldl, elm$core$List$cons, _List_Nil, list);\n};\nvar elm$core$Array$compressNodes = F2(\n\tfunction (nodes, acc) {\n\t\tcompressNodes:\n\t\twhile (true) {\n\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, nodes);\n\t\t\tvar node = _n0.a;\n\t\t\tvar remainingNodes = _n0.b;\n\t\t\tvar newAcc = A2(\n\t\t\t\telm$core$List$cons,\n\t\t\t\telm$core$Array$SubTree(node),\n\t\t\t\tacc);\n\t\t\tif (!remainingNodes.b) {\n\t\t\t\treturn elm$core$List$reverse(newAcc);\n\t\t\t} else {\n\t\t\t\tvar $temp$nodes = remainingNodes,\n\t\t\t\t\t$temp$acc = newAcc;\n\t\t\t\tnodes = $temp$nodes;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tcontinue compressNodes;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$apR = F2(\n\tfunction (x, f) {\n\t\treturn f(x);\n\t});\nvar elm$core$Basics$eq = _Utils_equal;\nvar elm$core$Tuple$first = function (_n0) {\n\tvar x = _n0.a;\n\treturn x;\n};\nvar elm$core$Array$treeFromBuilder = F2(\n\tfunction (nodeList, nodeListSize) {\n\t\ttreeFromBuilder:\n\t\twhile (true) {\n\t\t\tvar newNodeSize = elm$core$Basics$ceiling(nodeListSize / elm$core$Array$branchFactor);\n\t\t\tif (newNodeSize === 1) {\n\t\t\t\treturn A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, nodeList).a;\n\t\t\t} else {\n\t\t\t\tvar $temp$nodeList = A2(elm$core$Array$compressNodes, nodeList, _List_Nil),\n\t\t\t\t\t$temp$nodeListSize = newNodeSize;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\tnodeListSize = $temp$nodeListSize;\n\t\t\t\tcontinue treeFromBuilder;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$add = _Basics_add;\nvar elm$core$Basics$apL = F2(\n\tfunction (f, x) {\n\t\treturn f(x);\n\t});\nvar elm$core$Basics$floor = _Basics_floor;\nvar elm$core$Basics$gt = _Utils_gt;\nvar elm$core$Basics$max = F2(\n\tfunction (x, y) {\n\t\treturn (_Utils_cmp(x, y) > 0) ? x : y;\n\t});\nvar elm$core$Basics$mul = _Basics_mul;\nvar elm$core$Basics$sub = _Basics_sub;\nvar elm$core$Elm$JsArray$length = _JsArray_length;\nvar elm$core$Array$builderToArray = F2(\n\tfunction (reverseNodeList, builder) {\n\t\tif (!builder.a) {\n\t\t\treturn A4(\n\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\telm$core$Elm$JsArray$length(builder.c),\n\t\t\t\telm$core$Array$shiftStep,\n\t\t\t\telm$core$Elm$JsArray$empty,\n\t\t\t\tbuilder.c);\n\t\t} else {\n\t\t\tvar treeLen = builder.a * elm$core$Array$branchFactor;\n\t\t\tvar depth = elm$core$Basics$floor(\n\t\t\t\tA2(elm$core$Basics$logBase, elm$core$Array$branchFactor, treeLen - 1));\n\t\t\tvar correctNodeList = reverseNodeList ? elm$core$List$reverse(builder.d) : builder.d;\n\t\t\tvar tree = A2(elm$core$Array$treeFromBuilder, correctNodeList, builder.a);\n\t\t\treturn A4(\n\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\telm$core$Elm$JsArray$length(builder.c) + treeLen,\n\t\t\t\tA2(elm$core$Basics$max, 5, depth * elm$core$Array$shiftStep),\n\t\t\t\ttree,\n\t\t\t\tbuilder.c);\n\t\t}\n\t});\nvar elm$core$Basics$False = 1;\nvar elm$core$Basics$idiv = _Basics_idiv;\nvar elm$core$Basics$lt = _Utils_lt;\nvar elm$core$Elm$JsArray$initialize = _JsArray_initialize;\nvar elm$core$Array$initializeHelp = F5(\n\tfunction (fn, fromIndex, len, nodeList, tail) {\n\t\tinitializeHelp:\n\t\twhile (true) {\n\t\t\tif (fromIndex < 0) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Array$builderToArray,\n\t\t\t\t\tfalse,\n\t\t\t\t\t{d: nodeList, a: (len / elm$core$Array$branchFactor) | 0, c: tail});\n\t\t\t} else {\n\t\t\t\tvar leaf = elm$core$Array$Leaf(\n\t\t\t\t\tA3(elm$core$Elm$JsArray$initialize, elm$core$Array$branchFactor, fromIndex, fn));\n\t\t\t\tvar $temp$fn = fn,\n\t\t\t\t\t$temp$fromIndex = fromIndex - elm$core$Array$branchFactor,\n\t\t\t\t\t$temp$len = len,\n\t\t\t\t\t$temp$nodeList = A2(elm$core$List$cons, leaf, nodeList),\n\t\t\t\t\t$temp$tail = tail;\n\t\t\t\tfn = $temp$fn;\n\t\t\t\tfromIndex = $temp$fromIndex;\n\t\t\t\tlen = $temp$len;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\ttail = $temp$tail;\n\t\t\t\tcontinue initializeHelp;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$le = _Utils_le;\nvar elm$core$Basics$remainderBy = _Basics_remainderBy;\nvar elm$core$Array$initialize = F2(\n\tfunction (len, fn) {\n\t\tif (len <= 0) {\n\t\t\treturn elm$core$Array$empty;\n\t\t} else {\n\t\t\tvar tailLen = len % elm$core$Array$branchFactor;\n\t\t\tvar tail = A3(elm$core$Elm$JsArray$initialize, tailLen, len - tailLen, fn);\n\t\t\tvar initialFromIndex = (len - tailLen) - elm$core$Array$branchFactor;\n\t\t\treturn A5(elm$core$Array$initializeHelp, fn, initialFromIndex, len, _List_Nil, tail);\n\t\t}\n\t});\nvar Kraxorax$elm_matrix_a$Matrix$generate = F3(\n\tfunction (w, h, f) {\n\t\treturn A2(\n\t\t\tKraxorax$elm_matrix_a$Matrix$Matrix,\n\t\t\tw,\n\t\t\tA2(\n\t\t\t\telm$core$Array$initialize,\n\t\t\t\th,\n\t\t\t\tfunction (y) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\telm$core$Array$initialize,\n\t\t\t\t\t\tw,\n\t\t\t\t\t\tfunction (x) {\n\t\t\t\t\t\t\treturn A2(f, x, y);\n\t\t\t\t\t\t});\n\t\t\t\t}));\n\t});\nvar elm$core$Basics$append = _Utils_append;\nvar elm$core$Maybe$Just = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$core$Maybe$Nothing = {$: 1};\nvar elm$core$String$fromInt = _String_fromNumber;\nvar author$project$MatrixUtils$cellId = F2(\n\tfunction (x, y) {\n\t\treturn elm$core$String$fromInt(x) + ('-' + elm$core$String$fromInt(y));\n\t});\nvar author$project$MatrixUtils$blinkers = _List_fromArray(\n\t[\n\t\t_List_fromArray(\n\t\t[19, 20]),\n\t\t_List_fromArray(\n\t\t[18, 21]),\n\t\t_List_fromArray(\n\t\t[19, 21]),\n\t\t_List_fromArray(\n\t\t[20, 21]),\n\t\t_List_fromArray(\n\t\t[19, 22])\n\t]);\nvar author$project$MatrixUtils$glider = _List_fromArray(\n\t[\n\t\t_List_fromArray(\n\t\t[18, 22]),\n\t\t_List_fromArray(\n\t\t[19, 22]),\n\t\t_List_fromArray(\n\t\t[20, 22]),\n\t\t_List_fromArray(\n\t\t[20, 21]),\n\t\t_List_fromArray(\n\t\t[19, 20])\n\t]);\nvar elm$core$Dict$RBEmpty_elm_builtin = {$: -2};\nvar elm$core$Dict$empty = elm$core$Dict$RBEmpty_elm_builtin;\nvar elm$core$Dict$Black = 1;\nvar elm$core$Dict$RBNode_elm_builtin = F5(\n\tfunction (a, b, c, d, e) {\n\t\treturn {$: -1, a: a, b: b, c: c, d: d, e: e};\n\t});\nvar elm$core$Basics$compare = _Utils_compare;\nvar elm$core$Dict$Red = 0;\nvar elm$core$Dict$balance = F5(\n\tfunction (color, key, value, left, right) {\n\t\tif ((right.$ === -1) && (!right.a)) {\n\t\t\tvar _n1 = right.a;\n\t\t\tvar rK = right.b;\n\t\t\tvar rV = right.c;\n\t\t\tvar rLeft = right.d;\n\t\t\tvar rRight = right.e;\n\t\t\tif ((left.$ === -1) && (!left.a)) {\n\t\t\t\tvar _n3 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar lLeft = left.d;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t0,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, rK, rV, rLeft, rRight));\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\tcolor,\n\t\t\t\t\trK,\n\t\t\t\t\trV,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, key, value, left, rLeft),\n\t\t\t\t\trRight);\n\t\t\t}\n\t\t} else {\n\t\t\tif ((((left.$ === -1) && (!left.a)) && (left.d.$ === -1)) && (!left.d.a)) {\n\t\t\t\tvar _n5 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar _n6 = left.d;\n\t\t\t\tvar _n7 = _n6.a;\n\t\t\t\tvar llK = _n6.b;\n\t\t\t\tvar llV = _n6.c;\n\t\t\t\tvar llLeft = _n6.d;\n\t\t\t\tvar llRight = _n6.e;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t0,\n\t\t\t\t\tlK,\n\t\t\t\t\tlV,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, llK, llV, llLeft, llRight),\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, key, value, lRight, right));\n\t\t\t} else {\n\t\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, color, key, value, left, right);\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$insertHelp = F3(\n\tfunction (key, value, dict) {\n\t\tif (dict.$ === -2) {\n\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, 0, key, value, elm$core$Dict$RBEmpty_elm_builtin, elm$core$Dict$RBEmpty_elm_builtin);\n\t\t} else {\n\t\t\tvar nColor = dict.a;\n\t\t\tvar nKey = dict.b;\n\t\t\tvar nValue = dict.c;\n\t\t\tvar nLeft = dict.d;\n\t\t\tvar nRight = dict.e;\n\t\t\tvar _n1 = A2(elm$core$Basics$compare, key, nKey);\n\t\t\tswitch (_n1) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\telm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tA3(elm$core$Dict$insertHelp, key, value, nLeft),\n\t\t\t\t\t\tnRight);\n\t\t\t\tcase 1:\n\t\t\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, nColor, nKey, value, nLeft, nRight);\n\t\t\t\tdefault:\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\telm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tnLeft,\n\t\t\t\t\t\tA3(elm$core$Dict$insertHelp, key, value, nRight));\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$insert = F3(\n\tfunction (key, value, dict) {\n\t\tvar _n0 = A3(elm$core$Dict$insertHelp, key, value, dict);\n\t\tif ((_n0.$ === -1) && (!_n0.a)) {\n\t\t\tvar _n1 = _n0.a;\n\t\t\tvar k = _n0.b;\n\t\t\tvar v = _n0.c;\n\t\t\tvar l = _n0.d;\n\t\t\tvar r = _n0.e;\n\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, 1, k, v, l, r);\n\t\t} else {\n\t\t\tvar x = _n0;\n\t\t\treturn x;\n\t\t}\n\t});\nvar elm$core$Dict$fromList = function (assocs) {\n\treturn A3(\n\t\telm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_n0, dict) {\n\t\t\t\tvar key = _n0.a;\n\t\t\t\tvar value = _n0.b;\n\t\t\t\treturn A3(elm$core$Dict$insert, key, value, dict);\n\t\t\t}),\n\t\telm$core$Dict$empty,\n\t\tassocs);\n};\nvar author$project$MatrixUtils$patterns = elm$core$Dict$fromList(\n\t_List_fromArray(\n\t\t[\n\t\t\t_Utils_Tuple2('glider', author$project$MatrixUtils$glider),\n\t\t\t_Utils_Tuple2('blinkers', author$project$MatrixUtils$blinkers)\n\t\t]));\nvar elm$core$Dict$get = F2(\n\tfunction (targetKey, dict) {\n\t\tget:\n\t\twhile (true) {\n\t\t\tif (dict.$ === -2) {\n\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t} else {\n\t\t\t\tvar key = dict.b;\n\t\t\t\tvar value = dict.c;\n\t\t\t\tvar left = dict.d;\n\t\t\t\tvar right = dict.e;\n\t\t\t\tvar _n1 = A2(elm$core$Basics$compare, targetKey, key);\n\t\t\t\tswitch (_n1) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tvar $temp$targetKey = targetKey,\n\t\t\t\t\t\t\t$temp$dict = left;\n\t\t\t\t\t\ttargetKey = $temp$targetKey;\n\t\t\t\t\t\tdict = $temp$dict;\n\t\t\t\t\t\tcontinue get;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturn elm$core$Maybe$Just(value);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar $temp$targetKey = targetKey,\n\t\t\t\t\t\t\t$temp$dict = right;\n\t\t\t\t\t\ttargetKey = $temp$targetKey;\n\t\t\t\t\t\tdict = $temp$dict;\n\t\t\t\t\t\tcontinue get;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar author$project$MatrixUtils$getPattern = function (patternName) {\n\tvar _n0 = A2(elm$core$Dict$get, patternName, author$project$MatrixUtils$patterns);\n\tif (!_n0.$) {\n\t\tvar list = _n0.a;\n\t\treturn list;\n\t} else {\n\t\treturn _List_Nil;\n\t}\n};\nvar elm$core$Basics$and = _Basics_and;\nvar elm$core$Basics$not = _Basics_not;\nvar elm$core$List$foldrHelper = F4(\n\tfunction (fn, acc, ctr, ls) {\n\t\tif (!ls.b) {\n\t\t\treturn acc;\n\t\t} else {\n\t\t\tvar a = ls.a;\n\t\t\tvar r1 = ls.b;\n\t\t\tif (!r1.b) {\n\t\t\t\treturn A2(fn, a, acc);\n\t\t\t} else {\n\t\t\t\tvar b = r1.a;\n\t\t\t\tvar r2 = r1.b;\n\t\t\t\tif (!r2.b) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\tfn,\n\t\t\t\t\t\ta,\n\t\t\t\t\t\tA2(fn, b, acc));\n\t\t\t\t} else {\n\t\t\t\t\tvar c = r2.a;\n\t\t\t\t\tvar r3 = r2.b;\n\t\t\t\t\tif (!r3.b) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(fn, c, acc)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar d = r3.a;\n\t\t\t\t\t\tvar r4 = r3.b;\n\t\t\t\t\t\tvar res = (ctr > 500) ? A3(\n\t\t\t\t\t\t\telm$core$List$foldl,\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\tacc,\n\t\t\t\t\t\t\telm$core$List$reverse(r4)) : A4(elm$core$List$foldrHelper, fn, acc, ctr + 1, r4);\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\t\tc,\n\t\t\t\t\t\t\t\t\tA2(fn, d, res))));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$foldr = F3(\n\tfunction (fn, acc, ls) {\n\t\treturn A4(elm$core$List$foldrHelper, fn, acc, 0, ls);\n\t});\nvar elm$core$List$filter = F2(\n\tfunction (isGood, list) {\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, xs) {\n\t\t\t\t\treturn isGood(x) ? A2(elm$core$List$cons, x, xs) : xs;\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\tlist);\n\t});\nvar elm$core$Basics$True = 0;\nvar elm$core$List$isEmpty = function (xs) {\n\tif (!xs.b) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar author$project$MatrixUtils$isIncludedInPattern = F3(\n\tfunction (itemX, itemY, pattern) {\n\t\treturn !elm$core$List$isEmpty(\n\t\t\tA2(\n\t\t\t\telm$core$List$filter,\n\t\t\t\tfunction (list) {\n\t\t\t\t\tif ((list.b && list.b.b) && (!list.b.b.b)) {\n\t\t\t\t\t\tvar x = list.a;\n\t\t\t\t\t\tvar _n1 = list.b;\n\t\t\t\t\t\tvar y = _n1.a;\n\t\t\t\t\t\treturn _Utils_eq(itemX, x) && _Utils_eq(itemY, y);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tpattern));\n\t});\nvar author$project$MatrixUtils$sideSize = 50;\nvar author$project$Types$Cell = F4(\n\tfunction (posX, posY, id, alive) {\n\t\treturn {aC: alive, aM: id, aU: posX, aV: posY};\n\t});\nvar author$project$MatrixUtils$fieldMatrix = function (patternName) {\n\treturn A3(\n\t\tKraxorax$elm_matrix_a$Matrix$generate,\n\t\tauthor$project$MatrixUtils$sideSize,\n\t\tauthor$project$MatrixUtils$sideSize,\n\t\tF2(\n\t\t\tfunction (x, y) {\n\t\t\t\tvar alive = A3(\n\t\t\t\t\tauthor$project$MatrixUtils$isIncludedInPattern,\n\t\t\t\t\tx,\n\t\t\t\t\ty,\n\t\t\t\t\tauthor$project$MatrixUtils$getPattern(patternName));\n\t\t\t\treturn A4(\n\t\t\t\t\tauthor$project$Types$Cell,\n\t\t\t\t\tx,\n\t\t\t\t\ty,\n\t\t\t\t\tA2(author$project$MatrixUtils$cellId, x, y),\n\t\t\t\t\talive);\n\t\t\t}));\n};\nvar elm$core$Elm$JsArray$appendN = _JsArray_appendN;\nvar elm$core$Elm$JsArray$slice = _JsArray_slice;\nvar elm$core$Array$appendHelpBuilder = F2(\n\tfunction (tail, builder) {\n\t\tvar tailLen = elm$core$Elm$JsArray$length(tail);\n\t\tvar notAppended = (elm$core$Array$branchFactor - elm$core$Elm$JsArray$length(builder.c)) - tailLen;\n\t\tvar appended = A3(elm$core$Elm$JsArray$appendN, elm$core$Array$branchFactor, builder.c, tail);\n\t\treturn (notAppended < 0) ? {\n\t\t\td: A2(\n\t\t\t\telm$core$List$cons,\n\t\t\t\telm$core$Array$Leaf(appended),\n\t\t\t\tbuilder.d),\n\t\t\ta: builder.a + 1,\n\t\t\tc: A3(elm$core$Elm$JsArray$slice, notAppended, tailLen, tail)\n\t\t} : ((!notAppended) ? {\n\t\t\td: A2(\n\t\t\t\telm$core$List$cons,\n\t\t\t\telm$core$Array$Leaf(appended),\n\t\t\t\tbuilder.d),\n\t\t\ta: builder.a + 1,\n\t\t\tc: elm$core$Elm$JsArray$empty\n\t\t} : {d: builder.d, a: builder.a, c: appended});\n\t});\nvar elm$core$Bitwise$shiftRightZfBy = _Bitwise_shiftRightZfBy;\nvar elm$core$Array$bitMask = 4294967295 >>> (32 - elm$core$Array$shiftStep);\nvar elm$core$Basics$ge = _Utils_ge;\nvar elm$core$Bitwise$and = _Bitwise_and;\nvar elm$core$Elm$JsArray$push = _JsArray_push;\nvar elm$core$Elm$JsArray$singleton = _JsArray_singleton;\nvar elm$core$Elm$JsArray$unsafeGet = _JsArray_unsafeGet;\nvar elm$core$Elm$JsArray$unsafeSet = _JsArray_unsafeSet;\nvar elm$core$Array$insertTailInTree = F4(\n\tfunction (shift, index, tail, tree) {\n\t\tvar pos = elm$core$Array$bitMask & (index >>> shift);\n\t\tif (_Utils_cmp(\n\t\t\tpos,\n\t\t\telm$core$Elm$JsArray$length(tree)) > -1) {\n\t\t\tif (shift === 5) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Elm$JsArray$push,\n\t\t\t\t\telm$core$Array$Leaf(tail),\n\t\t\t\t\ttree);\n\t\t\t} else {\n\t\t\t\tvar newSub = elm$core$Array$SubTree(\n\t\t\t\t\tA4(elm$core$Array$insertTailInTree, shift - elm$core$Array$shiftStep, index, tail, elm$core$Elm$JsArray$empty));\n\t\t\t\treturn A2(elm$core$Elm$JsArray$push, newSub, tree);\n\t\t\t}\n\t\t} else {\n\t\t\tvar value = A2(elm$core$Elm$JsArray$unsafeGet, pos, tree);\n\t\t\tif (!value.$) {\n\t\t\t\tvar subTree = value.a;\n\t\t\t\tvar newSub = elm$core$Array$SubTree(\n\t\t\t\t\tA4(elm$core$Array$insertTailInTree, shift - elm$core$Array$shiftStep, index, tail, subTree));\n\t\t\t\treturn A3(elm$core$Elm$JsArray$unsafeSet, pos, newSub, tree);\n\t\t\t} else {\n\t\t\t\tvar newSub = elm$core$Array$SubTree(\n\t\t\t\t\tA4(\n\t\t\t\t\t\telm$core$Array$insertTailInTree,\n\t\t\t\t\t\tshift - elm$core$Array$shiftStep,\n\t\t\t\t\t\tindex,\n\t\t\t\t\t\ttail,\n\t\t\t\t\t\telm$core$Elm$JsArray$singleton(value)));\n\t\t\t\treturn A3(elm$core$Elm$JsArray$unsafeSet, pos, newSub, tree);\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Bitwise$shiftLeftBy = _Bitwise_shiftLeftBy;\nvar elm$core$Array$unsafeReplaceTail = F2(\n\tfunction (newTail, _n0) {\n\t\tvar len = _n0.a;\n\t\tvar startShift = _n0.b;\n\t\tvar tree = _n0.c;\n\t\tvar tail = _n0.d;\n\t\tvar originalTailLen = elm$core$Elm$JsArray$length(tail);\n\t\tvar newTailLen = elm$core$Elm$JsArray$length(newTail);\n\t\tvar newArrayLen = len + (newTailLen - originalTailLen);\n\t\tif (_Utils_eq(newTailLen, elm$core$Array$branchFactor)) {\n\t\t\tvar overflow = _Utils_cmp(newArrayLen >>> elm$core$Array$shiftStep, 1 << startShift) > 0;\n\t\t\tif (overflow) {\n\t\t\t\tvar newShift = startShift + elm$core$Array$shiftStep;\n\t\t\t\tvar newTree = A4(\n\t\t\t\t\telm$core$Array$insertTailInTree,\n\t\t\t\t\tnewShift,\n\t\t\t\t\tlen,\n\t\t\t\t\tnewTail,\n\t\t\t\t\telm$core$Elm$JsArray$singleton(\n\t\t\t\t\t\telm$core$Array$SubTree(tree)));\n\t\t\t\treturn A4(elm$core$Array$Array_elm_builtin, newArrayLen, newShift, newTree, elm$core$Elm$JsArray$empty);\n\t\t\t} else {\n\t\t\t\treturn A4(\n\t\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\t\tnewArrayLen,\n\t\t\t\t\tstartShift,\n\t\t\t\t\tA4(elm$core$Array$insertTailInTree, startShift, len, newTail, tree),\n\t\t\t\t\telm$core$Elm$JsArray$empty);\n\t\t\t}\n\t\t} else {\n\t\t\treturn A4(elm$core$Array$Array_elm_builtin, newArrayLen, startShift, tree, newTail);\n\t\t}\n\t});\nvar elm$core$Array$appendHelpTree = F2(\n\tfunction (toAppend, array) {\n\t\tvar len = array.a;\n\t\tvar tree = array.c;\n\t\tvar tail = array.d;\n\t\tvar itemsToAppend = elm$core$Elm$JsArray$length(toAppend);\n\t\tvar notAppended = (elm$core$Array$branchFactor - elm$core$Elm$JsArray$length(tail)) - itemsToAppend;\n\t\tvar appended = A3(elm$core$Elm$JsArray$appendN, elm$core$Array$branchFactor, tail, toAppend);\n\t\tvar newArray = A2(elm$core$Array$unsafeReplaceTail, appended, array);\n\t\tif (notAppended < 0) {\n\t\t\tvar nextTail = A3(elm$core$Elm$JsArray$slice, notAppended, itemsToAppend, toAppend);\n\t\t\treturn A2(elm$core$Array$unsafeReplaceTail, nextTail, newArray);\n\t\t} else {\n\t\t\treturn newArray;\n\t\t}\n\t});\nvar elm$core$Elm$JsArray$foldl = _JsArray_foldl;\nvar elm$core$Array$builderFromArray = function (_n0) {\n\tvar len = _n0.a;\n\tvar tree = _n0.c;\n\tvar tail = _n0.d;\n\tvar helper = F2(\n\t\tfunction (node, acc) {\n\t\t\tif (!node.$) {\n\t\t\t\tvar subTree = node.a;\n\t\t\t\treturn A3(elm$core$Elm$JsArray$foldl, helper, acc, subTree);\n\t\t\t} else {\n\t\t\t\treturn A2(elm$core$List$cons, node, acc);\n\t\t\t}\n\t\t});\n\treturn {\n\t\td: A3(elm$core$Elm$JsArray$foldl, helper, _List_Nil, tree),\n\t\ta: (len / elm$core$Array$branchFactor) | 0,\n\t\tc: tail\n\t};\n};\nvar elm$core$Array$append = F2(\n\tfunction (a, _n0) {\n\t\tvar aTail = a.d;\n\t\tvar bLen = _n0.a;\n\t\tvar bTree = _n0.c;\n\t\tvar bTail = _n0.d;\n\t\tif (_Utils_cmp(bLen, elm$core$Array$branchFactor * 4) < 1) {\n\t\t\tvar foldHelper = F2(\n\t\t\t\tfunction (node, array) {\n\t\t\t\t\tif (!node.$) {\n\t\t\t\t\t\tvar tree = node.a;\n\t\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldl, foldHelper, array, tree);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar leaf = node.a;\n\t\t\t\t\t\treturn A2(elm$core$Array$appendHelpTree, leaf, array);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\treturn A2(\n\t\t\t\telm$core$Array$appendHelpTree,\n\t\t\t\tbTail,\n\t\t\t\tA3(elm$core$Elm$JsArray$foldl, foldHelper, a, bTree));\n\t\t} else {\n\t\t\tvar foldHelper = F2(\n\t\t\t\tfunction (node, builder) {\n\t\t\t\t\tif (!node.$) {\n\t\t\t\t\t\tvar tree = node.a;\n\t\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldl, foldHelper, builder, tree);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar leaf = node.a;\n\t\t\t\t\t\treturn A2(elm$core$Array$appendHelpBuilder, leaf, builder);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\treturn A2(\n\t\t\t\telm$core$Array$builderToArray,\n\t\t\t\ttrue,\n\t\t\t\tA2(\n\t\t\t\t\telm$core$Array$appendHelpBuilder,\n\t\t\t\t\tbTail,\n\t\t\t\t\tA3(\n\t\t\t\t\t\telm$core$Elm$JsArray$foldl,\n\t\t\t\t\t\tfoldHelper,\n\t\t\t\t\t\telm$core$Array$builderFromArray(a),\n\t\t\t\t\t\tbTree)));\n\t\t}\n\t});\nvar Kraxorax$elm_matrix_a$Matrix$toArray = function (_n0) {\n\tvar m = _n0.b;\n\treturn A3(elm$core$Array$foldr, elm$core$Array$append, elm$core$Array$empty, m);\n};\nvar elm$core$Array$fromListHelp = F3(\n\tfunction (list, nodeList, nodeListSize) {\n\t\tfromListHelp:\n\t\twhile (true) {\n\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, list);\n\t\t\tvar jsArray = _n0.a;\n\t\t\tvar remainingItems = _n0.b;\n\t\t\tif (_Utils_cmp(\n\t\t\t\telm$core$Elm$JsArray$length(jsArray),\n\t\t\t\telm$core$Array$branchFactor) < 0) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Array$builderToArray,\n\t\t\t\t\ttrue,\n\t\t\t\t\t{d: nodeList, a: nodeListSize, c: jsArray});\n\t\t\t} else {\n\t\t\t\tvar $temp$list = remainingItems,\n\t\t\t\t\t$temp$nodeList = A2(\n\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\telm$core$Array$Leaf(jsArray),\n\t\t\t\t\tnodeList),\n\t\t\t\t\t$temp$nodeListSize = nodeListSize + 1;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\tnodeListSize = $temp$nodeListSize;\n\t\t\t\tcontinue fromListHelp;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$fromList = function (list) {\n\tif (!list.b) {\n\t\treturn elm$core$Array$empty;\n\t} else {\n\t\treturn A3(elm$core$Array$fromListHelp, list, _List_Nil, 0);\n\t}\n};\nvar elm$core$Array$filter = F2(\n\tfunction (isGood, array) {\n\t\treturn elm$core$Array$fromList(\n\t\t\tA3(\n\t\t\t\telm$core$Array$foldr,\n\t\t\t\tF2(\n\t\t\t\t\tfunction (x, xs) {\n\t\t\t\t\t\treturn isGood(x) ? A2(elm$core$List$cons, x, xs) : xs;\n\t\t\t\t\t}),\n\t\t\t\t_List_Nil,\n\t\t\t\tarray));\n\t});\nvar author$project$MatrixUtils$getAliveCells = function (matrix) {\n\treturn elm$core$Array$toList(\n\t\tA2(\n\t\t\telm$core$Array$filter,\n\t\t\tfunction ($) {\n\t\t\t\treturn $.aC;\n\t\t\t},\n\t\t\tKraxorax$elm_matrix_a$Matrix$toArray(matrix)));\n};\nvar elm$core$Result$isOk = function (result) {\n\tif (!result.$) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar elm$core$Result$Err = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$core$Result$Ok = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$json$Json$Decode$Failure = F2(\n\tfunction (a, b) {\n\t\treturn {$: 3, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$Field = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$Index = F2(\n\tfunction (a, b) {\n\t\treturn {$: 1, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$OneOf = function (a) {\n\treturn {$: 2, a: a};\n};\nvar elm$core$Basics$or = _Basics_or;\nvar elm$core$Char$toCode = _Char_toCode;\nvar elm$core$Char$isLower = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (97 <= code) && (code <= 122);\n};\nvar elm$core$Char$isUpper = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (code <= 90) && (65 <= code);\n};\nvar elm$core$Char$isAlpha = function (_char) {\n\treturn elm$core$Char$isLower(_char) || elm$core$Char$isUpper(_char);\n};\nvar elm$core$Char$isDigit = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (code <= 57) && (48 <= code);\n};\nvar elm$core$Char$isAlphaNum = function (_char) {\n\treturn elm$core$Char$isLower(_char) || (elm$core$Char$isUpper(_char) || elm$core$Char$isDigit(_char));\n};\nvar elm$core$List$length = function (xs) {\n\treturn A3(\n\t\telm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_n0, i) {\n\t\t\t\treturn i + 1;\n\t\t\t}),\n\t\t0,\n\t\txs);\n};\nvar elm$core$List$map2 = _List_map2;\nvar elm$core$List$rangeHelp = F3(\n\tfunction (lo, hi, list) {\n\t\trangeHelp:\n\t\twhile (true) {\n\t\t\tif (_Utils_cmp(lo, hi) < 1) {\n\t\t\t\tvar $temp$lo = lo,\n\t\t\t\t\t$temp$hi = hi - 1,\n\t\t\t\t\t$temp$list = A2(elm$core$List$cons, hi, list);\n\t\t\t\tlo = $temp$lo;\n\t\t\t\thi = $temp$hi;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue rangeHelp;\n\t\t\t} else {\n\t\t\t\treturn list;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$range = F2(\n\tfunction (lo, hi) {\n\t\treturn A3(elm$core$List$rangeHelp, lo, hi, _List_Nil);\n\t});\nvar elm$core$List$indexedMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$map2,\n\t\t\tf,\n\t\t\tA2(\n\t\t\t\telm$core$List$range,\n\t\t\t\t0,\n\t\t\t\telm$core$List$length(xs) - 1),\n\t\t\txs);\n\t});\nvar elm$core$String$all = _String_all;\nvar elm$core$String$join = F2(\n\tfunction (sep, chunks) {\n\t\treturn A2(\n\t\t\t_String_join,\n\t\t\tsep,\n\t\t\t_List_toArray(chunks));\n\t});\nvar elm$core$String$uncons = _String_uncons;\nvar elm$core$String$split = F2(\n\tfunction (sep, string) {\n\t\treturn _List_fromArray(\n\t\t\tA2(_String_split, sep, string));\n\t});\nvar elm$json$Json$Decode$indent = function (str) {\n\treturn A2(\n\t\telm$core$String$join,\n\t\t'\\n    ',\n\t\tA2(elm$core$String$split, '\\n', str));\n};\nvar elm$json$Json$Encode$encode = _Json_encode;\nvar elm$json$Json$Decode$errorOneOf = F2(\n\tfunction (i, error) {\n\t\treturn '\\n\\n(' + (elm$core$String$fromInt(i + 1) + (') ' + elm$json$Json$Decode$indent(\n\t\t\telm$json$Json$Decode$errorToString(error))));\n\t});\nvar elm$json$Json$Decode$errorToString = function (error) {\n\treturn A2(elm$json$Json$Decode$errorToStringHelp, error, _List_Nil);\n};\nvar elm$json$Json$Decode$errorToStringHelp = F2(\n\tfunction (error, context) {\n\t\terrorToStringHelp:\n\t\twhile (true) {\n\t\t\tswitch (error.$) {\n\t\t\t\tcase 0:\n\t\t\t\t\tvar f = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar isSimple = function () {\n\t\t\t\t\t\tvar _n1 = elm$core$String$uncons(f);\n\t\t\t\t\t\tif (_n1.$ === 1) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _n2 = _n1.a;\n\t\t\t\t\t\t\tvar _char = _n2.a;\n\t\t\t\t\t\t\tvar rest = _n2.b;\n\t\t\t\t\t\t\treturn elm$core$Char$isAlpha(_char) && A2(elm$core$String$all, elm$core$Char$isAlphaNum, rest);\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\tvar fieldName = isSimple ? ('.' + f) : ('[\\'' + (f + '\\']'));\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2(elm$core$List$cons, fieldName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 1:\n\t\t\t\t\tvar i = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar indexName = '[' + (elm$core$String$fromInt(i) + ']');\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2(elm$core$List$cons, indexName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 2:\n\t\t\t\t\tvar errors = error.a;\n\t\t\t\t\tif (!errors.b) {\n\t\t\t\t\t\treturn 'Ran into a Json.Decode.oneOf with no possibilities' + function () {\n\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\treturn '!';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn ' at json' + A2(\n\t\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\telm$core$List$reverse(context));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!errors.b.b) {\n\t\t\t\t\t\t\tvar err = errors.a;\n\t\t\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t\t\t$temp$context = context;\n\t\t\t\t\t\t\terror = $temp$error;\n\t\t\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar starter = function () {\n\t\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\t\treturn 'Json.Decode.oneOf';\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn 'The Json.Decode.oneOf at json' + A2(\n\t\t\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\t\telm$core$List$reverse(context));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}();\n\t\t\t\t\t\t\tvar introduction = starter + (' failed in the following ' + (elm$core$String$fromInt(\n\t\t\t\t\t\t\t\telm$core$List$length(errors)) + ' ways:'));\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t'\\n\\n',\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\tintroduction,\n\t\t\t\t\t\t\t\t\tA2(elm$core$List$indexedMap, elm$json$Json$Decode$errorOneOf, errors)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tvar msg = error.a;\n\t\t\t\t\tvar json = error.b;\n\t\t\t\t\tvar introduction = function () {\n\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\treturn 'Problem with the given value:\\n\\n';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn 'Problem with the value at json' + (A2(\n\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\telm$core$List$reverse(context)) + ':\\n\\n    ');\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\treturn introduction + (elm$json$Json$Decode$indent(\n\t\t\t\t\t\tA2(elm$json$Json$Encode$encode, 4, json)) + ('\\n\\n' + msg));\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Platform$Cmd$batch = _Platform_batch;\nvar elm$core$Platform$Cmd$none = elm$core$Platform$Cmd$batch(_List_Nil);\nvar author$project$Main$init = function (_n0) {\n\tvar glider = author$project$MatrixUtils$fieldMatrix('glider');\n\treturn _Utils_Tuple2(\n\t\t{\n\t\t\tv: author$project$MatrixUtils$getAliveCells(glider),\n\t\t\to: 1,\n\t\t\tm: author$project$MatrixUtils$fieldMatrix('glider'),\n\t\t\tL: 'glider'\n\t\t},\n\t\telm$core$Platform$Cmd$none);\n};\nvar author$project$Main$tickRate = 100;\nvar author$project$Msgs$Tick = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$core$Platform$Sub$batch = _Platform_batch;\nvar elm$core$Platform$Sub$none = elm$core$Platform$Sub$batch(_List_Nil);\nvar elm$time$Time$Every = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$core$Task$succeed = _Scheduler_succeed;\nvar elm$time$Time$State = F2(\n\tfunction (taggers, processes) {\n\t\treturn {aq: processes, ay: taggers};\n\t});\nvar elm$time$Time$init = elm$core$Task$succeed(\n\tA2(elm$time$Time$State, elm$core$Dict$empty, elm$core$Dict$empty));\nvar elm$core$Dict$foldl = F3(\n\tfunction (func, acc, dict) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (dict.$ === -2) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = dict.b;\n\t\t\t\tvar value = dict.c;\n\t\t\t\tvar left = dict.d;\n\t\t\t\tvar right = dict.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3(elm$core$Dict$foldl, func, acc, left)),\n\t\t\t\t\t$temp$dict = right;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tdict = $temp$dict;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$merge = F6(\n\tfunction (leftStep, bothStep, rightStep, leftDict, rightDict, initialResult) {\n\t\tvar stepState = F3(\n\t\t\tfunction (rKey, rValue, _n0) {\n\t\t\t\tstepState:\n\t\t\t\twhile (true) {\n\t\t\t\t\tvar list = _n0.a;\n\t\t\t\t\tvar result = _n0.b;\n\t\t\t\t\tif (!list.b) {\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\tlist,\n\t\t\t\t\t\t\tA3(rightStep, rKey, rValue, result));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _n2 = list.a;\n\t\t\t\t\t\tvar lKey = _n2.a;\n\t\t\t\t\t\tvar lValue = _n2.b;\n\t\t\t\t\t\tvar rest = list.b;\n\t\t\t\t\t\tif (_Utils_cmp(lKey, rKey) < 0) {\n\t\t\t\t\t\t\tvar $temp$rKey = rKey,\n\t\t\t\t\t\t\t\t$temp$rValue = rValue,\n\t\t\t\t\t\t\t\t$temp$_n0 = _Utils_Tuple2(\n\t\t\t\t\t\t\t\trest,\n\t\t\t\t\t\t\t\tA3(leftStep, lKey, lValue, result));\n\t\t\t\t\t\t\trKey = $temp$rKey;\n\t\t\t\t\t\t\trValue = $temp$rValue;\n\t\t\t\t\t\t\t_n0 = $temp$_n0;\n\t\t\t\t\t\t\tcontinue stepState;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (_Utils_cmp(lKey, rKey) > 0) {\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\tlist,\n\t\t\t\t\t\t\t\t\tA3(rightStep, rKey, rValue, result));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\trest,\n\t\t\t\t\t\t\t\t\tA4(bothStep, lKey, lValue, rValue, result));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\tvar _n3 = A3(\n\t\t\telm$core$Dict$foldl,\n\t\t\tstepState,\n\t\t\t_Utils_Tuple2(\n\t\t\t\telm$core$Dict$toList(leftDict),\n\t\t\t\tinitialResult),\n\t\t\trightDict);\n\t\tvar leftovers = _n3.a;\n\t\tvar intermediateResult = _n3.b;\n\t\treturn A3(\n\t\t\telm$core$List$foldl,\n\t\t\tF2(\n\t\t\t\tfunction (_n4, result) {\n\t\t\t\t\tvar k = _n4.a;\n\t\t\t\t\tvar v = _n4.b;\n\t\t\t\t\treturn A3(leftStep, k, v, result);\n\t\t\t\t}),\n\t\t\tintermediateResult,\n\t\t\tleftovers);\n\t});\nvar elm$core$Process$kill = _Scheduler_kill;\nvar elm$core$Task$andThen = _Scheduler_andThen;\nvar elm$time$Time$addMySub = F2(\n\tfunction (_n0, state) {\n\t\tvar interval = _n0.a;\n\t\tvar tagger = _n0.b;\n\t\tvar _n1 = A2(elm$core$Dict$get, interval, state);\n\t\tif (_n1.$ === 1) {\n\t\t\treturn A3(\n\t\t\t\telm$core$Dict$insert,\n\t\t\t\tinterval,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[tagger]),\n\t\t\t\tstate);\n\t\t} else {\n\t\t\tvar taggers = _n1.a;\n\t\t\treturn A3(\n\t\t\t\telm$core$Dict$insert,\n\t\t\t\tinterval,\n\t\t\t\tA2(elm$core$List$cons, tagger, taggers),\n\t\t\t\tstate);\n\t\t}\n\t});\nvar elm$core$Platform$sendToSelf = _Platform_sendToSelf;\nvar elm$core$Process$spawn = _Scheduler_spawn;\nvar elm$time$Time$Name = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$time$Time$Offset = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$time$Time$Zone = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$time$Time$customZone = elm$time$Time$Zone;\nvar elm$time$Time$setInterval = _Time_setInterval;\nvar elm$time$Time$spawnHelp = F3(\n\tfunction (router, intervals, processes) {\n\t\tif (!intervals.b) {\n\t\t\treturn elm$core$Task$succeed(processes);\n\t\t} else {\n\t\t\tvar interval = intervals.a;\n\t\t\tvar rest = intervals.b;\n\t\t\tvar spawnTimer = elm$core$Process$spawn(\n\t\t\t\tA2(\n\t\t\t\t\telm$time$Time$setInterval,\n\t\t\t\t\tinterval,\n\t\t\t\t\tA2(elm$core$Platform$sendToSelf, router, interval)));\n\t\t\tvar spawnRest = function (id) {\n\t\t\t\treturn A3(\n\t\t\t\t\telm$time$Time$spawnHelp,\n\t\t\t\t\trouter,\n\t\t\t\t\trest,\n\t\t\t\t\tA3(elm$core$Dict$insert, interval, id, processes));\n\t\t\t};\n\t\t\treturn A2(elm$core$Task$andThen, spawnRest, spawnTimer);\n\t\t}\n\t});\nvar elm$time$Time$onEffects = F3(\n\tfunction (router, subs, _n0) {\n\t\tvar processes = _n0.aq;\n\t\tvar rightStep = F3(\n\t\t\tfunction (_n6, id, _n7) {\n\t\t\t\tvar spawns = _n7.a;\n\t\t\t\tvar existing = _n7.b;\n\t\t\t\tvar kills = _n7.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tspawns,\n\t\t\t\t\texisting,\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$Task$andThen,\n\t\t\t\t\t\tfunction (_n5) {\n\t\t\t\t\t\t\treturn kills;\n\t\t\t\t\t\t},\n\t\t\t\t\t\telm$core$Process$kill(id)));\n\t\t\t});\n\t\tvar newTaggers = A3(elm$core$List$foldl, elm$time$Time$addMySub, elm$core$Dict$empty, subs);\n\t\tvar leftStep = F3(\n\t\t\tfunction (interval, taggers, _n4) {\n\t\t\t\tvar spawns = _n4.a;\n\t\t\t\tvar existing = _n4.b;\n\t\t\t\tvar kills = _n4.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tA2(elm$core$List$cons, interval, spawns),\n\t\t\t\t\texisting,\n\t\t\t\t\tkills);\n\t\t\t});\n\t\tvar bothStep = F4(\n\t\t\tfunction (interval, taggers, id, _n3) {\n\t\t\t\tvar spawns = _n3.a;\n\t\t\t\tvar existing = _n3.b;\n\t\t\t\tvar kills = _n3.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tspawns,\n\t\t\t\t\tA3(elm$core$Dict$insert, interval, id, existing),\n\t\t\t\t\tkills);\n\t\t\t});\n\t\tvar _n1 = A6(\n\t\t\telm$core$Dict$merge,\n\t\t\tleftStep,\n\t\t\tbothStep,\n\t\t\trightStep,\n\t\t\tnewTaggers,\n\t\t\tprocesses,\n\t\t\t_Utils_Tuple3(\n\t\t\t\t_List_Nil,\n\t\t\t\telm$core$Dict$empty,\n\t\t\t\telm$core$Task$succeed(0)));\n\t\tvar spawnList = _n1.a;\n\t\tvar existingDict = _n1.b;\n\t\tvar killTask = _n1.c;\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (newProcesses) {\n\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\tA2(elm$time$Time$State, newTaggers, newProcesses));\n\t\t\t},\n\t\t\tA2(\n\t\t\t\telm$core$Task$andThen,\n\t\t\t\tfunction (_n2) {\n\t\t\t\t\treturn A3(elm$time$Time$spawnHelp, router, spawnList, existingDict);\n\t\t\t\t},\n\t\t\t\tkillTask));\n\t});\nvar elm$core$List$map = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, acc) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\tf(x),\n\t\t\t\t\t\tacc);\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar elm$core$Platform$sendToApp = _Platform_sendToApp;\nvar elm$core$Task$map2 = F3(\n\tfunction (func, taskA, taskB) {\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Task$andThen,\n\t\t\t\t\tfunction (b) {\n\t\t\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\t\t\tA2(func, a, b));\n\t\t\t\t\t},\n\t\t\t\t\ttaskB);\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar elm$core$Task$sequence = function (tasks) {\n\treturn A3(\n\t\telm$core$List$foldr,\n\t\telm$core$Task$map2(elm$core$List$cons),\n\t\telm$core$Task$succeed(_List_Nil),\n\t\ttasks);\n};\nvar elm$core$Basics$identity = function (x) {\n\treturn x;\n};\nvar elm$time$Time$Posix = elm$core$Basics$identity;\nvar elm$time$Time$millisToPosix = elm$core$Basics$identity;\nvar elm$time$Time$now = _Time_now(elm$time$Time$millisToPosix);\nvar elm$time$Time$onSelfMsg = F3(\n\tfunction (router, interval, state) {\n\t\tvar _n0 = A2(elm$core$Dict$get, interval, state.ay);\n\t\tif (_n0.$ === 1) {\n\t\t\treturn elm$core$Task$succeed(state);\n\t\t} else {\n\t\t\tvar taggers = _n0.a;\n\t\t\tvar tellTaggers = function (time) {\n\t\t\t\treturn elm$core$Task$sequence(\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$List$map,\n\t\t\t\t\t\tfunction (tagger) {\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\telm$core$Platform$sendToApp,\n\t\t\t\t\t\t\t\trouter,\n\t\t\t\t\t\t\t\ttagger(time));\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttaggers));\n\t\t\t};\n\t\t\treturn A2(\n\t\t\t\telm$core$Task$andThen,\n\t\t\t\tfunction (_n1) {\n\t\t\t\t\treturn elm$core$Task$succeed(state);\n\t\t\t\t},\n\t\t\t\tA2(elm$core$Task$andThen, tellTaggers, elm$time$Time$now));\n\t\t}\n\t});\nvar elm$core$Basics$composeL = F3(\n\tfunction (g, f, x) {\n\t\treturn g(\n\t\t\tf(x));\n\t});\nvar elm$time$Time$subMap = F2(\n\tfunction (f, _n0) {\n\t\tvar interval = _n0.a;\n\t\tvar tagger = _n0.b;\n\t\treturn A2(\n\t\t\telm$time$Time$Every,\n\t\t\tinterval,\n\t\t\tA2(elm$core$Basics$composeL, f, tagger));\n\t});\n_Platform_effectManagers['Time'] = _Platform_createManager(elm$time$Time$init, elm$time$Time$onEffects, elm$time$Time$onSelfMsg, 0, elm$time$Time$subMap);\nvar elm$time$Time$subscription = _Platform_leaf('Time');\nvar elm$time$Time$every = F2(\n\tfunction (interval, tagger) {\n\t\treturn elm$time$Time$subscription(\n\t\t\tA2(elm$time$Time$Every, interval, tagger));\n\t});\nvar author$project$Main$subscriptions = function (_n0) {\n\tvar gameStatus = _n0.o;\n\tif (gameStatus === 1) {\n\t\treturn elm$core$Platform$Sub$none;\n\t} else {\n\t\treturn A2(elm$time$Time$every, author$project$Main$tickRate, author$project$Msgs$Tick);\n\t}\n};\nvar elm$core$Elm$JsArray$map = _JsArray_map;\nvar elm$core$Array$map = F2(\n\tfunction (func, _n0) {\n\t\tvar len = _n0.a;\n\t\tvar startShift = _n0.b;\n\t\tvar tree = _n0.c;\n\t\tvar tail = _n0.d;\n\t\tvar helper = function (node) {\n\t\t\tif (!node.$) {\n\t\t\t\tvar subTree = node.a;\n\t\t\t\treturn elm$core$Array$SubTree(\n\t\t\t\t\tA2(elm$core$Elm$JsArray$map, helper, subTree));\n\t\t\t} else {\n\t\t\t\tvar values = node.a;\n\t\t\t\treturn elm$core$Array$Leaf(\n\t\t\t\t\tA2(elm$core$Elm$JsArray$map, func, values));\n\t\t\t}\n\t\t};\n\t\treturn A4(\n\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\tlen,\n\t\t\tstartShift,\n\t\t\tA2(elm$core$Elm$JsArray$map, helper, tree),\n\t\t\tA2(elm$core$Elm$JsArray$map, func, tail));\n\t});\nvar Kraxorax$elm_matrix_a$Matrix$map = F2(\n\tfunction (f, _n0) {\n\t\tvar w = _n0.a;\n\t\tvar m = _n0.b;\n\t\treturn A2(\n\t\t\tKraxorax$elm_matrix_a$Matrix$Matrix,\n\t\t\tw,\n\t\t\tA2(\n\t\t\t\telm$core$Array$map,\n\t\t\t\tfunction (row) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\telm$core$Array$map,\n\t\t\t\t\t\tfunction (ele) {\n\t\t\t\t\t\t\treturn f(ele);\n\t\t\t\t\t\t},\n\t\t\t\t\t\trow);\n\t\t\t\t},\n\t\t\t\tm));\n\t});\nvar author$project$Main$toggle = F2(\n\tfunction (id, cell) {\n\t\treturn _Utils_eq(cell.aM, id) ? _Utils_update(\n\t\t\tcell,\n\t\t\t{aC: !cell.aC}) : cell;\n\t});\nvar author$project$Main$handleClick = F2(\n\tfunction (model, id) {\n\t\tvar newGeneration = A2(\n\t\t\tKraxorax$elm_matrix_a$Matrix$map,\n\t\t\tauthor$project$Main$toggle(id),\n\t\t\tmodel.m);\n\t\tvar newAliveCells = author$project$MatrixUtils$getAliveCells(newGeneration);\n\t\treturn _Utils_Tuple2(\n\t\t\t_Utils_update(\n\t\t\t\tmodel,\n\t\t\t\t{v: newAliveCells, m: newGeneration}),\n\t\t\telm$core$Platform$Cmd$none);\n\t});\nvar elm$core$Array$tailIndex = function (len) {\n\treturn (len >>> 5) << 5;\n};\nvar elm$core$Elm$JsArray$indexedMap = _JsArray_indexedMap;\nvar elm$core$Array$indexedMap = F2(\n\tfunction (func, _n0) {\n\t\tvar len = _n0.a;\n\t\tvar tree = _n0.c;\n\t\tvar tail = _n0.d;\n\t\tvar initialBuilder = {\n\t\t\td: _List_Nil,\n\t\t\ta: 0,\n\t\t\tc: A3(\n\t\t\t\telm$core$Elm$JsArray$indexedMap,\n\t\t\t\tfunc,\n\t\t\t\telm$core$Array$tailIndex(len),\n\t\t\t\ttail)\n\t\t};\n\t\tvar helper = F2(\n\t\t\tfunction (node, builder) {\n\t\t\t\tif (!node.$) {\n\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldl, helper, builder, subTree);\n\t\t\t\t} else {\n\t\t\t\t\tvar leaf = node.a;\n\t\t\t\t\tvar offset = builder.a * elm$core$Array$branchFactor;\n\t\t\t\t\tvar mappedLeaf = elm$core$Array$Leaf(\n\t\t\t\t\t\tA3(elm$core$Elm$JsArray$indexedMap, func, offset, leaf));\n\t\t\t\t\treturn {\n\t\t\t\t\t\td: A2(elm$core$List$cons, mappedLeaf, builder.d),\n\t\t\t\t\t\ta: builder.a + 1,\n\t\t\t\t\t\tc: builder.c\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\treturn A2(\n\t\t\telm$core$Array$builderToArray,\n\t\t\ttrue,\n\t\t\tA3(elm$core$Elm$JsArray$foldl, helper, initialBuilder, tree));\n\t});\nvar Kraxorax$elm_matrix_a$Matrix$indexedMap = F2(\n\tfunction (f, _n0) {\n\t\tvar w = _n0.a;\n\t\tvar m = _n0.b;\n\t\treturn A2(\n\t\t\tKraxorax$elm_matrix_a$Matrix$Matrix,\n\t\t\tw,\n\t\t\tA2(\n\t\t\t\telm$core$Array$indexedMap,\n\t\t\t\tF2(\n\t\t\t\t\tfunction (y, row) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\telm$core$Array$indexedMap,\n\t\t\t\t\t\t\tF2(\n\t\t\t\t\t\t\t\tfunction (x, ele) {\n\t\t\t\t\t\t\t\t\treturn A3(f, x, y, ele);\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\trow);\n\t\t\t\t\t}),\n\t\t\t\tm));\n\t});\nvar elm$core$Array$getHelp = F3(\n\tfunction (shift, index, tree) {\n\t\tgetHelp:\n\t\twhile (true) {\n\t\t\tvar pos = elm$core$Array$bitMask & (index >>> shift);\n\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$unsafeGet, pos, tree);\n\t\t\tif (!_n0.$) {\n\t\t\t\tvar subTree = _n0.a;\n\t\t\t\tvar $temp$shift = shift - elm$core$Array$shiftStep,\n\t\t\t\t\t$temp$index = index,\n\t\t\t\t\t$temp$tree = subTree;\n\t\t\t\tshift = $temp$shift;\n\t\t\t\tindex = $temp$index;\n\t\t\t\ttree = $temp$tree;\n\t\t\t\tcontinue getHelp;\n\t\t\t} else {\n\t\t\t\tvar values = _n0.a;\n\t\t\t\treturn A2(elm$core$Elm$JsArray$unsafeGet, elm$core$Array$bitMask & index, values);\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$get = F2(\n\tfunction (index, _n0) {\n\t\tvar len = _n0.a;\n\t\tvar startShift = _n0.b;\n\t\tvar tree = _n0.c;\n\t\tvar tail = _n0.d;\n\t\treturn ((index < 0) || (_Utils_cmp(index, len) > -1)) ? elm$core$Maybe$Nothing : ((_Utils_cmp(\n\t\t\tindex,\n\t\t\telm$core$Array$tailIndex(len)) > -1) ? elm$core$Maybe$Just(\n\t\t\tA2(elm$core$Elm$JsArray$unsafeGet, elm$core$Array$bitMask & index, tail)) : elm$core$Maybe$Just(\n\t\t\tA3(elm$core$Array$getHelp, startShift, index, tree)));\n\t});\nvar author$project$MatrixUtils$randomFieldMatrix = function (seed) {\n\treturn A2(\n\t\tKraxorax$elm_matrix_a$Matrix$indexedMap,\n\t\tF3(\n\t\t\tfunction (x, y, cell) {\n\t\t\t\tvar seedIndex = x + (y * author$project$MatrixUtils$sideSize);\n\t\t\t\tvar alive = function () {\n\t\t\t\t\tvar _n0 = A2(elm$core$Array$get, seedIndex, seed);\n\t\t\t\t\tif (!_n0.$) {\n\t\t\t\t\t\tvar value = _n0.a;\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}();\n\t\t\t\treturn A4(\n\t\t\t\t\tauthor$project$Types$Cell,\n\t\t\t\t\tx,\n\t\t\t\t\ty,\n\t\t\t\t\tA2(author$project$MatrixUtils$cellId, x, y),\n\t\t\t\t\talive);\n\t\t\t}),\n\t\tA3(\n\t\t\tKraxorax$elm_matrix_a$Matrix$generate,\n\t\t\tauthor$project$MatrixUtils$sideSize,\n\t\t\tauthor$project$MatrixUtils$sideSize,\n\t\t\tF2(\n\t\t\t\tfunction (x, y) {\n\t\t\t\t\treturn A4(\n\t\t\t\t\t\tauthor$project$Types$Cell,\n\t\t\t\t\t\tx,\n\t\t\t\t\t\ty,\n\t\t\t\t\t\tA2(author$project$MatrixUtils$cellId, x, y),\n\t\t\t\t\t\tfalse);\n\t\t\t\t})));\n};\nvar author$project$Main$handleRandomSeed = F2(\n\tfunction (model, seed) {\n\t\treturn _Utils_Tuple2(\n\t\t\t_Utils_update(\n\t\t\t\tmodel,\n\t\t\t\t{\n\t\t\t\t\tv: _List_Nil,\n\t\t\t\t\to: 1,\n\t\t\t\t\tm: author$project$MatrixUtils$randomFieldMatrix(\n\t\t\t\t\t\telm$core$Array$fromList(seed)),\n\t\t\t\t\tL: 'random'\n\t\t\t\t}),\n\t\t\telm$core$Platform$Cmd$none);\n\t});\nvar author$project$Main$handleSelectPattern = F2(\n\tfunction (model, patternName) {\n\t\treturn _Utils_Tuple2(\n\t\t\t_Utils_update(\n\t\t\t\tmodel,\n\t\t\t\t{\n\t\t\t\t\tv: _List_Nil,\n\t\t\t\t\to: 1,\n\t\t\t\t\tm: author$project$MatrixUtils$fieldMatrix(patternName),\n\t\t\t\t\tL: patternName\n\t\t\t\t}),\n\t\t\telm$core$Platform$Cmd$none);\n\t});\nvar author$project$Msgs$RandomField = function (a) {\n\treturn {$: 4, a: a};\n};\nvar elm$random$Random$Generate = elm$core$Basics$identity;\nvar elm$random$Random$Seed = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$random$Random$next = function (_n0) {\n\tvar state0 = _n0.a;\n\tvar incr = _n0.b;\n\treturn A2(elm$random$Random$Seed, ((state0 * 1664525) + incr) >>> 0, incr);\n};\nvar elm$random$Random$initialSeed = function (x) {\n\tvar _n0 = elm$random$Random$next(\n\t\tA2(elm$random$Random$Seed, 0, 1013904223));\n\tvar state1 = _n0.a;\n\tvar incr = _n0.b;\n\tvar state2 = (state1 + x) >>> 0;\n\treturn elm$random$Random$next(\n\t\tA2(elm$random$Random$Seed, state2, incr));\n};\nvar elm$time$Time$posixToMillis = function (_n0) {\n\tvar millis = _n0;\n\treturn millis;\n};\nvar elm$random$Random$init = A2(\n\telm$core$Task$andThen,\n\tfunction (time) {\n\t\treturn elm$core$Task$succeed(\n\t\t\telm$random$Random$initialSeed(\n\t\t\t\telm$time$Time$posixToMillis(time)));\n\t},\n\telm$time$Time$now);\nvar elm$random$Random$step = F2(\n\tfunction (_n0, seed) {\n\t\tvar generator = _n0;\n\t\treturn generator(seed);\n\t});\nvar elm$random$Random$onEffects = F3(\n\tfunction (router, commands, seed) {\n\t\tif (!commands.b) {\n\t\t\treturn elm$core$Task$succeed(seed);\n\t\t} else {\n\t\t\tvar generator = commands.a;\n\t\t\tvar rest = commands.b;\n\t\t\tvar _n1 = A2(elm$random$Random$step, generator, seed);\n\t\t\tvar value = _n1.a;\n\t\t\tvar newSeed = _n1.b;\n\t\t\treturn A2(\n\t\t\t\telm$core$Task$andThen,\n\t\t\t\tfunction (_n2) {\n\t\t\t\t\treturn A3(elm$random$Random$onEffects, router, rest, newSeed);\n\t\t\t\t},\n\t\t\t\tA2(elm$core$Platform$sendToApp, router, value));\n\t\t}\n\t});\nvar elm$random$Random$onSelfMsg = F3(\n\tfunction (_n0, _n1, seed) {\n\t\treturn elm$core$Task$succeed(seed);\n\t});\nvar elm$random$Random$Generator = elm$core$Basics$identity;\nvar elm$random$Random$map = F2(\n\tfunction (func, _n0) {\n\t\tvar genA = _n0;\n\t\treturn function (seed0) {\n\t\t\tvar _n1 = genA(seed0);\n\t\t\tvar a = _n1.a;\n\t\t\tvar seed1 = _n1.b;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\tfunc(a),\n\t\t\t\tseed1);\n\t\t};\n\t});\nvar elm$random$Random$cmdMap = F2(\n\tfunction (func, _n0) {\n\t\tvar generator = _n0;\n\t\treturn A2(elm$random$Random$map, func, generator);\n\t});\n_Platform_effectManagers['Random'] = _Platform_createManager(elm$random$Random$init, elm$random$Random$onEffects, elm$random$Random$onSelfMsg, elm$random$Random$cmdMap);\nvar elm$random$Random$command = _Platform_leaf('Random');\nvar elm$random$Random$generate = F2(\n\tfunction (tagger, generator) {\n\t\treturn elm$random$Random$command(\n\t\t\tA2(elm$random$Random$map, tagger, generator));\n\t});\nvar elm$random$Random$listHelp = F4(\n\tfunction (revList, n, gen, seed) {\n\t\tlistHelp:\n\t\twhile (true) {\n\t\t\tif (n < 1) {\n\t\t\t\treturn _Utils_Tuple2(revList, seed);\n\t\t\t} else {\n\t\t\t\tvar _n0 = gen(seed);\n\t\t\t\tvar value = _n0.a;\n\t\t\t\tvar newSeed = _n0.b;\n\t\t\t\tvar $temp$revList = A2(elm$core$List$cons, value, revList),\n\t\t\t\t\t$temp$n = n - 1,\n\t\t\t\t\t$temp$gen = gen,\n\t\t\t\t\t$temp$seed = newSeed;\n\t\t\t\trevList = $temp$revList;\n\t\t\t\tn = $temp$n;\n\t\t\t\tgen = $temp$gen;\n\t\t\t\tseed = $temp$seed;\n\t\t\t\tcontinue listHelp;\n\t\t\t}\n\t\t}\n\t});\nvar elm$random$Random$list = F2(\n\tfunction (n, _n0) {\n\t\tvar gen = _n0;\n\t\treturn function (seed) {\n\t\t\treturn A4(elm$random$Random$listHelp, _List_Nil, n, gen, seed);\n\t\t};\n\t});\nvar elm$core$Basics$negate = function (n) {\n\treturn -n;\n};\nvar elm$core$Basics$abs = function (n) {\n\treturn (n < 0) ? (-n) : n;\n};\nvar elm$core$List$sum = function (numbers) {\n\treturn A3(elm$core$List$foldl, elm$core$Basics$add, 0, numbers);\n};\nvar elm$core$Bitwise$xor = _Bitwise_xor;\nvar elm$random$Random$peel = function (_n0) {\n\tvar state = _n0.a;\n\tvar word = (state ^ (state >>> ((state >>> 28) + 4))) * 277803737;\n\treturn ((word >>> 22) ^ word) >>> 0;\n};\nvar elm$random$Random$float = F2(\n\tfunction (a, b) {\n\t\treturn function (seed0) {\n\t\t\tvar seed1 = elm$random$Random$next(seed0);\n\t\t\tvar range = elm$core$Basics$abs(b - a);\n\t\t\tvar n1 = elm$random$Random$peel(seed1);\n\t\t\tvar n0 = elm$random$Random$peel(seed0);\n\t\t\tvar lo = (134217727 & n1) * 1.0;\n\t\t\tvar hi = (67108863 & n0) * 1.0;\n\t\t\tvar val = ((hi * 1.34217728e8) + lo) / 9.007199254740992e15;\n\t\t\tvar scaled = (val * range) + a;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\tscaled,\n\t\t\t\telm$random$Random$next(seed1));\n\t\t};\n\t});\nvar elm$random$Random$getByWeight = F3(\n\tfunction (_n0, others, countdown) {\n\t\tgetByWeight:\n\t\twhile (true) {\n\t\t\tvar weight = _n0.a;\n\t\t\tvar value = _n0.b;\n\t\t\tif (!others.b) {\n\t\t\t\treturn value;\n\t\t\t} else {\n\t\t\t\tvar second = others.a;\n\t\t\t\tvar otherOthers = others.b;\n\t\t\t\tif (_Utils_cmp(\n\t\t\t\t\tcountdown,\n\t\t\t\t\telm$core$Basics$abs(weight)) < 1) {\n\t\t\t\t\treturn value;\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$_n0 = second,\n\t\t\t\t\t\t$temp$others = otherOthers,\n\t\t\t\t\t\t$temp$countdown = countdown - elm$core$Basics$abs(weight);\n\t\t\t\t\t_n0 = $temp$_n0;\n\t\t\t\t\tothers = $temp$others;\n\t\t\t\t\tcountdown = $temp$countdown;\n\t\t\t\t\tcontinue getByWeight;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$random$Random$weighted = F2(\n\tfunction (first, others) {\n\t\tvar normalize = function (_n0) {\n\t\t\tvar weight = _n0.a;\n\t\t\treturn elm$core$Basics$abs(weight);\n\t\t};\n\t\tvar total = normalize(first) + elm$core$List$sum(\n\t\t\tA2(elm$core$List$map, normalize, others));\n\t\treturn A2(\n\t\t\telm$random$Random$map,\n\t\t\tA2(elm$random$Random$getByWeight, first, others),\n\t\t\tA2(elm$random$Random$float, 0, total));\n\t});\nvar author$project$Main$handleSelectRandomPattern = function (model) {\n\treturn _Utils_Tuple2(\n\t\tmodel,\n\t\tA2(\n\t\t\telm$random$Random$generate,\n\t\t\tauthor$project$Msgs$RandomField,\n\t\t\tA2(\n\t\t\t\telm$random$Random$list,\n\t\t\t\t2500,\n\t\t\t\tA2(\n\t\t\t\t\telm$random$Random$weighted,\n\t\t\t\t\t_Utils_Tuple2(20, true),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t_Utils_Tuple2(80, false)\n\t\t\t\t\t\t])))));\n};\nvar author$project$Main$Ticking = 0;\nvar elm$core$Array$setHelp = F4(\n\tfunction (shift, index, value, tree) {\n\t\tvar pos = elm$core$Array$bitMask & (index >>> shift);\n\t\tvar _n0 = A2(elm$core$Elm$JsArray$unsafeGet, pos, tree);\n\t\tif (!_n0.$) {\n\t\t\tvar subTree = _n0.a;\n\t\t\tvar newSub = A4(elm$core$Array$setHelp, shift - elm$core$Array$shiftStep, index, value, subTree);\n\t\t\treturn A3(\n\t\t\t\telm$core$Elm$JsArray$unsafeSet,\n\t\t\t\tpos,\n\t\t\t\telm$core$Array$SubTree(newSub),\n\t\t\t\ttree);\n\t\t} else {\n\t\t\tvar values = _n0.a;\n\t\t\tvar newLeaf = A3(elm$core$Elm$JsArray$unsafeSet, elm$core$Array$bitMask & index, value, values);\n\t\t\treturn A3(\n\t\t\t\telm$core$Elm$JsArray$unsafeSet,\n\t\t\t\tpos,\n\t\t\t\telm$core$Array$Leaf(newLeaf),\n\t\t\t\ttree);\n\t\t}\n\t});\nvar elm$core$Array$set = F3(\n\tfunction (index, value, array) {\n\t\tvar len = array.a;\n\t\tvar startShift = array.b;\n\t\tvar tree = array.c;\n\t\tvar tail = array.d;\n\t\treturn ((index < 0) || (_Utils_cmp(index, len) > -1)) ? array : ((_Utils_cmp(\n\t\t\tindex,\n\t\t\telm$core$Array$tailIndex(len)) > -1) ? A4(\n\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\tlen,\n\t\t\tstartShift,\n\t\t\ttree,\n\t\t\tA3(elm$core$Elm$JsArray$unsafeSet, elm$core$Array$bitMask & index, value, tail)) : A4(\n\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\tlen,\n\t\t\tstartShift,\n\t\t\tA4(elm$core$Array$setHelp, startShift, index, value, tree),\n\t\t\ttail));\n\t});\nvar Kraxorax$elm_matrix_a$Matrix$set = F4(\n\tfunction (x, y, a, _n0) {\n\t\tvar w = _n0.a;\n\t\tvar m = _n0.b;\n\t\treturn A2(\n\t\t\tKraxorax$elm_matrix_a$Matrix$Matrix,\n\t\t\tw,\n\t\t\tfunction () {\n\t\t\t\tvar _n1 = A2(elm$core$Array$get, y, m);\n\t\t\t\tif (!_n1.$) {\n\t\t\t\t\tvar row = _n1.a;\n\t\t\t\t\treturn A3(\n\t\t\t\t\t\telm$core$Array$set,\n\t\t\t\t\t\ty,\n\t\t\t\t\t\tA3(elm$core$Array$set, x, a, row),\n\t\t\t\t\t\tm);\n\t\t\t\t} else {\n\t\t\t\t\treturn m;\n\t\t\t\t}\n\t\t\t}());\n\t});\nvar Kraxorax$elm_matrix_a$Neighbours$Torus = 1;\nvar Kraxorax$elm_matrix_a$Matrix$getRow = F2(\n\tfunction (y, _n0) {\n\t\tvar m = _n0.b;\n\t\tvar _n1 = A2(elm$core$Array$get, y, m);\n\t\tif (!_n1.$) {\n\t\t\tvar x = _n1.a;\n\t\t\treturn elm$core$Result$Ok(x);\n\t\t} else {\n\t\t\treturn elm$core$Result$Err('Matrix: Row index out of bounds');\n\t\t}\n\t});\nvar Kraxorax$elm_matrix_a$Neighbours$flatten = A2(elm$core$Array$foldr, elm$core$Array$append, elm$core$Array$empty);\nvar elm$core$Array$length = function (_n0) {\n\tvar len = _n0.a;\n\treturn len;\n};\nvar Kraxorax$elm_matrix_a$Matrix$height = function (_n0) {\n\tvar m = _n0.b;\n\treturn elm$core$Array$length(m);\n};\nvar elm$core$Result$withDefault = F2(\n\tfunction (def, result) {\n\t\tif (!result.$) {\n\t\t\tvar a = result.a;\n\t\t\treturn a;\n\t\t} else {\n\t\t\treturn def;\n\t\t}\n\t});\nvar Kraxorax$elm_matrix_a$Neighbours$orEmpty = elm$core$Result$withDefault(elm$core$Array$empty);\nvar elm$core$Array$repeat = F2(\n\tfunction (n, e) {\n\t\treturn A2(\n\t\t\telm$core$Array$initialize,\n\t\t\tn,\n\t\t\tfunction (_n0) {\n\t\t\t\treturn e;\n\t\t\t});\n\t});\nvar Kraxorax$elm_matrix_a$Neighbours$getBoundSideRows = F2(\n\tfunction (y, m) {\n\t\treturn (!y) ? A2(\n\t\t\telm$core$Array$repeat,\n\t\t\t1,\n\t\t\tKraxorax$elm_matrix_a$Neighbours$orEmpty(\n\t\t\t\tA2(Kraxorax$elm_matrix_a$Matrix$getRow, 1, m))) : (_Utils_eq(\n\t\t\ty,\n\t\t\tKraxorax$elm_matrix_a$Matrix$height(m) - 1) ? A2(\n\t\t\telm$core$Array$repeat,\n\t\t\t1,\n\t\t\tKraxorax$elm_matrix_a$Neighbours$orEmpty(\n\t\t\t\tA2(Kraxorax$elm_matrix_a$Matrix$getRow, y - 1, m))) : A2(\n\t\t\telm$core$Array$map,\n\t\t\tKraxorax$elm_matrix_a$Neighbours$orEmpty,\n\t\t\telm$core$Array$fromList(\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\tA2(Kraxorax$elm_matrix_a$Matrix$getRow, y - 1, m),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(Kraxorax$elm_matrix_a$Matrix$getRow, y + 1, m)\n\t\t\t\t\t\t])))));\n\t});\nvar Kraxorax$elm_matrix_a$Neighbours$modulo = F2(\n\tfunction (a, m) {\n\t\treturn (a < 0) ? (m + a) : ((_Utils_cmp(a, m) > -1) ? (m - a) : a);\n\t});\nvar elm$core$List$drop = F2(\n\tfunction (n, list) {\n\t\tdrop:\n\t\twhile (true) {\n\t\t\tif (n <= 0) {\n\t\t\t\treturn list;\n\t\t\t} else {\n\t\t\t\tif (!list.b) {\n\t\t\t\t\treturn list;\n\t\t\t\t} else {\n\t\t\t\t\tvar x = list.a;\n\t\t\t\t\tvar xs = list.b;\n\t\t\t\t\tvar $temp$n = n - 1,\n\t\t\t\t\t\t$temp$list = xs;\n\t\t\t\t\tn = $temp$n;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tcontinue drop;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$sliceLeft = F2(\n\tfunction (from, array) {\n\t\tvar len = array.a;\n\t\tvar tree = array.c;\n\t\tvar tail = array.d;\n\t\tif (!from) {\n\t\t\treturn array;\n\t\t} else {\n\t\t\tif (_Utils_cmp(\n\t\t\t\tfrom,\n\t\t\t\telm$core$Array$tailIndex(len)) > -1) {\n\t\t\t\treturn A4(\n\t\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\t\tlen - from,\n\t\t\t\t\telm$core$Array$shiftStep,\n\t\t\t\t\telm$core$Elm$JsArray$empty,\n\t\t\t\t\tA3(\n\t\t\t\t\t\telm$core$Elm$JsArray$slice,\n\t\t\t\t\t\tfrom - elm$core$Array$tailIndex(len),\n\t\t\t\t\t\telm$core$Elm$JsArray$length(tail),\n\t\t\t\t\t\ttail));\n\t\t\t} else {\n\t\t\t\tvar skipNodes = (from / elm$core$Array$branchFactor) | 0;\n\t\t\t\tvar helper = F2(\n\t\t\t\t\tfunction (node, acc) {\n\t\t\t\t\t\tif (!node.$) {\n\t\t\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldr, helper, acc, subTree);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar leaf = node.a;\n\t\t\t\t\t\t\treturn A2(elm$core$List$cons, leaf, acc);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\tvar leafNodes = A3(\n\t\t\t\t\telm$core$Elm$JsArray$foldr,\n\t\t\t\t\thelper,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[tail]),\n\t\t\t\t\ttree);\n\t\t\t\tvar nodesToInsert = A2(elm$core$List$drop, skipNodes, leafNodes);\n\t\t\t\tif (!nodesToInsert.b) {\n\t\t\t\t\treturn elm$core$Array$empty;\n\t\t\t\t} else {\n\t\t\t\t\tvar head = nodesToInsert.a;\n\t\t\t\t\tvar rest = nodesToInsert.b;\n\t\t\t\t\tvar firstSlice = from - (skipNodes * elm$core$Array$branchFactor);\n\t\t\t\t\tvar initialBuilder = {\n\t\t\t\t\t\td: _List_Nil,\n\t\t\t\t\t\ta: 0,\n\t\t\t\t\t\tc: A3(\n\t\t\t\t\t\t\telm$core$Elm$JsArray$slice,\n\t\t\t\t\t\t\tfirstSlice,\n\t\t\t\t\t\t\telm$core$Elm$JsArray$length(head),\n\t\t\t\t\t\t\thead)\n\t\t\t\t\t};\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\telm$core$Array$builderToArray,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\tA3(elm$core$List$foldl, elm$core$Array$appendHelpBuilder, initialBuilder, rest));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$fetchNewTail = F4(\n\tfunction (shift, end, treeEnd, tree) {\n\t\tfetchNewTail:\n\t\twhile (true) {\n\t\t\tvar pos = elm$core$Array$bitMask & (treeEnd >>> shift);\n\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$unsafeGet, pos, tree);\n\t\t\tif (!_n0.$) {\n\t\t\t\tvar sub = _n0.a;\n\t\t\t\tvar $temp$shift = shift - elm$core$Array$shiftStep,\n\t\t\t\t\t$temp$end = end,\n\t\t\t\t\t$temp$treeEnd = treeEnd,\n\t\t\t\t\t$temp$tree = sub;\n\t\t\t\tshift = $temp$shift;\n\t\t\t\tend = $temp$end;\n\t\t\t\ttreeEnd = $temp$treeEnd;\n\t\t\t\ttree = $temp$tree;\n\t\t\t\tcontinue fetchNewTail;\n\t\t\t} else {\n\t\t\t\tvar values = _n0.a;\n\t\t\t\treturn A3(elm$core$Elm$JsArray$slice, 0, elm$core$Array$bitMask & end, values);\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$hoistTree = F3(\n\tfunction (oldShift, newShift, tree) {\n\t\thoistTree:\n\t\twhile (true) {\n\t\t\tif ((_Utils_cmp(oldShift, newShift) < 1) || (!elm$core$Elm$JsArray$length(tree))) {\n\t\t\t\treturn tree;\n\t\t\t} else {\n\t\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$unsafeGet, 0, tree);\n\t\t\t\tif (!_n0.$) {\n\t\t\t\t\tvar sub = _n0.a;\n\t\t\t\t\tvar $temp$oldShift = oldShift - elm$core$Array$shiftStep,\n\t\t\t\t\t\t$temp$newShift = newShift,\n\t\t\t\t\t\t$temp$tree = sub;\n\t\t\t\t\toldShift = $temp$oldShift;\n\t\t\t\t\tnewShift = $temp$newShift;\n\t\t\t\t\ttree = $temp$tree;\n\t\t\t\t\tcontinue hoistTree;\n\t\t\t\t} else {\n\t\t\t\t\treturn tree;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$sliceTree = F3(\n\tfunction (shift, endIdx, tree) {\n\t\tvar lastPos = elm$core$Array$bitMask & (endIdx >>> shift);\n\t\tvar _n0 = A2(elm$core$Elm$JsArray$unsafeGet, lastPos, tree);\n\t\tif (!_n0.$) {\n\t\t\tvar sub = _n0.a;\n\t\t\tvar newSub = A3(elm$core$Array$sliceTree, shift - elm$core$Array$shiftStep, endIdx, sub);\n\t\t\treturn (!elm$core$Elm$JsArray$length(newSub)) ? A3(elm$core$Elm$JsArray$slice, 0, lastPos, tree) : A3(\n\t\t\t\telm$core$Elm$JsArray$unsafeSet,\n\t\t\t\tlastPos,\n\t\t\t\telm$core$Array$SubTree(newSub),\n\t\t\t\tA3(elm$core$Elm$JsArray$slice, 0, lastPos + 1, tree));\n\t\t} else {\n\t\t\treturn A3(elm$core$Elm$JsArray$slice, 0, lastPos, tree);\n\t\t}\n\t});\nvar elm$core$Array$sliceRight = F2(\n\tfunction (end, array) {\n\t\tvar len = array.a;\n\t\tvar startShift = array.b;\n\t\tvar tree = array.c;\n\t\tvar tail = array.d;\n\t\tif (_Utils_eq(end, len)) {\n\t\t\treturn array;\n\t\t} else {\n\t\t\tif (_Utils_cmp(\n\t\t\t\tend,\n\t\t\t\telm$core$Array$tailIndex(len)) > -1) {\n\t\t\t\treturn A4(\n\t\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\t\tend,\n\t\t\t\t\tstartShift,\n\t\t\t\t\ttree,\n\t\t\t\t\tA3(elm$core$Elm$JsArray$slice, 0, elm$core$Array$bitMask & end, tail));\n\t\t\t} else {\n\t\t\t\tvar endIdx = elm$core$Array$tailIndex(end);\n\t\t\t\tvar depth = elm$core$Basics$floor(\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$Basics$logBase,\n\t\t\t\t\t\telm$core$Array$branchFactor,\n\t\t\t\t\t\tA2(elm$core$Basics$max, 1, endIdx - 1)));\n\t\t\t\tvar newShift = A2(elm$core$Basics$max, 5, depth * elm$core$Array$shiftStep);\n\t\t\t\treturn A4(\n\t\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\t\tend,\n\t\t\t\t\tnewShift,\n\t\t\t\t\tA3(\n\t\t\t\t\t\telm$core$Array$hoistTree,\n\t\t\t\t\t\tstartShift,\n\t\t\t\t\t\tnewShift,\n\t\t\t\t\t\tA3(elm$core$Array$sliceTree, startShift, endIdx, tree)),\n\t\t\t\t\tA4(elm$core$Array$fetchNewTail, startShift, end, endIdx, tree));\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$translateIndex = F2(\n\tfunction (index, _n0) {\n\t\tvar len = _n0.a;\n\t\tvar posIndex = (index < 0) ? (len + index) : index;\n\t\treturn (posIndex < 0) ? 0 : ((_Utils_cmp(posIndex, len) > 0) ? len : posIndex);\n\t});\nvar elm$core$Array$slice = F3(\n\tfunction (from, to, array) {\n\t\tvar correctTo = A2(elm$core$Array$translateIndex, to, array);\n\t\tvar correctFrom = A2(elm$core$Array$translateIndex, from, array);\n\t\treturn (_Utils_cmp(correctFrom, correctTo) > 0) ? elm$core$Array$empty : A2(\n\t\t\telm$core$Array$sliceLeft,\n\t\t\tcorrectFrom,\n\t\t\tA2(elm$core$Array$sliceRight, correctTo, array));\n\t});\nvar Kraxorax$elm_matrix_a$Neighbours$unboundHorizontalCenter = F2(\n\tfunction (x, row) {\n\t\tvar mw = elm$core$Array$length(row);\n\t\tvar start = A2(Kraxorax$elm_matrix_a$Neighbours$modulo, x - 1, mw);\n\t\tvar end = A2(Kraxorax$elm_matrix_a$Neighbours$modulo, x + 1, mw);\n\t\treturn A2(\n\t\t\telm$core$Array$append,\n\t\t\tA3(elm$core$Array$slice, end, end + 1, row),\n\t\t\tA3(elm$core$Array$slice, start, start + 1, row));\n\t});\nvar Kraxorax$elm_matrix_a$Neighbours$unboundHorizontalSide = F2(\n\tfunction (x, row) {\n\t\tvar mw = elm$core$Array$length(row);\n\t\tvar start = A2(Kraxorax$elm_matrix_a$Neighbours$modulo, x - 1, mw);\n\t\tvar end = A2(Kraxorax$elm_matrix_a$Neighbours$modulo, x + 1, mw);\n\t\treturn (_Utils_cmp(end, start) < 0) ? A2(\n\t\t\telm$core$Array$append,\n\t\t\tA3(elm$core$Array$slice, start, start + 3, row),\n\t\t\tA3(elm$core$Array$slice, 0, end + 1, row)) : A3(elm$core$Array$slice, start, end + 1, row);\n\t});\nvar Kraxorax$elm_matrix_a$Neighbours$neighboursOnHorizontalStrip = F3(\n\tfunction (x, y, m) {\n\t\tvar rowSides = A2(Kraxorax$elm_matrix_a$Neighbours$getBoundSideRows, y, m);\n\t\tvar sideNbrs = Kraxorax$elm_matrix_a$Neighbours$flatten(\n\t\t\tA2(\n\t\t\t\telm$core$Array$map,\n\t\t\t\tKraxorax$elm_matrix_a$Neighbours$unboundHorizontalSide(x),\n\t\t\t\trowSides));\n\t\tvar rowCenter = Kraxorax$elm_matrix_a$Neighbours$orEmpty(\n\t\t\tA2(Kraxorax$elm_matrix_a$Matrix$getRow, y, m));\n\t\tvar centerNbrs = A2(Kraxorax$elm_matrix_a$Neighbours$unboundHorizontalCenter, x, rowCenter);\n\t\treturn A2(elm$core$Array$append, sideNbrs, centerNbrs);\n\t});\nvar Kraxorax$elm_matrix_a$Neighbours$boundHorizontalCenter = F2(\n\tfunction (x, row) {\n\t\tvar start = x - 1;\n\t\tvar end = x + 1;\n\t\treturn (start < 0) ? A3(elm$core$Array$slice, end, end + 1, row) : A2(\n\t\t\telm$core$Array$append,\n\t\t\tA3(elm$core$Array$slice, end, end + 1, row),\n\t\t\tA3(elm$core$Array$slice, start, start + 1, row));\n\t});\nvar Kraxorax$elm_matrix_a$Neighbours$boundHorizontalSide = F2(\n\tfunction (x, row) {\n\t\tvar start = x - 1;\n\t\tvar end = x + 1;\n\t\treturn A3(\n\t\t\telm$core$Array$slice,\n\t\t\tA2(elm$core$Basics$max, 0, start),\n\t\t\tend + 1,\n\t\t\trow);\n\t});\nvar Kraxorax$elm_matrix_a$Neighbours$neighboursOnPlane = F3(\n\tfunction (x, y, m) {\n\t\tvar rowSides = A2(Kraxorax$elm_matrix_a$Neighbours$getBoundSideRows, y, m);\n\t\tvar sideNbrs = Kraxorax$elm_matrix_a$Neighbours$flatten(\n\t\t\tA2(\n\t\t\t\telm$core$Array$map,\n\t\t\t\tfunction (row) {\n\t\t\t\t\treturn A2(Kraxorax$elm_matrix_a$Neighbours$boundHorizontalSide, x, row);\n\t\t\t\t},\n\t\t\t\trowSides));\n\t\tvar rowCenter = Kraxorax$elm_matrix_a$Neighbours$orEmpty(\n\t\t\tA2(Kraxorax$elm_matrix_a$Matrix$getRow, y, m));\n\t\tvar centerNbrs = A2(Kraxorax$elm_matrix_a$Neighbours$boundHorizontalCenter, x, rowCenter);\n\t\treturn A2(elm$core$Array$append, sideNbrs, centerNbrs);\n\t});\nvar Kraxorax$elm_matrix_a$Neighbours$getUnboundSideRows = F2(\n\tfunction (y, m) {\n\t\tvar mh = Kraxorax$elm_matrix_a$Matrix$height(m);\n\t\treturn elm$core$Array$fromList(\n\t\t\tA2(\n\t\t\t\telm$core$List$cons,\n\t\t\t\tKraxorax$elm_matrix_a$Neighbours$orEmpty(\n\t\t\t\t\tA2(\n\t\t\t\t\t\tKraxorax$elm_matrix_a$Matrix$getRow,\n\t\t\t\t\t\tA2(Kraxorax$elm_matrix_a$Neighbours$modulo, y - 1, mh),\n\t\t\t\t\t\tm)),\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$Result$withDefault,\n\t\t\t\t\t\telm$core$Array$empty,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\tKraxorax$elm_matrix_a$Matrix$getRow,\n\t\t\t\t\t\t\tA2(Kraxorax$elm_matrix_a$Neighbours$modulo, y + 1, mh),\n\t\t\t\t\t\t\tm)),\n\t\t\t\t\t_List_Nil)));\n\t});\nvar Kraxorax$elm_matrix_a$Neighbours$neighboursOnTorus = F3(\n\tfunction (x, y, m) {\n\t\tvar rowSides = A2(Kraxorax$elm_matrix_a$Neighbours$getUnboundSideRows, y, m);\n\t\tvar sideNbrs = Kraxorax$elm_matrix_a$Neighbours$flatten(\n\t\t\tA2(\n\t\t\t\telm$core$Array$map,\n\t\t\t\tfunction (row) {\n\t\t\t\t\treturn A2(Kraxorax$elm_matrix_a$Neighbours$unboundHorizontalSide, x, row);\n\t\t\t\t},\n\t\t\t\trowSides));\n\t\tvar rowCenter = Kraxorax$elm_matrix_a$Neighbours$orEmpty(\n\t\t\tA2(Kraxorax$elm_matrix_a$Matrix$getRow, y, m));\n\t\tvar centerNbrs = A2(Kraxorax$elm_matrix_a$Neighbours$unboundHorizontalCenter, x, rowCenter);\n\t\treturn A2(elm$core$Array$append, sideNbrs, centerNbrs);\n\t});\nvar Kraxorax$elm_matrix_a$Neighbours$neighboursOnVerticalStrip = F3(\n\tfunction (x, y, m) {\n\t\tvar rowSides = A2(Kraxorax$elm_matrix_a$Neighbours$getUnboundSideRows, y, m);\n\t\tvar sideNbrs = Kraxorax$elm_matrix_a$Neighbours$flatten(\n\t\t\tA2(\n\t\t\t\telm$core$Array$map,\n\t\t\t\tfunction (row) {\n\t\t\t\t\treturn A2(Kraxorax$elm_matrix_a$Neighbours$boundHorizontalSide, x, row);\n\t\t\t\t},\n\t\t\t\trowSides));\n\t\tvar rowCenter = Kraxorax$elm_matrix_a$Neighbours$orEmpty(\n\t\t\tA2(Kraxorax$elm_matrix_a$Matrix$getRow, y, m));\n\t\tvar centerNbrs = A2(Kraxorax$elm_matrix_a$Neighbours$boundHorizontalCenter, x, rowCenter);\n\t\treturn A2(elm$core$Array$append, sideNbrs, centerNbrs);\n\t});\nvar Kraxorax$elm_matrix_a$Neighbours$neighbours = function (mt) {\n\tswitch (mt) {\n\t\tcase 0:\n\t\t\treturn Kraxorax$elm_matrix_a$Neighbours$neighboursOnPlane;\n\t\tcase 1:\n\t\t\treturn Kraxorax$elm_matrix_a$Neighbours$neighboursOnTorus;\n\t\tcase 3:\n\t\t\treturn Kraxorax$elm_matrix_a$Neighbours$neighboursOnVerticalStrip;\n\t\tdefault:\n\t\t\treturn Kraxorax$elm_matrix_a$Neighbours$neighboursOnHorizontalStrip;\n\t}\n};\nvar author$project$MatrixUtils$cellNeighbours = F2(\n\tfunction (matrix, _n0) {\n\t\tvar posX = _n0.aU;\n\t\tvar posY = _n0.aV;\n\t\treturn elm$core$Array$toList(\n\t\t\tA4(Kraxorax$elm_matrix_a$Neighbours$neighbours, 1, posX, posY, matrix));\n\t});\nvar author$project$MatrixUtils$liveNeighboursCount = F2(\n\tfunction (matrix, cell) {\n\t\treturn elm$core$List$length(\n\t\t\tA2(\n\t\t\t\telm$core$List$filter,\n\t\t\t\tfunction ($) {\n\t\t\t\t\treturn $.aC;\n\t\t\t\t},\n\t\t\t\tA2(author$project$MatrixUtils$cellNeighbours, matrix, cell)));\n\t});\nvar author$project$MatrixUtils$isAlive = F2(\n\tfunction (matrix, cell) {\n\t\tvar count = A2(author$project$MatrixUtils$liveNeighboursCount, matrix, cell);\n\t\tvar _n0 = cell.aC;\n\t\tif (_n0) {\n\t\t\treturn ((count === 2) || (count === 3)) ? true : false;\n\t\t} else {\n\t\t\treturn count === 3;\n\t\t}\n\t});\nvar author$project$MatrixUtils$detectFate = F2(\n\tfunction (matrix, cell) {\n\t\treturn _Utils_update(\n\t\t\tcell,\n\t\t\t{\n\t\t\t\taC: A2(author$project$MatrixUtils$isAlive, matrix, cell)\n\t\t\t});\n\t});\nvar elm$core$List$append = F2(\n\tfunction (xs, ys) {\n\t\tif (!ys.b) {\n\t\t\treturn xs;\n\t\t} else {\n\t\t\treturn A3(elm$core$List$foldr, elm$core$List$cons, ys, xs);\n\t\t}\n\t});\nvar elm$core$List$concat = function (lists) {\n\treturn A3(elm$core$List$foldr, elm$core$List$append, _List_Nil, lists);\n};\nvar elm$core$Set$Set_elm_builtin = elm$core$Basics$identity;\nvar elm$core$Set$empty = elm$core$Dict$empty;\nvar elm$core$Set$insert = F2(\n\tfunction (key, _n0) {\n\t\tvar dict = _n0;\n\t\treturn A3(elm$core$Dict$insert, key, 0, dict);\n\t});\nvar elm$core$Dict$member = F2(\n\tfunction (key, dict) {\n\t\tvar _n0 = A2(elm$core$Dict$get, key, dict);\n\t\tif (!_n0.$) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t});\nvar elm$core$Set$member = F2(\n\tfunction (key, _n0) {\n\t\tvar dict = _n0;\n\t\treturn A2(elm$core$Dict$member, key, dict);\n\t});\nvar elm_community$list_extra$List$Extra$uniqueHelp = F4(\n\tfunction (f, existing, remaining, accumulator) {\n\t\tuniqueHelp:\n\t\twhile (true) {\n\t\t\tif (!remaining.b) {\n\t\t\t\treturn elm$core$List$reverse(accumulator);\n\t\t\t} else {\n\t\t\t\tvar first = remaining.a;\n\t\t\t\tvar rest = remaining.b;\n\t\t\t\tvar computedFirst = f(first);\n\t\t\t\tif (A2(elm$core$Set$member, computedFirst, existing)) {\n\t\t\t\t\tvar $temp$f = f,\n\t\t\t\t\t\t$temp$existing = existing,\n\t\t\t\t\t\t$temp$remaining = rest,\n\t\t\t\t\t\t$temp$accumulator = accumulator;\n\t\t\t\t\tf = $temp$f;\n\t\t\t\t\texisting = $temp$existing;\n\t\t\t\t\tremaining = $temp$remaining;\n\t\t\t\t\taccumulator = $temp$accumulator;\n\t\t\t\t\tcontinue uniqueHelp;\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$f = f,\n\t\t\t\t\t\t$temp$existing = A2(elm$core$Set$insert, computedFirst, existing),\n\t\t\t\t\t\t$temp$remaining = rest,\n\t\t\t\t\t\t$temp$accumulator = A2(elm$core$List$cons, first, accumulator);\n\t\t\t\t\tf = $temp$f;\n\t\t\t\t\texisting = $temp$existing;\n\t\t\t\t\tremaining = $temp$remaining;\n\t\t\t\t\taccumulator = $temp$accumulator;\n\t\t\t\t\tcontinue uniqueHelp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm_community$list_extra$List$Extra$uniqueBy = F2(\n\tfunction (f, list) {\n\t\treturn A4(elm_community$list_extra$List$Extra$uniqueHelp, f, elm$core$Set$empty, list, _List_Nil);\n\t});\nvar author$project$Main$evolve = F2(\n\tfunction (generation, live) {\n\t\treturn A3(\n\t\t\telm$core$List$foldl,\n\t\t\tF2(\n\t\t\t\tfunction (cell, _n0) {\n\t\t\t\t\tvar resultGen = _n0.a;\n\t\t\t\t\tvar resultAlives = _n0.b;\n\t\t\t\t\tvar fate = A2(author$project$MatrixUtils$detectFate, generation, cell);\n\t\t\t\t\tvar newGeneration = A4(Kraxorax$elm_matrix_a$Matrix$set, cell.aU, cell.aV, fate, resultGen);\n\t\t\t\t\tvar newLiveList = fate.aC ? A2(elm$core$List$cons, fate, resultAlives) : resultAlives;\n\t\t\t\t\treturn _Utils_Tuple2(newGeneration, newLiveList);\n\t\t\t\t}),\n\t\t\t_Utils_Tuple2(generation, _List_Nil),\n\t\t\tA2(\n\t\t\t\telm_community$list_extra$List$Extra$uniqueBy,\n\t\t\t\tfunction ($) {\n\t\t\t\t\treturn $.aM;\n\t\t\t\t},\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$append,\n\t\t\t\t\tlive,\n\t\t\t\t\telm$core$List$concat(\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\telm$core$List$map,\n\t\t\t\t\t\t\tauthor$project$MatrixUtils$cellNeighbours(generation),\n\t\t\t\t\t\t\tlive)))));\n\t});\nvar author$project$Main$fetchLiveCells = function (_n0) {\n\tvar aliveCells = _n0.v;\n\tvar generation = _n0.m;\n\tif (!aliveCells.b) {\n\t\treturn author$project$MatrixUtils$getAliveCells(generation);\n\t} else {\n\t\treturn aliveCells;\n\t}\n};\nvar author$project$Main$handleTick = function (model) {\n\tvar live = author$project$Main$fetchLiveCells(model);\n\tvar gameStatus = function () {\n\t\tif (!live.b) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}();\n\tvar _n0 = A2(author$project$Main$evolve, model.m, live);\n\tvar newGeneration = _n0.a;\n\tvar newLiveCells = _n0.b;\n\treturn _Utils_Tuple2(\n\t\t_Utils_update(\n\t\t\tmodel,\n\t\t\t{v: newLiveCells, o: gameStatus, m: newGeneration}),\n\t\telm$core$Platform$Cmd$none);\n};\nvar author$project$Main$handleTicking = function (model) {\n\tvar gameStatus = function () {\n\t\tvar _n0 = model.o;\n\t\tif (_n0 === 1) {\n\t\t\treturn 0;\n\t\t} else {\n\t\t\treturn 1;\n\t\t}\n\t}();\n\treturn _Utils_Tuple2(\n\t\t_Utils_update(\n\t\t\tmodel,\n\t\t\t{o: gameStatus}),\n\t\telm$core$Platform$Cmd$none);\n};\nvar author$project$Main$update = F2(\n\tfunction (msg, model) {\n\t\tswitch (msg.$) {\n\t\t\tcase 1:\n\t\t\t\treturn author$project$Main$handleTick(model);\n\t\t\tcase 0:\n\t\t\t\tvar id = msg.a;\n\t\t\t\treturn A2(author$project$Main$handleClick, model, id);\n\t\t\tcase 2:\n\t\t\t\treturn author$project$Main$handleTicking(model);\n\t\t\tcase 3:\n\t\t\t\tif (msg.a === 'random') {\n\t\t\t\t\treturn author$project$Main$handleSelectRandomPattern(model);\n\t\t\t\t} else {\n\t\t\t\t\tvar patternName = msg.a;\n\t\t\t\t\treturn A2(author$project$Main$handleSelectPattern, model, patternName);\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\tvar seed = msg.a;\n\t\t\t\treturn A2(author$project$Main$handleRandomSeed, model, seed);\n\t\t}\n\t});\nvar author$project$CellUtils$cellSizeString = '15';\nvar author$project$CellUtils$fillColor = function (alive) {\n\tif (alive) {\n\t\treturn '#5c8d89';\n\t} else {\n\t\treturn '#f9f8eb';\n\t}\n};\nvar author$project$CellUtils$cellSize = 15;\nvar author$project$CellUtils$rectPosition = function (value) {\n\treturn elm$core$String$fromInt(value * author$project$CellUtils$cellSize);\n};\nvar elm$json$Json$Decode$map = _Json_map1;\nvar elm$json$Json$Decode$map2 = _Json_map2;\nvar elm$json$Json$Decode$succeed = _Json_succeed;\nvar elm$virtual_dom$VirtualDom$toHandlerInt = function (handler) {\n\tswitch (handler.$) {\n\t\tcase 0:\n\t\t\treturn 0;\n\t\tcase 1:\n\t\t\treturn 1;\n\t\tcase 2:\n\t\t\treturn 2;\n\t\tdefault:\n\t\t\treturn 3;\n\t}\n};\nvar elm$svg$Svg$trustedNode = _VirtualDom_nodeNS('http://www.w3.org/2000/svg');\nvar elm$svg$Svg$rect = elm$svg$Svg$trustedNode('rect');\nvar elm$svg$Svg$Attributes$fill = _VirtualDom_attribute('fill');\nvar elm$svg$Svg$Attributes$height = _VirtualDom_attribute('height');\nvar elm$svg$Svg$Attributes$stroke = _VirtualDom_attribute('stroke');\nvar elm$svg$Svg$Attributes$width = _VirtualDom_attribute('width');\nvar elm$svg$Svg$Attributes$x = _VirtualDom_attribute('x');\nvar elm$svg$Svg$Attributes$y = _VirtualDom_attribute('y');\nvar elm$virtual_dom$VirtualDom$Normal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$virtual_dom$VirtualDom$on = _VirtualDom_on;\nvar elm$html$Html$Events$on = F2(\n\tfunction (event, decoder) {\n\t\treturn A2(\n\t\t\telm$virtual_dom$VirtualDom$on,\n\t\t\tevent,\n\t\t\telm$virtual_dom$VirtualDom$Normal(decoder));\n\t});\nvar elm$svg$Svg$Events$onClick = function (msg) {\n\treturn A2(\n\t\telm$html$Html$Events$on,\n\t\t'click',\n\t\telm$json$Json$Decode$succeed(msg));\n};\nvar author$project$CellUtils$cellRect = F2(\n\tfunction (_n0, onClickHanlder) {\n\t\tvar posX = _n0.aU;\n\t\tvar posY = _n0.aV;\n\t\tvar alive = _n0.aC;\n\t\tvar id = _n0.aM;\n\t\treturn A2(\n\t\t\telm$svg$Svg$rect,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$svg$Svg$Attributes$x(\n\t\t\t\t\tauthor$project$CellUtils$rectPosition(posX)),\n\t\t\t\t\telm$svg$Svg$Attributes$y(\n\t\t\t\t\tauthor$project$CellUtils$rectPosition(posY)),\n\t\t\t\t\telm$svg$Svg$Attributes$width(author$project$CellUtils$cellSizeString),\n\t\t\t\t\telm$svg$Svg$Attributes$height(author$project$CellUtils$cellSizeString),\n\t\t\t\t\telm$svg$Svg$Attributes$fill(\n\t\t\t\t\tauthor$project$CellUtils$fillColor(alive)),\n\t\t\t\t\telm$svg$Svg$Attributes$stroke('gainsboro'),\n\t\t\t\t\telm$svg$Svg$Events$onClick(\n\t\t\t\t\tonClickHanlder(id))\n\t\t\t\t]),\n\t\t\t_List_Nil);\n\t});\nvar author$project$CellUtils$cellList = F2(\n\tfunction (generation, onClickHanlder) {\n\t\treturn elm$core$Array$toList(\n\t\t\tA2(\n\t\t\t\telm$core$Array$map,\n\t\t\t\tfunction (item) {\n\t\t\t\t\treturn A2(author$project$CellUtils$cellRect, item, onClickHanlder);\n\t\t\t\t},\n\t\t\t\tKraxorax$elm_matrix_a$Matrix$toArray(generation)));\n\t});\nvar author$project$Main$buttonText = function (gameStatus) {\n\tif (gameStatus === 1) {\n\t\treturn 'Start Game';\n\t} else {\n\t\treturn 'Stop Game';\n\t}\n};\nvar author$project$Main$viewBoxParams = '0 0 800 800';\nvar author$project$Main$viewBoxSize = '800';\nvar author$project$Msgs$ClickCell = function (a) {\n\treturn {$: 0, a: a};\n};\nvar author$project$Msgs$SelectPattern = function (a) {\n\treturn {$: 3, a: a};\n};\nvar author$project$Msgs$ToggleTicking = {$: 2};\nvar elm$html$Html$a = _VirtualDom_node('a');\nvar elm$html$Html$button = _VirtualDom_node('button');\nvar elm$html$Html$div = _VirtualDom_node('div');\nvar elm$html$Html$h1 = _VirtualDom_node('h1');\nvar elm$html$Html$option = _VirtualDom_node('option');\nvar elm$html$Html$select = _VirtualDom_node('select');\nvar elm$virtual_dom$VirtualDom$text = _VirtualDom_text;\nvar elm$html$Html$text = elm$virtual_dom$VirtualDom$text;\nvar elm$json$Json$Encode$string = _Json_wrap;\nvar elm$html$Html$Attributes$stringProperty = F2(\n\tfunction (key, string) {\n\t\treturn A2(\n\t\t\t_VirtualDom_property,\n\t\t\tkey,\n\t\t\telm$json$Json$Encode$string(string));\n\t});\nvar elm$html$Html$Attributes$class = elm$html$Html$Attributes$stringProperty('className');\nvar elm$html$Html$Attributes$href = function (url) {\n\treturn A2(\n\t\telm$html$Html$Attributes$stringProperty,\n\t\t'href',\n\t\t_VirtualDom_noJavaScriptUri(url));\n};\nvar elm$html$Html$Attributes$value = elm$html$Html$Attributes$stringProperty('value');\nvar elm$html$Html$Events$onClick = function (msg) {\n\treturn A2(\n\t\telm$html$Html$Events$on,\n\t\t'click',\n\t\telm$json$Json$Decode$succeed(msg));\n};\nvar elm$html$Html$Events$alwaysStop = function (x) {\n\treturn _Utils_Tuple2(x, true);\n};\nvar elm$virtual_dom$VirtualDom$MayStopPropagation = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$html$Html$Events$stopPropagationOn = F2(\n\tfunction (event, decoder) {\n\t\treturn A2(\n\t\t\telm$virtual_dom$VirtualDom$on,\n\t\t\tevent,\n\t\t\telm$virtual_dom$VirtualDom$MayStopPropagation(decoder));\n\t});\nvar elm$json$Json$Decode$field = _Json_decodeField;\nvar elm$json$Json$Decode$at = F2(\n\tfunction (fields, decoder) {\n\t\treturn A3(elm$core$List$foldr, elm$json$Json$Decode$field, decoder, fields);\n\t});\nvar elm$json$Json$Decode$string = _Json_decodeString;\nvar elm$html$Html$Events$targetValue = A2(\n\telm$json$Json$Decode$at,\n\t_List_fromArray(\n\t\t['target', 'value']),\n\telm$json$Json$Decode$string);\nvar elm$html$Html$Events$onInput = function (tagger) {\n\treturn A2(\n\t\telm$html$Html$Events$stopPropagationOn,\n\t\t'input',\n\t\tA2(\n\t\t\telm$json$Json$Decode$map,\n\t\t\telm$html$Html$Events$alwaysStop,\n\t\t\tA2(elm$json$Json$Decode$map, tagger, elm$html$Html$Events$targetValue)));\n};\nvar elm$svg$Svg$svg = elm$svg$Svg$trustedNode('svg');\nvar elm$svg$Svg$Attributes$viewBox = _VirtualDom_attribute('viewBox');\nvar author$project$Main$view = function (_n0) {\n\tvar generation = _n0.m;\n\tvar gameStatus = _n0.o;\n\tvar selectedPattern = _n0.L;\n\treturn A2(\n\t\telm$html$Html$div,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\telm$html$Html$Attributes$class('container')\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$div,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$Attributes$class('row')\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$html$Html$Attributes$class('col-sm-offset-4')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\telm$html$Html$h1,\n\t\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\telm$html$Html$a,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\telm$html$Html$Attributes$href('https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\telm$html$Html$text('Conway\\'s Game of Life')\n\t\t\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$div,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$Attributes$class('row')\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$html$Html$Attributes$class('col-sm-offset-4 field')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\telm$svg$Svg$svg,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\telm$svg$Svg$Attributes$width(author$project$Main$viewBoxSize),\n\t\t\t\t\t\t\t\t\t\telm$svg$Svg$Attributes$height(author$project$Main$viewBoxSize),\n\t\t\t\t\t\t\t\t\t\telm$svg$Svg$Attributes$viewBox(author$project$Main$viewBoxParams)\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\tauthor$project$CellUtils$cellList,\n\t\t\t\t\t\t\t\t\tgeneration,\n\t\t\t\t\t\t\t\t\tfunction (id) {\n\t\t\t\t\t\t\t\t\t\treturn author$project$Msgs$ClickCell(id);\n\t\t\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$div,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$Attributes$class('row')\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$html$Html$Attributes$class('col-sm-offset-4')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\telm$html$Html$button,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\telm$html$Html$Events$onClick(author$project$Msgs$ToggleTicking)\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\telm$html$Html$text(\n\t\t\t\t\t\t\t\t\t\tauthor$project$Main$buttonText(gameStatus))\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$html$Html$Attributes$class('col-sm-1')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\telm$html$Html$select,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\telm$html$Html$Attributes$class('pattern-select'),\n\t\t\t\t\t\t\t\t\t\telm$html$Html$Events$onInput(author$project$Msgs$SelectPattern)\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\telm$html$Html$option,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\telm$html$Html$Attributes$value('glider')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\telm$html$Html$text('Glider')\n\t\t\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\telm$html$Html$option,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\telm$html$Html$Attributes$value('blinkers')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\telm$html$Html$text('Blinker')\n\t\t\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\telm$html$Html$option,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\telm$html$Html$Attributes$value('random')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\telm$html$Html$text('Random')\n\t\t\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$html$Html$Attributes$class('col-sm-1')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\telm$html$Html$button,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\telm$html$Html$Attributes$class('secondary'),\n\t\t\t\t\t\t\t\t\t\telm$html$Html$Events$onClick(\n\t\t\t\t\t\t\t\t\t\tauthor$project$Msgs$SelectPattern(selectedPattern))\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\telm$html$Html$text('Reset')\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t]))\n\t\t\t]));\n};\nvar elm$browser$Browser$External = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$browser$Browser$Internal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$browser$Browser$Dom$NotFound = elm$core$Basics$identity;\nvar elm$core$Basics$never = function (_n0) {\n\tnever:\n\twhile (true) {\n\t\tvar nvr = _n0;\n\t\tvar $temp$_n0 = nvr;\n\t\t_n0 = $temp$_n0;\n\t\tcontinue never;\n\t}\n};\nvar elm$core$Task$Perform = elm$core$Basics$identity;\nvar elm$core$Task$init = elm$core$Task$succeed(0);\nvar elm$core$Task$map = F2(\n\tfunction (func, taskA) {\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\tfunc(a));\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar elm$core$Task$spawnCmd = F2(\n\tfunction (router, _n0) {\n\t\tvar task = _n0;\n\t\treturn _Scheduler_spawn(\n\t\t\tA2(\n\t\t\t\telm$core$Task$andThen,\n\t\t\t\telm$core$Platform$sendToApp(router),\n\t\t\t\ttask));\n\t});\nvar elm$core$Task$onEffects = F3(\n\tfunction (router, commands, state) {\n\t\treturn A2(\n\t\t\telm$core$Task$map,\n\t\t\tfunction (_n0) {\n\t\t\t\treturn 0;\n\t\t\t},\n\t\t\telm$core$Task$sequence(\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\telm$core$Task$spawnCmd(router),\n\t\t\t\t\tcommands)));\n\t});\nvar elm$core$Task$onSelfMsg = F3(\n\tfunction (_n0, _n1, _n2) {\n\t\treturn elm$core$Task$succeed(0);\n\t});\nvar elm$core$Task$cmdMap = F2(\n\tfunction (tagger, _n0) {\n\t\tvar task = _n0;\n\t\treturn A2(elm$core$Task$map, tagger, task);\n\t});\n_Platform_effectManagers['Task'] = _Platform_createManager(elm$core$Task$init, elm$core$Task$onEffects, elm$core$Task$onSelfMsg, elm$core$Task$cmdMap);\nvar elm$core$Task$command = _Platform_leaf('Task');\nvar elm$core$Task$perform = F2(\n\tfunction (toMessage, task) {\n\t\treturn elm$core$Task$command(\n\t\t\tA2(elm$core$Task$map, toMessage, task));\n\t});\nvar elm$core$String$length = _String_length;\nvar elm$core$String$slice = _String_slice;\nvar elm$core$String$dropLeft = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? string : A3(\n\t\t\telm$core$String$slice,\n\t\t\tn,\n\t\t\telm$core$String$length(string),\n\t\t\tstring);\n\t});\nvar elm$core$String$startsWith = _String_startsWith;\nvar elm$url$Url$Http = 0;\nvar elm$url$Url$Https = 1;\nvar elm$core$String$indexes = _String_indexes;\nvar elm$core$String$isEmpty = function (string) {\n\treturn string === '';\n};\nvar elm$core$String$left = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? '' : A3(elm$core$String$slice, 0, n, string);\n\t});\nvar elm$core$String$contains = _String_contains;\nvar elm$core$String$toInt = _String_toInt;\nvar elm$url$Url$Url = F6(\n\tfunction (protocol, host, port_, path, query, fragment) {\n\t\treturn {af: fragment, ah: host, am: path, ao: port_, ar: protocol, as: query};\n\t});\nvar elm$url$Url$chompBeforePath = F5(\n\tfunction (protocol, path, params, frag, str) {\n\t\tif (elm$core$String$isEmpty(str) || A2(elm$core$String$contains, '@', str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, ':', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\tA6(elm$url$Url$Url, protocol, str, elm$core$Maybe$Nothing, path, params, frag));\n\t\t\t} else {\n\t\t\t\tif (!_n0.b.b) {\n\t\t\t\t\tvar i = _n0.a;\n\t\t\t\t\tvar _n1 = elm$core$String$toInt(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str));\n\t\t\t\t\tif (_n1.$ === 1) {\n\t\t\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar port_ = _n1;\n\t\t\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\t\t\tA6(\n\t\t\t\t\t\t\t\telm$url$Url$Url,\n\t\t\t\t\t\t\t\tprotocol,\n\t\t\t\t\t\t\t\tA2(elm$core$String$left, i, str),\n\t\t\t\t\t\t\t\tport_,\n\t\t\t\t\t\t\t\tpath,\n\t\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\t\tfrag));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompBeforeQuery = F4(\n\tfunction (protocol, params, frag, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '/', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A5(elm$url$Url$chompBeforePath, protocol, '/', params, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$url$Url$chompBeforePath,\n\t\t\t\t\tprotocol,\n\t\t\t\t\tA2(elm$core$String$dropLeft, i, str),\n\t\t\t\t\tparams,\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompBeforeFragment = F3(\n\tfunction (protocol, frag, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '?', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A4(elm$url$Url$chompBeforeQuery, protocol, elm$core$Maybe$Nothing, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A4(\n\t\t\t\t\telm$url$Url$chompBeforeQuery,\n\t\t\t\t\tprotocol,\n\t\t\t\t\telm$core$Maybe$Just(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompAfterProtocol = F2(\n\tfunction (protocol, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '#', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A3(elm$url$Url$chompBeforeFragment, protocol, elm$core$Maybe$Nothing, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A3(\n\t\t\t\t\telm$url$Url$chompBeforeFragment,\n\t\t\t\t\tprotocol,\n\t\t\t\t\telm$core$Maybe$Just(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$fromString = function (str) {\n\treturn A2(elm$core$String$startsWith, 'http://', str) ? A2(\n\t\telm$url$Url$chompAfterProtocol,\n\t\t0,\n\t\tA2(elm$core$String$dropLeft, 7, str)) : (A2(elm$core$String$startsWith, 'https://', str) ? A2(\n\t\telm$url$Url$chompAfterProtocol,\n\t\t1,\n\t\tA2(elm$core$String$dropLeft, 8, str)) : elm$core$Maybe$Nothing);\n};\nvar elm$browser$Browser$element = _Browser_element;\nvar author$project$Main$main = elm$browser$Browser$element(\n\t{aO: author$project$Main$init, aX: author$project$Main$subscriptions, aZ: author$project$Main$update, a$: author$project$Main$view});\n_Platform_export({'Main':{'init':author$project$Main$main(\n\telm$json$Json$Decode$succeed(0))(0)}});}(this));","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'mini.css';\nimport './main.css';\nimport { Elm } from './Main.elm';\nimport registerServiceWorker from './registerServiceWorker';\n\nElm.Main.init({\n  node: document.getElementById('root')\n});\n\nregisterServiceWorker();\n"],"sourceRoot":""}